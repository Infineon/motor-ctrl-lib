<?xml version="1.0" encoding="utf-8"?>

<!--****************************************************************************
* \file 3shunt.cypersonality
* \version 1.0
*
* \brief
* Motor Control personality description file for the 3-shunt topology.
*
********************************************************************************
* \copyright
* Copyright 2024 Cypress Semiconductor Corporation
* SPDX-License-Identifier: Apache-2.0
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*****************************************************************************-->

<PersonalityTemplate id="3shunt" name="3-shunt" version="1.0" xmlns="http://cypress.com/xsd/cyhwpersonality_v10">
  <VirtualResourceDefinition ipblock="VirtualResource" type="vres">
    <VirtualResourceDefinition type="motor" display_name="Motor Control $idx" display_path="Motor Control" display_mode="DYNAMIC" count="2" profile_fileName="mcdi"/>
  </VirtualResourceDefinition>
  <FittingRules>
    <MappingRules>
      <IpBlock name="VirtualResource" />
      <Resource name="vres\.motor" />
    </MappingRules>
    <RoutingRules>
      <Connections>
        <Connection>
          <Port templateId="syncTimer" port="tr_out1[0]"/>
          <Port templateId="pwm0" port="capture0[0]"/>
          <Port templateId="pwm1" port="capture0[0]"/>
          <Port templateId="pwm2" port="capture0[0]"/>
        </Connection>
        <Connection>
          <Port templateId="fault" port="digital_in[0]"/>
          <Port templateId="pwm0" port="stop[0]"/>
          <Port templateId="pwm1" port="stop[0]"/>
          <Port templateId="pwm2" port="stop[0]"/>
        </Connection>
        <Connection>
          <Port templateId="fastTimer" port="tr_out1[0]"/>
          <Port templateId="seqInTrig" port="tr_a_in[0]"/>
        </Connection>
        <Connection>
          <Port templateId="syncTimer" port="tr_out0[0]"/>
          <Port templateId="syncTimer" port="start[0]"/>
          <Port templateId="fastTimer" port="start[0]"/>
          <Port templateId="pwm0" port="start[0]"/>
          <Port templateId="pwm1" port="start[0]"/>
          <Port templateId="pwm2" port="start[0]"/>
        </Connection>
      </Connections>
    </RoutingRules>
  </FittingRules>
  <Parameters>
    <ParamBool id="debug" name="debug" group="Internal" default="false" visible="false" editable="false" desc="" />
    <ParamString id="instName" name="instName" group="Internal" default="`${INST_NAME}`" visible="`${debug}`" editable="false" desc="" />
    <ParamString id="hppassRsc" name="hppassRsc" group="Advanced" default="`${&quot;pass[0]&quot;}`" visible="`${debug}`" editable="false" desc="" />
    <ParamString id="adcRsc" name="adcRsc" group="Advanced" default="`${&quot;pass[0].sar[0]&quot;}`" visible="`${debug}`" editable="false" desc="" />
    <ParamString id="clk_hf0Rsc" name="clk_hf0Rsc" group="Internal" default="srss[0].clock[0].hfclk[0]" visible="`${debug}`" editable="false" desc="" />
    <ParamString id="clk_hf3Rsc" name="clk_hf3Rsc" group="Internal" default="srss[0].clock[0].hfclk[3]" visible="`${debug}`" editable="false" desc="" />
    <ParamString id="intConn" name="intConn" group="Internal" default="Internal Routing" visible="false" editable="false" desc="" />
    <ParamString id="intDesc" name="intDesc" group="Internal" default="This parameter is set automatically" visible="false" editable="false" desc="" />

    <ParamBool id="hppassUsed" name="hppassUsed" group="Advanced" default="`${isBlockUsed(hppassRsc)}`" visible="`${debug}`" editable="false" desc="" />
    <ParamString id="hppassInstName" name="hppassInstName" group="Internal" default="`${hppassUsed ? getExposedMember(&quot;pass[0]&quot;, &quot;instName&quot;) : &quot;&quot;}`" visible="`${debug}`" editable="false" desc="" />
    <ParamBool id="adcUsed" name="adcUsed" group="Advanced" default="`${isBlockUsed(adcRsc)}`" visible="`${debug}`" editable="false" desc="" />

    <ParamString  id="clkhf0Hz" name="HF_CLK0 CPU Clock Frequency" group="System Clock Info" default="`${formatFrequency(getExposedMember(clk_hf0Rsc, &quot;frequency&quot;), getExposedMember(clk_hf0Rsc, &quot;accuracy&quot;))}`" visible="true" editable="false" desc="CPU Clock frequency" />
    <ParamString  id="clkhf3Hz" name="HF_CLK3 HPPASS and TCPWM Clock Frequency" group="System Clock Info" default="`${formatFrequency(getExposedMember(clk_hf3Rsc, &quot;frequency&quot;), getExposedMember(clk_hf3Rsc, &quot;accuracy&quot;))}`" visible="true" editable="false" desc="Peripheral Clock frequency" />

    <!-- PWM -->
    <ParamRange id="swFreq" name="Switching Frequency (Hz)" group="PWM" default="20000" min="1000" max="200000" resolution="1" visible="true" editable="true" desc="Target frequency of PWM operation"/>
    <ParamRange id="dutyCycle" name="Duty cycle (%)" group="PWM" default="50" min="0" max="100" resolution="1" visible="true" editable="true" desc="" />

    <Repeat count="3">
      <ParamString templateId="pwm$idx" id="pwmName" name="pwmName" group="PWM" default="PWM_`${($idx == 0) ? &quot;U&quot; : ($idx == 1) ? &quot;V&quot; : &quot;W&quot;}`" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
    </Repeat>

    <ParamSignalTie id="clock" group="PWM" name="PWMs Clock" visible="true" desc="The clock input defines the operating frequency." canBeEmpty="false">
      <ParamSignal templateId="pwm$idx" name="`${pwmName}` Clock" port="clock_counter_en[0]" valid="true" repeatCount="3" />
      <ParamSignal templateId="syncTimer" name="Synchronous Timer Clock" port="clock_counter_en[0]" valid="true" />
      <ParamSignal templateId="fastTimer" name="Fast Control Loop Timer Clock" port="clock_counter_en[0]" valid="true" />
      <ParamSignal templateId="slowTimer" name="Slow Control Loop Timer Clock" port="clock_counter_en[0]" valid="true" />
    </ParamSignalTie>

    <ParamString id="clkRcs" name="clkRcs" group="PWM" default="`${getOrDefault(getBlockFromSignal(makeId(&quot;pwm0&quot;, &quot;clock_counter_en[0]&quot;)), &quot;&quot;)}`" visible="`${debug}`" editable="false" desc="" />
    <ParamBool id="clkUsed" name="clkUsed" group="PWM" default="`${clkRcs ne &quot;&quot; ? isBlockUsed(clkRcs) : false}`" visible="`${debug}`" editable="false" desc="" />
    <ParamRange id="clkFreq" name="clkFreq" group="PWM" default="`${clkUsed ? getExposedMember(clkRcs, &quot;frequency&quot;) : 0}`" min="0" max="1000000000" resolution="1" visible="`${debug}`" editable="false" desc="" />
    <ParamString id="clkAccu"  name="clkAccu"  group="PWM" default="`${clkUsed ? getExposedMember(clkRcs, &quot;accuracy&quot;) : 0}`" visible="`${debug}`" editable="false" desc="" />
    <ParamString id="clkFreqInfo" name="Clock Frequency" group="PWM" default="`${formatFrequency(clkFreq,clkAccu)}`" visible="true" editable="false" desc="The PWM clocking frequency" />
    <ParamChoice id="alignment" name="Alignment" group="PWM" default="CY_TCPWM_PWM_CENTER_ASYMMETRIC_CC0_CC1_ALIGN" visible="true" editable="true" desc="Selects which direction the PWM counts in. Left = Up, Right = Down, Center/Asymmetric = Up/Down." >
      <Entry name="Asymmetric Center Aligned CC0 &amp; CC1" value="CY_TCPWM_PWM_CENTER_ASYMMETRIC_CC0_CC1_ALIGN" visible="true" />
      <Entry name="Symmetric Center Aligned" value="CY_TCPWM_PWM_CENTER_ALIGN" visible="true" />
      <Entry name="Left Aligned" value="CY_TCPWM_PWM_LEFT_ALIGN" visible="false" />
      <Entry name="Right Aligned" value="CY_TCPWM_PWM_RIGHT_ALIGN" visible="false" />
    </ParamChoice>
    <ParamBool id="alignSym" name="alignSym" group="PWM" default="`${(CY_TCPWM_PWM_CENTER_ASYMMETRIC_CC0_CC1_ALIGN eq alignment) || (CY_TCPWM_PWM_CENTER_ALIGN eq alignment)}`" visible="`${debug}`" editable="false" desc="" />
    <ParamRange id="alignCoef" name="alignCoef" group="PWM" default="`${alignSym ? 2 : 1}`" min="1" max="2" resolution="1" visible="`${debug}`" editable="false" desc="" />
    <ParamRange id="pwmPeriodCy" name="PWM Period (cycles)" group="PWM" default="`${ceil(clkFreq / (swFreq * alignCoef))}`" min="0" max="1000000000" resolution="1" visible="true" editable="false" desc="The calculated PWM period in clock cycles" />
    <ParamRange id="pwmPeriodUs" name="PWM Period (us)" group="PWM" default="`${clkUsed ? pwmPeriodCy * 1000000.0 * alignCoef / clkFreq : 0}`" min="0" max="1000" resolution="0.001" visible="true" editable="false" desc="The calculated PWM period in microseconds" />
    <ParamRange id="pwmCompareCy" name="PWM Compare (cycles)" group="PWM" default="`${alignSym ? (pwmPeriodCy * (100 - dutyCycle) / 100) : pwmPeriodCy * dutyCycle / 100}`" min="0" max="1000000000" resolution="1" visible="`${debug}`" editable="false" desc="The calculated PWM compare in clock cycles" />

    <!-- Sync Timer -->
    <ParamPlacement templateId="syncTimer" name="Sync Timer Placement" group="Fast Control Loop" desc="Timer consumed by this solution" visible="true" />
    <ParamString templateId="syncTimer" id="location" name="" group="" default="`${INST_LOC}`" visible="false" editable="false" desc="" />
    <ParamString templateId="syncTimer" id="cfgName" name="cfgName" group="Fast Control Loop" default="`${INST_NAME}`_cfg" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
    <ParamRange templateId="syncTimer" id="cntInst" name="cntInst" group="Fast Control Loop" default="`${getInstNumber(&quot;cnt&quot;) + pCntGroup * 256}`" min="0" max="1023" resolution="1" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
    <!-- Fast Control Loop -->
    <ParamPlacement templateId="fastTimer" name="Fast Timer Placement" group="Fast Control Loop" desc="Timer consumed by this solution" visible="true" />
    <ParamString templateId="fastTimer" id="location" name="" group="" default="`${INST_LOC}`" visible="false" editable="false" desc="" />
    <ParamRange id="fastDiv" name="PWM to Fast Loop Frequency Ratio" group="Fast Control Loop" default="1" min="1" max="255" resolution="1" visible="true" editable="true" desc="Higher value slows down the rate of execution of control loop ISR"/>
    <ParamRange id="fastPeriod" name="Period (us)" group="Fast Control Loop" default="`${pwmPeriodUs * fastDiv}`" min="0" max="1000000" resolution="0.001" visible="true" editable="false" desc="Fast Control Loop Period" />
    <!-- Sync Timer -->
    <ParamRange id="defUpdatePoint" name="UpdatePoint(us) by default" group="Fast Control Loop" default="`${pwmPeriodUs / 2.0}`" min="0.001" max="`${fastPeriod}`" resolution="0.001" visible="false" editable="false" desc="The time from the Sync Timer period start when the PWM compare values should be updated." />
    <ParamRange id="updatePointUs" name="Update Point (us)" group="Fast Control Loop" default="`${defUpdatePoint}`" min="0.001" max="`${fastPeriod}`" resolution="0.001" visible="true" editable="true" desc="The time from the Sync Timer period start when the PWM compare values should be updated." />
    <ParamRange templateId="syncTimer" id="updatePointCy" name="Update Point (cycles)" group="Fast Control Loop" default="`${ceil(getParamValue(&quot;3shunt&quot;, &quot;clkFreq&quot;) * getParamValue(&quot;3shunt&quot;, &quot;updatePointUs&quot;) * 1e-6)}`" min="1" max="1000000000" resolution="1" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
    <!-- Fast Control Loop -->
    <ParamRange id="defConvPoint" name="ConversionPoint(us) by default" group="Fast Control Loop" default="`${pwmPeriodUs / 2.0}`" min="0.001" max="`${fastPeriod}`" resolution="0.001" visible="false" editable="false" desc="The time from the Fast Timer period start when the ADC convertion should start." />
    <ParamRange id="convPointUs" name="Conversion Point (us)" group="Fast Control Loop" default="`${defConvPoint}`" min="0.001" max="`${fastPeriod}`" resolution="0.001" visible="true" editable="true" desc="The time from the Fast Timer period start when the ADC convertion should start." />
    <ParamRange id="convPointCy" name="Conversion Point (cycles)" group="Fast Control Loop" default="`${ceil(clkFreq * convPointUs * 1e-6)}`" min="1" max="1000000000" resolution="1" visible="`${debug}`" editable="false" desc="" />
    <ParamString id="fastIntrSrc" name="Interrupt Source" group="Fast Control Loop" default="ADC High Priority Group Conversion Complete" visible="true" editable="false" desc="Fast Control Loop interrupt source" />
    <ParamRange id="fastPrio" name="Interrupt Priority" group="Fast Control Loop" default="0" min="0" max="7" resolution="1" visible="true" editable="true" desc="Fast Control Loop interrupt priority"/>
    <ParamString id="fastCbName" name="Callback Name" group="Fast Control Loop" default="`${INST_NAME}`_fast_callback" visible="true" editable="true" desc="Fast Control Loop Callback Name: &lt;br&gt;&lt;br&gt;&#13;&#10;A valid unique C function identifier should be provided here. The function should be defined in the application. It should have the following signature:&lt;br&gt;&lt;br&gt;&#13;&#10;void callback(void);" />
    <ParamBool id="fastCbNameOk" name="fastCbNameOk" group="Fast Control Loop" default="`${hasMatch(fastCbName, &quot;(^[_]+[0-9a-zA-Z]|^[a-zA-Z])[0-9a-zA-Z_]*$&quot;)}`" visible="`${debug}`" editable="false" desc="" />
    <ParamString id="fastPointer" name="Data Pointer Name" group="Fast Control Loop" default="`${INST_NAME}`_fastDataPtr" visible="true" editable="true" desc="Fast Control Loop Data Pointer Name: &lt;br&gt;&lt;br&gt;&#13;&#10;A valid unique C pointer identifier should be provided here. The int16_t data array of three phases U,V, and W current ADC measurements should be defined in the application." />
    <ParamBool id="fastPointerOk" name="fastPointerOk" group="Fast Control Loop" default="`${hasMatch(fastPointer, &quot;(^[_]+[0-9a-zA-Z]|^[a-zA-Z])[0-9a-zA-Z_]*$&quot;)}`" visible="`${debug}`" editable="false" desc="" />

    <ParamRange templateId="fastTimer" id="period" name="period" group="Fast Control Loop"
                default="`${getParamValue(&quot;3shunt&quot;, &quot;pwmPeriodCy&quot;) *
                            getParamValue(&quot;3shunt&quot;, &quot;alignCoef&quot;) *
                            getParamValue(&quot;3shunt&quot;, &quot;fastDiv&quot;)}`"
                min="0" max="65535" resolution="1" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
    <ParamString templateId="fastTimer" id="cfgName" name="cfgName" group="Fast Control Loop" default="`${INST_NAME}`_cfg" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
    <ParamRange templateId="fastTimer" id="cntInst" name="cntInst" group="Fast Control Loop" default="`${getInstNumber(&quot;cnt&quot;) + pCntGroup * 256}`" min="0" max="1023" resolution="1" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />

    <!-- Slow Control Loop -->
    <ParamPlacement templateId="slowTimer" name="Timer Placement" group="Slow Control Loop" desc="Timer consumed by this solution" visible="true" />
    <ParamString templateId="slowTimer" id="location" name="" group="" default="`${INST_LOC}`" visible="false" editable="false" desc="" />
    <ParamRange id="slowDiv" name="Fast to Slow Loop Frequency Ratio" group="Slow Control Loop" default="10" min="1" max="255" resolution="1" visible="true" editable="true" desc="" />
    <ParamRange id="slowPeriod" name="Period (us)" group="Slow Control Loop" default="`${pwmPeriodUs * slowDiv}`" min="0" max="1000000" resolution="0.001" visible="true" editable="false" desc="Slow Control Loop Period" />
    <ParamString id="slowIntrSrc" name="Interrupt Source" group="Slow Control Loop" default="Slow Control Loop Timer Interrupt" visible="true" editable="false" desc="Slow Control Loop interrupt source" />
    <ParamRange id="slowPrio" name="Interrupt Priority" group="Slow Control Loop" default="1" min="0" max="7" resolution="1" visible="true" editable="true" desc="Slow Control Loop interrupt priority"/>
    <ParamString id="slowCbName" name="Callback Name" group="Slow Control Loop" default="`${INST_NAME}`_slow_callback" visible="true" editable="true" desc="Slow Control Loop Callback Name: &lt;br&gt;&lt;br&gt;&#13;&#10;A valid unique C function identifier should be provided here. The function should be defined in the application. It should have the following signature:&lt;br&gt;&lt;br&gt;&#13;&#10;void callback(void);" />
    <ParamBool id="slowCbNameOk" name="slowCbNameOk" group="Slow Control Loop" default="`${hasMatch(slowCbName, &quot;(^[_]+[0-9a-zA-Z]|^[a-zA-Z])[0-9a-zA-Z_]*$&quot;)}`" visible="`${debug}`" editable="false" desc="" />
    <ParamRange templateId="slowTimer" id="period" name="period" group="Slow Control Loop" default="`${getParamValue(&quot;fastTimer&quot;, &quot;period&quot;) * getParamValue(&quot;3shunt&quot;, &quot;slowDiv&quot;)}`" min="0" max="4294967295" resolution="1" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
    <ParamString templateId="slowTimer" id="cfgName" name="cfgName" group="Slow Control Loop" default="`${INST_NAME}`_cfg" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
    <ParamRange templateId="slowTimer" id="cntInst" name="cntInst" group="Slow Control Loop" default="`${getInstNumber(&quot;cnt&quot;) + pCntGroup * 256}`" min="0" max="1023" resolution="1" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
    <ParamRange templateId="slowTimer" id="tcpwmInst" name="tcpwmInst" group="Slow Control Loop" default="`${getInstNumber(&quot;tcpwm&quot;)}`" min="0" max="0" resolution="1" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
    <ParamString templateId="slowTimer" id="irqn" name="irqn" group="Slow Control Loop" default="tcpwm_`${tcpwmInst}`_interrupts_`${cntInst}`_IRQn" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />

    <!-- ADC -->
    <ParamRange id="adcRes" name="Resolution" group="ADC" default="12" min="1" max="32" resolution="1" visible="true" editable="false" desc="The ADC bitwidth" />
    <ParamString id="vRefLoc" name="vRefLoc" group="ADC" default="`${(adcUsed ? getExposedMember(adcRsc, &quot;vref&quot;) : &quot;Error&quot;)}`" visible="`${debug}`" editable="false" desc="" />
    <ParamString id="vRef" name="Reference Source" group="ADC" default="`${(vRefLoc eq &quot;CY_HPPASS_SAR_VREF_VDDA&quot;) ? &quot;VDDA&quot; :
                                                                                            ((vRefLoc eq &quot;CY_HPPASS_SAR_VREF_EXT&quot;)  ? &quot;External Reference&quot; : vRefLoc)}`" visible="true" editable="false" desc="The ADC Reference Voltage" />
    <ParamRange id="vRefMv" name="Reference Voltage (mV)" group="ADC" default="`${(adcUsed ? getExposedMember(adcRsc, &quot;vRefMv&quot;) : 0)}`" min="`${(adcUsed ? 1700 : 0)}`" max="3600" resolution="1" visible="true" editable="false" desc="The ADC reference voltage" />

    <Repeat count="6">
      <ParamString id="chanName$idx" name="chanName$idx" group="ADC/debug"
                   default="`${($idx == 0) ? &quot;IUP&quot; :
                               ($idx == 1) ? &quot;IVP&quot; :
                               ($idx == 2) ? &quot;IWP&quot; :
                               ($idx == 3) ? &quot;VBUS&quot; :
                               ($idx == 4) ? &quot;SPEED_AN&quot; : &quot;T_POWER&quot;}`" visible="`${debug}`" editable="false" desc="The Channel role in the motor control system"/>

      <ParamBool id="prio$idx" name="prio$idx" group="ADC/`${chanName$idx}`" default="`${$idx &lt; 3}`" visible="`${debug}`" editable="false" desc="" />

      <ParamRange templateId="chan$idx" id="chanInst" name="chanInst" group="ADC/`${getParamValue(&quot;3shunt&quot;, &quot;chanName$idx&quot;)}`" default="`${getInstNumber(&quot;ch&quot;)}`" min="0" max="27" resolution="1" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
      <ParamString templateId="chan$idx" id="sampType" name="sampType" group="ADC/`${getParamValue(&quot;3shunt&quot;, &quot;chanName$idx&quot;)}`" default="`${(chanInst &gt;= 12) ? &quot;Muxed&quot; : &quot;Direct&quot;}`" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
      <ParamRange templateId="chan$idx" id="sampInst" name="sampInst" group="ADC/`${getParamValue(&quot;3shunt&quot;, &quot;chanName$idx&quot;)}`" default="`${(chanInst &gt;= 12) ? (chanInst - 12)/4 : chanInst}`" min="0" max="11" resolution="1" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
      <ParamRange templateId="chan$idx" id="sampMux" name="sampMux" group="ADC/`${getParamValue(&quot;3shunt&quot;, &quot;chanName$idx&quot;)}`" default="`${(chanInst &gt;= 12) ? (chanInst - 12)%4 : 0}`" min="0" max="11" resolution="1" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
      <ParamString templateId="chan$idx" id="sampRsc" name="sampRsc" group="ADC/`${getParamValue(&quot;3shunt&quot;, &quot;chanName$idx&quot;)}`" default="pass[0].sar[0].`${(chanInst &gt;= 12) ? &quot;muxed_sampler[&quot; . sampInst . &quot;]&quot; : &quot;dir_sampler[&quot; . sampInst . &quot;]&quot;}`" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
      <ParamBool templateId="chan$idx" id="sampUsed" name="sampUsed" group="ADC/`${getParamValue(&quot;3shunt&quot;, &quot;chanName$idx&quot;)}`" default="`${isBlockUsed(sampRsc)}`" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />

      <ParamString templateId="chan$idx" id="sampGain" name="sampGain" group="ADC/`${getParamValue(&quot;3shunt&quot;, &quot;chanName$idx&quot;)}`" default="`${sampUsed ? getExposedMember(sampRsc, &quot;gain&quot;) : &quot;CY_HPPASS_SAR_SAMP_GAIN_1&quot;}`" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
      <ParamRange templateId="chan$idx" id="sampGainNum" name="sampGainNum" group="ADC/`${getParamValue(&quot;3shunt&quot;, &quot;chanName$idx&quot;)}`"
                  default="`${(sampGain eq &quot;CY_HPPASS_SAR_SAMP_GAIN_12&quot;) ? 12 :
                              (sampGain eq &quot;CY_HPPASS_SAR_SAMP_GAIN_6&quot;) ? 6 :
                              (sampGain eq &quot;CY_HPPASS_SAR_SAMP_GAIN_3&quot;) ? 3 : 1}`" min="1" max="12" resolution="1" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />

      <ParamBool id="seq0dirSamp$idx" name="seq0dirSamp$idx" group="ADC/`${chanName$idx}`" default="`${prio$idx &amp;&amp; (getParamValue(makeId(&quot;chan$idx&quot;, &quot;sampType&quot;)) eq &quot;Direct&quot;)}`" visible="`${debug}`" editable="false" desc="" />
      <ParamRange id="seq0dirSamp$idxMsk" name="seq0dirSamp$idxMsk" group="ADC/`${chanName$idx}`" default="`${seq0dirSamp$idx ? (1 &lt;&lt; getParamValue(makeId(&quot;chan$idx&quot;, &quot;sampInst&quot;))) : 0}`" min="0" max="4095" resolution="1" visible="`${debug}`" editable="false" desc="" />
      <ParamBool id="seq0muxSamp$idx" name="seq0muxSamp$idx" group="ADC/`${chanName$idx}`" default="`${prio$idx &amp;&amp; (getParamValue(makeId(&quot;chan$idx&quot;, &quot;sampType&quot;)) eq &quot;Muxed&quot;)}`" visible="`${debug}`" editable="false" desc="" />
      <ParamRange id="seq0muxSamp$idxMsk" name="seq0muxSamp$idxMsk" group="ADC/`${chanName$idx}`" default="`${seq0muxSamp$idx ? (1 &lt;&lt; getParamValue(makeId(&quot;chan$idx&quot;, &quot;sampInst&quot;))) : 0}`" min="0" max="15" resolution="1" visible="`${debug}`" editable="false" desc="" />
      <ParamBool id="seq1dirSamp$idx" name="seq1dirSamp$idx" group="ADC/`${chanName$idx}`" default="`${!prio$idx &amp;&amp; (getParamValue(makeId(&quot;chan$idx&quot;, &quot;sampType&quot;)) eq &quot;Direct&quot;)}`" visible="`${debug}`" editable="false" desc="" />
      <ParamRange id="seq1dirSamp$idxMsk" name="seq1dirSamp$idxMsk" group="ADC/`${chanName$idx}`" default="`${seq1dirSamp$idx ? (1 &lt;&lt; getParamValue(makeId(&quot;chan$idx&quot;, &quot;sampInst&quot;))) : 0}`" min="0" max="4095" resolution="1" visible="`${debug}`" editable="false" desc="" />
      <ParamBool id="seq1muxSamp$idx" name="seq1muxSamp$idx" group="ADC/`${chanName$idx}`" default="`${!prio$idx &amp;&amp; (getParamValue(makeId(&quot;chan$idx&quot;, &quot;sampType&quot;)) eq &quot;Muxed&quot;)}`" visible="`${debug}`" editable="false" desc="" />
      <ParamRange id="seq1muxSamp$idxMsk" name="seq1muxSamp$idxMsk" group="ADC/`${chanName$idx}`" default="`${seq1muxSamp$idx ? (1 &lt;&lt; getParamValue(makeId(&quot;chan$idx&quot;, &quot;sampInst&quot;))) : 0}`" min="0" max="15" resolution="1" visible="`${debug}`" editable="false" desc="" />

      <!-- <ParamString id="chanNameInd$idx" name="Name" group="ADC/`${chanName$idx}`" default="`${chanName$idx}`" visible="`${chan$idx}`" editable="false" desc="The channel name given in the tool"/> -->
      <ParamString id="chanReg$idx" name="chanReg$idx" group="ADC/`${chanName$idx}`" default="`${&quot;&amp;MCPASS->SAR.CFG.CHAN_RESULT[&quot; . getParamValue(&quot;chan$idx&quot;, &quot;chanInst&quot;) . &quot;]&quot;}`" visible="`${debug}`" editable="false" desc=""/>

      <ParamString templateId="chan$idx" id="chanRsc$idx" name="chanRsc" group="ADC/`${getParamValue(&quot;3shunt&quot;, &quot;chanName$idx&quot;)}`" default="`${INST_LOC}`" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
      <ParamString templateId="chan$idx" id="chanPin$idx" name="Pin" group="ADC/`${getParamValue(&quot;3shunt&quot;, &quot;chanName$idx&quot;)}`" default="`${getBlockDisplayName(getParamValue(&quot;3shunt&quot;, makeId(&quot;chan$idx&quot;, &quot;chanRsc$idx&quot;)), false)}`" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="Pin assignment can be changed in the Device Configurator tool" />

      <!-- protection -->
      <!-- <ParamBool id="loProt$idx" name="Underflow Protection Enable" group="ADC/`${chanName$idx}`/prot" default="false" visible="`${debug &amp;&amp; chan$idx}`" editable="`${chan$idx}`" desc="Bottom boundary protection Enable" /> -->
      <!-- <ParamRange id="loProtVal$idx" name="Underflow Protection threshold" group="ADC/`${chanName$idx}`/prot" default="1" min="0.001" max="1000" resolution="0.001" visible="`${debug &amp;&amp; chan$idx &amp;&amp; loProt$idx}`" editable="`${chan$idx &amp;&amp; loProt$idx}`" desc="Bottom boundary value. Units: V or A." /> -->
      <!-- <ParamBool id="hiProt$idx" name="Overflow Protection Enable" group="ADC/`${chanName$idx}`/prot" default="false" visible="`${debug &amp;&amp; chan$idx}`" editable="`${chan$idx}`" desc="Top boundary protection Enable" /> -->
      <!-- <ParamRange id="hiProtVal$idx" name="Overflow Protection threshold" group="ADC/`${chanName$idx}`/prot" default="10" min="0.001" max="1000" resolution="0.001" visible="`${debug &amp;&amp; chan$idx &amp;&amp; hiProt$idx}`" editable="`${chan$idx &amp;&amp; hiProt$idx}`" desc="Top boundary value. Units: V or A." /> -->
      <!-- <ParamBool id="prot$idx" name="prot$idx" group="ADC/`${chanName$idx}`/prot" default="`${loProt$idx || hiProt$idx}`" visible="`${debug &amp;&amp; chan$idx}`" editable="false" desc="" /> -->
      <!-- <ParamString templateId="lim$idx" id="cond" name="cond" group="ADC/`${chanName$idx}`/prot" default="`${getParamValue(&quot;3shunt&quot;, &quot;loProt$idx&quot;) ? (getParamValue(&quot;3shunt&quot;, &quot;hiProt$idx&quot;) ?  &quot;CY_HPPASS_SAR_COND_OUTSIDE&quot; : &quot;CY_HPPASS_SAR_COND_BELOW&quot;) : &quot;CY_HPPASS_SAR_COND_ABOVE&quot;}`" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" /> -->
      <!-- <ParamRange templateId="lim$idx" id="low" name="low" group="ADC/`${chanName$idx}`/prot" default="`${getParamValue(&quot;3shunt&quot;, &quot;loProtVal$idx&quot;)}`" min="0" max="`${pow(2, 16) - 1}`" resolution="1" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="Units: V or A" />  -->
      <!-- <ParamRange templateId="lim$idx" id="high" name="high" group="ADC/`${chanName$idx}`/prot" default="`${getParamValue(&quot;3shunt&quot;, &quot;hiProtVal$idx&quot;)}`" min="0" max="`${pow(2, 16) - 1}`" resolution="1" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="Units: V or A" />       -->
      <!-- <ParamRange templateId="lim$idx" id="limInst" name="limInst" group="ADC/`${chanName$idx}`/prot" default="`${getInstNumber(&quot;limit&quot;)}`" min="0" max="7" resolution="1" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;) &amp;&amp; getParamValue(&quot;3shunt&quot;, &quot;chan$idx&quot;)}`" editable="false" desc="" /> -->
      <!-- <ParamString templateId="chan$idx" id="limit" name="limit" group="ADC/`${chanName$idx}`/prot" default="`${getParamValue(&quot;3shunt&quot;, &quot;prot$idx&quot;) ? &quot;CY_HPPASS_SAR_LIMIT_&quot; . getParamValue(&quot;lim$idx&quot;, &quot;limInst&quot;) : &quot;CY_HPPASS_SAR_LIMIT_DISABLED&quot;}`" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" /> -->
    </Repeat>

    <ParamPlacement templateId="chan0" name="IUP Placement" group="ADC/High Priority Group" desc="ADC channel consumed by this solution" visible="true" />
    <ParamString templateId="chan0" id="location" name="" group="" default="`${INST_LOC}`" visible="false" editable="false" desc="" />
    <ParamPlacement templateId="chan1" name="IVP Placement" group="ADC/High Priority Group" desc="ADC channel consumed by this solution" visible="true" />
    <ParamString templateId="chan1" id="location" name="" group="" default="`${INST_LOC}`" visible="false" editable="false" desc="" />
    <ParamPlacement templateId="chan2" name="IWP Placement" group="ADC/High Priority Group" desc="ADC channel consumed by this solution" visible="true" />
    <ParamString templateId="chan2" id="location" name="" group="" default="`${INST_LOC}`" visible="false" editable="false" desc="" />
    <ParamPlacement templateId="chan3" name="VBUS Placement" group="ADC/Low Priority Group" desc="ADC channel consumed by this solution" visible="true" />
    <ParamString templateId="chan3" id="location" name="" group="" default="`${INST_LOC}`" visible="false" editable="false" desc="" />
    <ParamPlacement templateId="chan4" name="SPEED_AN Placement" group="ADC/Low Priority Group" desc="ADC channel consumed by this solution" visible="true" />
    <ParamString templateId="chan4" id="location" name="" group="" default="`${INST_LOC}`" visible="false" editable="false" desc="" />
    <ParamPlacement templateId="chan5" name="T_POWER Placement" group="ADC/Low Priority Group" desc="ADC channel consumed by this solution" visible="true" />
    <ParamString templateId="chan5" id="location" name="" group="" default="`${INST_LOC}`" visible="false" editable="false" desc="" />

    <!-- Seq -->
    <Repeat count="2">
      <ParamString id="grpName$idx" name="grpName$idx" group="ADC" default="`${(0 != $idx) ? &quot;Low&quot; : &quot;High&quot;}` Priority Sequencer Group" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
      <ParamPlacement templateId="seq$idx" name="ADC `${getParamValue(&quot;3shunt&quot;, &quot;grpName$idx&quot;)}`" group="ADC/`${getParamValue(&quot;3shunt&quot;, &quot;grpName$idx&quot;)}`" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" desc="" />
      <ParamString templateId="seq$idx" id="location" name="" group="" default="`${INST_LOC}`" visible="false" editable="false" desc="" />

      <ParamRange templateId="seq$idx" id="grp" name="grp" group="ADC/`${getParamValue(&quot;3shunt&quot;, &quot;grpName$idx&quot;)}`"  default="`${getInstNumber(&quot;grp&quot;)}`" min="0" max="7" resolution="1" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
      <ParamString templateId="seq$idx" id="irqn" name="irqn" group="ADC/`${getParamValue(&quot;3shunt&quot;, &quot;grpName$idx&quot;)}`" default="pass_interrupt_sar_entry_done_`${grp}`_IRQn" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
      <ParamRange templateId="seq$idx" id="dirSampMsk" name="dirSampMsk" group="ADC/`${getParamValue(&quot;3shunt&quot;, &quot;grpName$idx&quot;)}`"
                  default="`${getParamValue(&quot;3shunt&quot;,  &quot;seq$idxdirSamp0Msk&quot;) |
                              getParamValue(&quot;3shunt&quot;,  &quot;seq$idxdirSamp1Msk&quot;) |
                              getParamValue(&quot;3shunt&quot;,  &quot;seq$idxdirSamp2Msk&quot;) |
                              getParamValue(&quot;3shunt&quot;,  &quot;seq$idxdirSamp3Msk&quot;) |
                              getParamValue(&quot;3shunt&quot;,  &quot;seq$idxdirSamp4Msk&quot;) |
                              getParamValue(&quot;3shunt&quot;,  &quot;seq$idxdirSamp5Msk&quot;)}`"
                  min="0" max="4095" resolution="1" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
      <ParamRange templateId="seq$idx" id="muxSampMsk" name="muxSampMsk" group="ADC/`${getParamValue(&quot;3shunt&quot;, &quot;grpName$idx&quot;)}`"
                  default="`${getParamValue(&quot;3shunt&quot;,  &quot;seq$idxmuxSamp0Msk&quot;) |
                              getParamValue(&quot;3shunt&quot;,  &quot;seq$idxmuxSamp1Msk&quot;) |
                              getParamValue(&quot;3shunt&quot;,  &quot;seq$idxmuxSamp2Msk&quot;) |
                              getParamValue(&quot;3shunt&quot;,  &quot;seq$idxmuxSamp3Msk&quot;) |
                              getParamValue(&quot;3shunt&quot;,  &quot;seq$idxmuxSamp4Msk&quot;) |
                              getParamValue(&quot;3shunt&quot;,  &quot;seq$idxmuxSamp5Msk&quot;)}`"
                  min="0" max="15" resolution="1" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
      <ParamRange templateId="seq$idx" id="muxSel0" name="seq$idxmuxSel0" group="ADC/`${getParamValue(&quot;3shunt&quot;, &quot;grpName$idx&quot;)}`"
                  default="`${($idx ^ getParamValue(&quot;3shunt&quot;,  &quot;prio0&quot;))  ? ((getParamValue(&quot;chan0&quot;,  &quot;sampType&quot;) eq &quot;Muxed&quot;) &amp;&amp; (getParamValue(&quot;chan0&quot;,  &quot;sampInst&quot;) eq 0) ? getParamValue(&quot;chan0&quot;,  &quot;sampMux&quot;) : 0) :
                              ($idx ^ getParamValue(&quot;3shunt&quot;,  &quot;prio1&quot;))  ? ((getParamValue(&quot;chan1&quot;,  &quot;sampType&quot;) eq &quot;Muxed&quot;) &amp;&amp; (getParamValue(&quot;chan1&quot;,  &quot;sampInst&quot;) eq 0) ? getParamValue(&quot;chan1&quot;,  &quot;sampMux&quot;) : 0) :
                              ($idx ^ getParamValue(&quot;3shunt&quot;,  &quot;prio2&quot;))  ? ((getParamValue(&quot;chan2&quot;,  &quot;sampType&quot;) eq &quot;Muxed&quot;) &amp;&amp; (getParamValue(&quot;chan2&quot;,  &quot;sampInst&quot;) eq 0) ? getParamValue(&quot;chan2&quot;,  &quot;sampMux&quot;) : 0) :
                              ($idx ^ getParamValue(&quot;3shunt&quot;,  &quot;prio3&quot;))  ? ((getParamValue(&quot;chan3&quot;,  &quot;sampType&quot;) eq &quot;Muxed&quot;) &amp;&amp; (getParamValue(&quot;chan3&quot;,  &quot;sampInst&quot;) eq 0) ? getParamValue(&quot;chan3&quot;,  &quot;sampMux&quot;) : 0) :
                              ($idx ^ getParamValue(&quot;3shunt&quot;,  &quot;prio4&quot;))  ? ((getParamValue(&quot;chan4&quot;,  &quot;sampType&quot;) eq &quot;Muxed&quot;) &amp;&amp; (getParamValue(&quot;chan4&quot;,  &quot;sampInst&quot;) eq 0) ? getParamValue(&quot;chan4&quot;,  &quot;sampMux&quot;) : 0) :
                              ($idx ^ getParamValue(&quot;3shunt&quot;,  &quot;prio5&quot;))  ? ((getParamValue(&quot;chan5&quot;,  &quot;sampType&quot;) eq &quot;Muxed&quot;) &amp;&amp; (getParamValue(&quot;chan5&quot;,  &quot;sampInst&quot;) eq 0) ? getParamValue(&quot;chan5&quot;,  &quot;sampMux&quot;) : 0) : 0}`"
                  min="0" max="8" resolution="1" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />

      <ParamRange templateId="seq$idx" id="muxSel1" name="seq$idxmuxSel1" group="ADC/`${getParamValue(&quot;3shunt&quot;, &quot;grpName$idx&quot;)}`"
                  default="`${($idx ^ getParamValue(&quot;3shunt&quot;,  &quot;prio0&quot;))  ? ((getParamValue(&quot;chan0&quot;,  &quot;sampType&quot;) eq &quot;Muxed&quot;) &amp;&amp; (getParamValue(&quot;chan0&quot;,  &quot;sampInst&quot;) eq 1) ? getParamValue(&quot;chan0&quot;,  &quot;sampMux&quot;) : 0) :
                              ($idx ^ getParamValue(&quot;3shunt&quot;,  &quot;prio1&quot;))  ? ((getParamValue(&quot;chan1&quot;,  &quot;sampType&quot;) eq &quot;Muxed&quot;) &amp;&amp; (getParamValue(&quot;chan1&quot;,  &quot;sampInst&quot;) eq 1) ? getParamValue(&quot;chan1&quot;,  &quot;sampMux&quot;) : 0) :
                              ($idx ^ getParamValue(&quot;3shunt&quot;,  &quot;prio2&quot;))  ? ((getParamValue(&quot;chan2&quot;,  &quot;sampType&quot;) eq &quot;Muxed&quot;) &amp;&amp; (getParamValue(&quot;chan2&quot;,  &quot;sampInst&quot;) eq 1) ? getParamValue(&quot;chan2&quot;,  &quot;sampMux&quot;) : 0) :
                              ($idx ^ getParamValue(&quot;3shunt&quot;,  &quot;prio3&quot;))  ? ((getParamValue(&quot;chan3&quot;,  &quot;sampType&quot;) eq &quot;Muxed&quot;) &amp;&amp; (getParamValue(&quot;chan3&quot;,  &quot;sampInst&quot;) eq 1) ? getParamValue(&quot;chan3&quot;,  &quot;sampMux&quot;) : 0) :
                              ($idx ^ getParamValue(&quot;3shunt&quot;,  &quot;prio4&quot;))  ? ((getParamValue(&quot;chan4&quot;,  &quot;sampType&quot;) eq &quot;Muxed&quot;) &amp;&amp; (getParamValue(&quot;chan4&quot;,  &quot;sampInst&quot;) eq 1) ? getParamValue(&quot;chan4&quot;,  &quot;sampMux&quot;) : 0) :
                              ($idx ^ getParamValue(&quot;3shunt&quot;,  &quot;prio5&quot;))  ? ((getParamValue(&quot;chan5&quot;,  &quot;sampType&quot;) eq &quot;Muxed&quot;) &amp;&amp; (getParamValue(&quot;chan5&quot;,  &quot;sampInst&quot;) eq 1) ? getParamValue(&quot;chan5&quot;,  &quot;sampMux&quot;) : 0) : 0}`"
                  min="0" max="8" resolution="1" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />

      <ParamRange templateId="seq$idx" id="muxSel2" name="seq$idxmuxSel2" group="ADC/`${getParamValue(&quot;3shunt&quot;, &quot;grpName$idx&quot;)}`"
                  default="`${($idx ^ getParamValue(&quot;3shunt&quot;,  &quot;prio0&quot;))  ? ((getParamValue(&quot;chan0&quot;,  &quot;sampType&quot;) eq &quot;Muxed&quot;) &amp;&amp; (getParamValue(&quot;chan0&quot;,  &quot;sampInst&quot;) eq 2) ? getParamValue(&quot;chan0&quot;,  &quot;sampMux&quot;) : 0) :
                              ($idx ^ getParamValue(&quot;3shunt&quot;,  &quot;prio1&quot;))  ? ((getParamValue(&quot;chan1&quot;,  &quot;sampType&quot;) eq &quot;Muxed&quot;) &amp;&amp; (getParamValue(&quot;chan1&quot;,  &quot;sampInst&quot;) eq 2) ? getParamValue(&quot;chan1&quot;,  &quot;sampMux&quot;) : 0) :
                              ($idx ^ getParamValue(&quot;3shunt&quot;,  &quot;prio2&quot;))  ? ((getParamValue(&quot;chan2&quot;,  &quot;sampType&quot;) eq &quot;Muxed&quot;) &amp;&amp; (getParamValue(&quot;chan2&quot;,  &quot;sampInst&quot;) eq 2) ? getParamValue(&quot;chan2&quot;,  &quot;sampMux&quot;) : 0) :
                              ($idx ^ getParamValue(&quot;3shunt&quot;,  &quot;prio3&quot;))  ? ((getParamValue(&quot;chan3&quot;,  &quot;sampType&quot;) eq &quot;Muxed&quot;) &amp;&amp; (getParamValue(&quot;chan3&quot;,  &quot;sampInst&quot;) eq 2) ? getParamValue(&quot;chan3&quot;,  &quot;sampMux&quot;) : 0) :
                              ($idx ^ getParamValue(&quot;3shunt&quot;,  &quot;prio4&quot;))  ? ((getParamValue(&quot;chan4&quot;,  &quot;sampType&quot;) eq &quot;Muxed&quot;) &amp;&amp; (getParamValue(&quot;chan4&quot;,  &quot;sampInst&quot;) eq 2) ? getParamValue(&quot;chan4&quot;,  &quot;sampMux&quot;) : 0) :
                              ($idx ^ getParamValue(&quot;3shunt&quot;,  &quot;prio5&quot;))  ? ((getParamValue(&quot;chan5&quot;,  &quot;sampType&quot;) eq &quot;Muxed&quot;) &amp;&amp; (getParamValue(&quot;chan5&quot;,  &quot;sampInst&quot;) eq 2) ? getParamValue(&quot;chan5&quot;,  &quot;sampMux&quot;) : 0) : 0}`"
                  min="0" max="8" resolution="1" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />

      <ParamRange templateId="seq$idx" id="muxSel3" name="seq$idxmuxSel3" group="ADC/`${getParamValue(&quot;3shunt&quot;, &quot;grpName$idx&quot;)}`"
                  default="`${($idx ^ getParamValue(&quot;3shunt&quot;,  &quot;prio0&quot;))  ? ((getParamValue(&quot;chan0&quot;,  &quot;sampType&quot;) eq &quot;Muxed&quot;) &amp;&amp; (getParamValue(&quot;chan0&quot;,  &quot;sampInst&quot;) eq 3) ? getParamValue(&quot;chan0&quot;,  &quot;sampMux&quot;) : 0) :
                              ($idx ^ getParamValue(&quot;3shunt&quot;,  &quot;prio1&quot;))  ? ((getParamValue(&quot;chan1&quot;,  &quot;sampType&quot;) eq &quot;Muxed&quot;) &amp;&amp; (getParamValue(&quot;chan1&quot;,  &quot;sampInst&quot;) eq 3) ? getParamValue(&quot;chan1&quot;,  &quot;sampMux&quot;) : 0) :
                              ($idx ^ getParamValue(&quot;3shunt&quot;,  &quot;prio2&quot;))  ? ((getParamValue(&quot;chan2&quot;,  &quot;sampType&quot;) eq &quot;Muxed&quot;) &amp;&amp; (getParamValue(&quot;chan2&quot;,  &quot;sampInst&quot;) eq 3) ? getParamValue(&quot;chan2&quot;,  &quot;sampMux&quot;) : 0) :
                              ($idx ^ getParamValue(&quot;3shunt&quot;,  &quot;prio3&quot;))  ? ((getParamValue(&quot;chan3&quot;,  &quot;sampType&quot;) eq &quot;Muxed&quot;) &amp;&amp; (getParamValue(&quot;chan3&quot;,  &quot;sampInst&quot;) eq 3) ? getParamValue(&quot;chan3&quot;,  &quot;sampMux&quot;) : 0) :
                              ($idx ^ getParamValue(&quot;3shunt&quot;,  &quot;prio4&quot;))  ? ((getParamValue(&quot;chan4&quot;,  &quot;sampType&quot;) eq &quot;Muxed&quot;) &amp;&amp; (getParamValue(&quot;chan4&quot;,  &quot;sampInst&quot;) eq 3) ? getParamValue(&quot;chan4&quot;,  &quot;sampMux&quot;) : 0) :
                              ($idx ^ getParamValue(&quot;3shunt&quot;,  &quot;prio5&quot;))  ? ((getParamValue(&quot;chan5&quot;,  &quot;sampType&quot;) eq &quot;Muxed&quot;) &amp;&amp; (getParamValue(&quot;chan5&quot;,  &quot;sampInst&quot;) eq 3) ? getParamValue(&quot;chan5&quot;,  &quot;sampMux&quot;) : 0) : 0}`"
                  min="0" max="8" resolution="1" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
    </Repeat>

    <!-- PWM -->
    <Repeat count="3">
      <ParamRange templateId="pwm$idx" id="grpInst" name="grpInst" group="PWM/`${pwmName}`" default="`${getInstNumber(&quot;group&quot;)}`" min="0" max="3" resolution="1" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
      <ParamRange templateId="pwm$idx" id="cntNum"  name="cntNum"  group="PWM/`${pwmName}`" default="`${getInstNumber(&quot;cnt&quot;)}`"   min="0" max="7" resolution="1" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
      <ParamRange templateId="pwm$idx" id="cntInst" name="cntInst" group="PWM/`${pwmName}`" default="`${cntNum + grpInst * 256}`" min="0" max="1023" resolution="1" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
    </Repeat>

    <ParamString templateId="pwm0" id="pwmAmc" name="pwmAmc" group="PWM" default="GRP_NR[`${grpInst}`].CNT.GRP_AMC_PRESENT" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
    <ParamBool templateId="pwm0" id="amc" name="amc" group="PWM" default="`${lookupExpression(getParamValue(&quot;3shunt&quot;, makeId(&quot;pwm0&quot;, &quot;pwmAmc&quot;))) eq 1}`" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />

    <ParamRange id="deadMax" name="max dead time (ns)" group="PWM" default="`${clkUsed ? (getParamValue(makeId(&quot;pwm0&quot;, &quot;amc&quot;)) ? 65535 : 255) * 1000000000.0 / clkFreq : 500}`" min="0" max="1000000000" resolution="1" visible="`${debug}`" editable="false" desc="" />
    <ParamRange id="rDeadNs" name="Rising Dead Time (ns)" group="PWM" default="500" min="0" max="`${deadMax}`" resolution="1" visible="true" editable="true" desc="Dead time delay for Hight Switch" />
    <ParamRange id="rDeadCy" name="Rising Dead Time (cycles)" group="PWM" default="`${ceil(rDeadNs * clkFreq / 1000000000.0)}`" min="0" max="`${getParamValue(makeId(&quot;pwm0&quot;, &quot;amc&quot;)) ? 65535 : 255}`" resolution="1" visible="`${debug}`" editable="false" desc="Number of clock cycles of dead time between PWM outputs" />
    <ParamRange id="fDeadNs" name="Falling Dead Time (ns)" group="PWM" default="500" min="0" max="`${deadMax}`" resolution="1" visible="true" editable="true" desc="Dead time delay for Low Switch" />
    <ParamRange id="fDeadCy" name="Falling Dead Time (cycles)" group="PWM" default="`${ceil(fDeadNs * clkFreq / 1000000000.0)}`" min="0" max="`${getParamValue(makeId(&quot;pwm0&quot;, &quot;amc&quot;)) ? 65535 : 255}`" resolution="1" visible="`${debug}`" editable="false" desc="Number of clock cycles of dead time between PWM outputs" />

    <ParamChoice id="pasOut" name="Passive Level Output" group="PWM" default="CY_TCPWM_PWM_OUTPUT_LOW" visible="true" editable="true" desc="The behavior of the PWM outputs while PWM is passive." >
      <Entry name="High Impedance" value="CY_TCPWM_PWM_OUTPUT_HIGHZ" visible="true" />
      <!-- <Entry name="Retain" value="CY_TCPWM_PWM_OUTPUT_RETAIN" visible="true" /> -->
      <Entry name="Low" value="CY_TCPWM_PWM_OUTPUT_LOW" visible="true" />
      <Entry name="High" value="CY_TCPWM_PWM_OUTPUT_HIGH" visible="true" />
    </ParamChoice>
    <ParamChoice id="killOut" name="Kill Level Output" group="PWM" default="CY_TCPWM_LINEOUT_AND_LINECMPOUT_IS_LOW" visible="true" editable="true" desc="Specifies the behavior of the PWM outputs line_out and line_out_compl_out during kill." >
      <Entry name="High and Low Side Switch Outputs are Low" value="CY_TCPWM_LINEOUT_AND_LINECMPOUT_IS_LOW" visible="true" />
      <Entry name="High Side is High and Low Side is Low" value="CY_TCPWM_LINEOUT_IS_HIGH_AND_LINECMPOUT_IS_LOW" visible="true" />
      <Entry name="High Side is Low and Low Side is High" value="CY_TCPWM_LINECMPOUT_IS_HIGH_LINEOUT_IS_LOW" visible="true" />
      <Entry name="High and Low Side Switch Outputs are High" value="CY_TCPWM_LINEOUT_AND_LINECMPOUT_IS_HIGH" visible="true" />
    </ParamChoice>
    <ParamBool id="hiInv" name="Invert High Side Switch Output" group="PWM" default="false" visible="true" editable="true" desc="If checked the High Side Switch PWM output PWM output is inverted." />
    <ParamBool id="loInv" name="Invert Low Side Switch Output" group="PWM" default="false" visible="true" editable="true" desc="If checked the Low Side Switch PWM output is inverted." />

    <ParamBool id="reload_line_sel" name="Enable Line Sel Swap" desc="If checked, Line out and Line cmpl out will be swapped on a terminal count event" group="PWM" default="false" visible="true" editable="true" />
    <ParamChoice id="line_out_source" name="Line Out Source Signal" group="PWM" default="CY_TCPWM_OUTPUT_PWM_SIGNAL" visible="true" editable="true" desc="Source for the output signal line_out" >
      <Entry name="Constant 0" value="CY_TCPWM_OUTPUT_CONSTANT_0" visible="true" />
      <Entry name="Constant 1" value="CY_TCPWM_OUTPUT_CONSTANT_1" visible="true" />
      <Entry name="PWM Signal" value="CY_TCPWM_OUTPUT_PWM_SIGNAL" visible="true" />
      <Entry name="Inverted PWM Signal" value="CY_TCPWM_OUTPUT_INVERTED_PWM_SIGNAL" visible="true" />
      <Entry name="GPIO Port Default" value="CY_TCPWM_OUTPUT_PORT_DEFAULT" visible="true" />
      <!-- <Entry name="Motif Out" value="CY_TCPWM_OUTPUT_SOURCE_MOTIF" visible="`${(&quot;mxs40tcpwm&quot; eq getIpBlockName())}`" /> -->
    </ParamChoice>

    <ParamChoice id="linecompl_out_source" name="Line Compl Out Source Signal" group="PWM" default="CY_TCPWM_OUTPUT_INVERTED_PWM_SIGNAL" visible="true" editable="true" desc="Source for the output signal linecmpl_out" >
      <Entry name="Constant 0" value="CY_TCPWM_OUTPUT_CONSTANT_0" visible="true" />
      <Entry name="Constant 1" value="CY_TCPWM_OUTPUT_CONSTANT_1" visible="true" />
      <Entry name="PWM Signal" value="CY_TCPWM_OUTPUT_PWM_SIGNAL" visible="true" />
      <Entry name="Inverted PWM Signal" value="CY_TCPWM_OUTPUT_INVERTED_PWM_SIGNAL" visible="true" />
      <Entry name="GPIO Port Default" value="CY_TCPWM_OUTPUT_PORT_DEFAULT" visible="true" />
      <!-- <Entry name="Motif Out" value="CY_TCPWM_OUTPUT_SOURCE_MOTIF" visible="`${(&quot;mxs40tcpwm&quot; eq getIpBlockName())}`" /> -->
    </ParamChoice>

    <ParamChoice id="buff_line_out_source" name="Buf Line Out Source Signal" group="PWM" default="CY_TCPWM_OUTPUT_PWM_SIGNAL" visible="true" editable="true" desc="Source for the output signal line_out" >
      <Entry name="Constant 0" value="CY_TCPWM_OUTPUT_CONSTANT_0" visible="true" />
      <Entry name="Constant 1" value="CY_TCPWM_OUTPUT_CONSTANT_1" visible="true" />
      <Entry name="PWM Signal" value="CY_TCPWM_OUTPUT_PWM_SIGNAL" visible="true" />
      <Entry name="Inverted PWM Signal" value="CY_TCPWM_OUTPUT_INVERTED_PWM_SIGNAL" visible="true" />
      <Entry name="GPIO Port Default" value="CY_TCPWM_OUTPUT_PORT_DEFAULT" visible="true" />
      <!-- <Entry name="Motif Out" value="CY_TCPWM_OUTPUT_SOURCE_MOTIF" visible="`${(&quot;mxs40tcpwm&quot; eq getIpBlockName())}`" /> -->
    </ParamChoice>

    <ParamChoice id="buff_linecompl_out_source" name="Buff Line Compl Out Source Signal" group="PWM" default="CY_TCPWM_OUTPUT_INVERTED_PWM_SIGNAL" visible="true" editable="true" desc="Source for the output signal linecmpl_out" >
      <Entry name="Constant 0" value="CY_TCPWM_OUTPUT_CONSTANT_0" visible="true" />
      <Entry name="Constant 1" value="CY_TCPWM_OUTPUT_CONSTANT_1" visible="true" />
      <Entry name="PWM Signal" value="CY_TCPWM_OUTPUT_PWM_SIGNAL" visible="true" />
      <Entry name="Inverted PWM Signal" value="CY_TCPWM_OUTPUT_INVERTED_PWM_SIGNAL" visible="true" />
      <Entry name="GPIO Port Default" value="CY_TCPWM_OUTPUT_PORT_DEFAULT" visible="true" />
      <!-- <Entry name="Motif Out" value="CY_TCPWM_OUTPUT_SOURCE_MOTIF" visible="`${(&quot;mxs40tcpwm&quot; eq getIpBlockName())}`"" /> -->
    </ParamChoice>

    <ParamChoice id="dithering_mode" name="Dithering Mode" group="PWM" default="CY_TCPWM_DITHERING_DISABLE" visible="false" editable="false" desc="Sets Dithering mode for PWM and PWM DT modes" >
      <Entry name="Dithering is Disabled" value="CY_TCPWM_DITHERING_DISABLE" visible="true" />
      <Entry name="Period Dithering Enabled" value="CY_TCPWM_DITHERING_PERIOD" visible="true" />
      <Entry name="Duty Dithering Enabled" value="CY_TCPWM_DITHERING_DUTY" visible="true" />
      <Entry name="Period and Duty Dithering Enabled" value="CY_TCPWM_DITHERING_PERIOD_DUTY" visible="true" />
    </ParamChoice>
    <ParamRange id="Period_Dithering" name="Period Dithering Value" group="PWM" default="128" min="1" max="128" resolution="1" visible="`${(dithering_mode eq CY_TCPWM_DITHERING_PERIOD) || (dithering_mode eq CY_TCPWM_DITHERING_PERIOD_DUTY)}`" editable="true" desc="Initial value for period LFSR. Should be non zero value." />
    <ParamRange id="Duty_Dithering" name="Duty Dithering Value" group="PWM" default="128" min="1" max="128" resolution="1" visible="`${(dithering_mode eq CY_TCPWM_DITHERING_DUTY) || (dithering_mode eq CY_TCPWM_DITHERING_PERIOD_DUTY)}`" editable="true" desc="Initail value for Duty LFSR. Should be non zero value." />
    <ParamChoice id="limiter" name="Limiter Values" group="PWM" default="CY_TCPWM_DITHERING_LIMITER_7" visible="`${dithering_mode ne CY_TCPWM_DITHERING_DISABLE}`" editable="true" desc="It defines the magnitude of the pseudo-random value to be added to period/CC0/CC1. When PWM alignment mode set to asymmetric CC0 and CC1, The duty width remains the same, because the same value is added to CC0 and CC1." >
      <Entry name="limiter value 7" value="CY_TCPWM_DITHERING_LIMITER_7" visible="true" />
      <Entry name="limiter value 6" value="CY_TCPWM_DITHERING_LIMITER_6" visible="true" />
      <Entry name="limiter value 5" value="CY_TCPWM_DITHERING_LIMITER_5" visible="true" />
      <Entry name="limiter value 4" value="CY_TCPWM_DITHERING_LIMITER_4" visible="true" />
      <Entry name="limiter value 3" value="CY_TCPWM_DITHERING_LIMITER_3" visible="true" />
      <Entry name="limiter value 2" value="CY_TCPWM_DITHERING_LIMITER_2" visible="true" />
      <Entry name="limiter value 1" value="CY_TCPWM_DITHERING_LIMITER_1" visible="true" />
    </ParamChoice>
    <ParamBool id="gf_enable" name="Glitch Filter Enable" group="PWM" default="false" visible="false" editable="false" desc="Enables Glitch filter for input triggers. The Number of glitch filters is design specific and if there is a glitch filter connected to this input trigger it will be used. " />
    <ParamChoice id="gf_depth" name="Glitch Filter Depth" group="PWM" default="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_0" visible="`${(gf_enable)}`" editable="true" desc="Glitch filter depth support values.GF depth set for one to one triggers will be applied to specific trigger and GF depth set for general purpose trigger will be applicable for all general purpose triggers" >
      <Entry name="Depth Value 0"   value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_0"   visible="true" />
      <Entry name="Depth Value 1"   value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_1"   visible="true" />
      <Entry name="Depth Value 2"   value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_2"   visible="true" />
      <Entry name="Depth Value 4"   value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_4"   visible="true" />
      <Entry name="Depth Value 8"   value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_8"   visible="true" />
      <Entry name="Depth Value 16"  value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_16"  visible="true" />
      <Entry name="Depth Value 32"  value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_32"  visible="true" />
      <Entry name="Depth Value 64"  value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_64"  visible="true" />
      <Entry name="Depth Value 128" value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_128" visible="true" />
      <Entry name="Depth Value 256" value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_256" visible="true" />
      <Entry name="Depth Value 512" value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_512" visible="true" />
    </ParamChoice>

    <!-- GPIO -->
    <ParamBool id="killInputEnabled" name="Enable" group="GPIO/Fault Input" default="true" visible="true" editable="true" desc="It shows the Kill Input configuration options if checked" />
    <ParamChoice id="killInputMode" name="Mode" group="GPIO/Fault Input" default="CY_TCPWM_INPUT_LEVEL" visible="false" editable="false" desc="Determines how the kill 0 input behaves." >
      <Entry name="Rising Edge" value="CY_TCPWM_INPUT_RISINGEDGE" visible="false" />
      <Entry name="Falling Edge" value="CY_TCPWM_INPUT_FALLINGEDGE" visible="false" />
      <Entry name="Either Edge" value="CY_TCPWM_INPUT_EITHEREDGE" visible="false" />
      <Entry name="Level" value="CY_TCPWM_INPUT_LEVEL" visible="true" />
      <Entry name="Disabled" value="CY_TCPWM_INPUT_DISABLED" visible="false" />
    </ParamChoice>

    <ParamPlacement templateId="fault" name="Pin Placement" group="GPIO/Fault Input" visible="`${getParamValue(&quot;3shunt&quot;, &quot;killInputEnabled&quot;)}`" desc="Fault Input consumed by this solution" />
    <ParamString templateId="fault" id="location" name="" group="" default="`${INST_LOC}`" visible="false" editable="false" desc="" />
    <ParamString templateId="fault" id="pinInstName" name="" group="" default="`${INST_NAME}`" visible="false" editable="false" desc="" />

    <ParamChoice id="killActiveLevel" name="Active Level" group="GPIO/Fault Input" default="0" visible="`${killInputEnabled}`" editable="`${killInputEnabled}`" desc="Determines active level of the Kill input" >
      <Entry name="High (1)" value="1" visible="true" />
      <Entry name="Low (0)"  value="0" visible="true" />
    </ParamChoice>
    <ParamString templateId="fault" id="initialState" name="Initial Drive State" group="General" default="`${(getParamValue(&quot;3shunt&quot;, &quot;killActiveLevel&quot;) eq 0) ? 1 : 0}`" visible="`${debug}`" editable="`${debug}`" desc="This parameter specifies the pin-specific initial value written to the pin's OUT Register after a device reset/power-on." />

    <ParamBool id="faultCb" name="Interrupt Callback" group="GPIO/Fault Input" default="false" visible="`${killInputEnabled}`" editable="`${killInputEnabled}`" desc="It shows the Interrupt Callback configuration options if checked" />
    <ParamString id="faultCbName" name="Callback Name" group="GPIO/Fault Input" default="`${INST_NAME}`_fault_callback" visible="`${faultCb}`" editable="`${faultCb}`" desc="Fault Event Callback Name: &lt;br&gt;&lt;br&gt;&#13;&#10;A valid unique C function identifier should be provided here. The function should be defined in the application. It should have the following signature:&lt;br&gt;&lt;br&gt;&#13;&#10;void callback(void);" />
    <ParamBool id="faultCbNameOk" name="faultCbNameOk" group="GPIO/Fault Input" default="`${hasMatch(getParamValue(&quot;3shunt&quot;, &quot;faultCbName&quot;), &quot;(^[_]+[0-9a-zA-Z]|^[a-zA-Z])[0-9a-zA-Z_]*$&quot;)}`" visible="`${debug}`" editable="false" desc="" />

    <ParamBool templateId="fault" id="intr" name="intr" group="GPIO/Fault Input" default="`${getParamValue(&quot;3shunt&quot;, &quot;faultCb&quot;)}`" visible="`${debug}`" editable="false" desc="" />
    <ParamString templateId="fault" id="cb" name="cb" group="GPIO/Fault Input" default="`${getParamValue(&quot;3shunt&quot;, &quot;faultCbName&quot;)}`" visible="`${debug}`" editable="false" desc="" />
    <ParamRange templateId="fault" id="port" name="port" group="GPIO/Fault Input" default="`${getInstNumber(&quot;port&quot;)}`" min="0" max="127" resolution="1" visible="false" editable="false" desc="" />
    <ParamRange templateId="fault" id="pin" name="pin" group="GPIO/Fault Input" default="`${getInstNumber(&quot;pin&quot;)}`" min="0" max="7" resolution="1" visible="false" editable="false" desc="" />

    <ParamPlacement templateId="enable" name="Pin Placement" group="GPIO/Driver Enable Output" visible="true" desc="Driver Enable Output consumed by this solution" />
    <ParamString templateId="enable" id="location" name="" group="" default="`${INST_LOC}`" visible="false" editable="false" desc="" />
    <ParamChoice templateId="enable" id="initialState" name="Initial State" group="GPIO/Driver Enable Output" default="1" visible="true" editable="true" desc="This parameter specifies the pin-specific initial value written to the pin's OUT Register after a device reset/power-on." >
      <Entry name="High (1)" value="1" visible="true" />
      <Entry name="Low (0)"  value="0" visible="true" />
    </ParamChoice>
    <ParamBool templateId="enable" id="ipVersion" name="IP version" group="GPIO" default="`${getVersion()}`" visible="false" editable="false" desc="" />
    <ParamString templateId="enable" id="secExtAvailable" name="Secure Extension" group="GPIO" default="`${lookupExpression(&quot;GPIO.SECEXT&quot;, lookupExpression(&quot;SECEXT&quot;, -1))}`" visible="false" editable="false" desc="" />
    <ParamChoice templateId="enable" id="nonSec" name="Secure attribute" group="GPIO" default="`${((getIpBlockName() eq &quot;mxs40sioss&quot;) &amp;&amp; (ipVersion eq 1)) ? 0 : 1}`" visible="`${secExtAvailable eq 1}`" editable="true" desc="The common secure attribute for the Fault and Enable pins" >
      <Entry name="Non-secure access (1)" value="1" visible="true" />
      <Entry name="Secure access (0)"  value="0" visible="true" />
    </ParamChoice>
    <ParamRange templateId="enable" id="port" name="port" group="GPIO/Driver Enable Output" default="`${getInstNumber(&quot;port&quot;)}`" min="0" max="127" resolution="1" visible="false" editable="false" desc="" />
    <ParamRange templateId="enable" id="pin" name="pin" group="GPIO/Driver Enable Output" default="`${getInstNumber(&quot;pin&quot;)}`" min="0" max="7" resolution="1" visible="false" editable="false" desc="" />

    <!-- PWM -->
    <Repeat count="3">
      <ParamPlacement templateId="pwm$idx"   name="PWM Placement" group="PWM/`${pwmName}`" desc="PWM consumed by this solution" visible="true" />
      <ParamString templateId="pwm$idx" id="location" name="" group="" default="`${INST_LOC}`" visible="false" editable="false" desc="" />
      <ParamString templateId="pwm$idx" id="pwmInstName" name="" group="" default="`${INST_NAME}`" visible="false" editable="false" desc="" />

      <ParamSignal templateId="pwm$idx" port="tr_line[0]" name="High Side Switch Output" group="PWM/`${pwmName}`" visible="true" desc="PWM output" canBeEmpty="false" >
        <Constraint type="ACCEPT" targetLocation="ioss\[\d+\]\.port\[\d+\]\.pin.*" valid="true" >
          <Parameter id="DriveModes" severity="DEFAULT" reason="">
            <Fixed value="CY_GPIO_DM_STRONG_IN_OFF" />
          </Parameter>
        </Constraint>
        <Constraint type="ACCEPT" targetLocation="ioss\[\d+\]\.port\[\d+\]\.pin.*" valid="true" >
          <Parameter id="DriveModes" severity="INFO" reason="The pin Drive Mode parameter does not match expected.">
            <Fixed value="CY_GPIO_DM_STRONG_IN_OFF" />
          </Parameter>
        </Constraint>
      </ParamSignal>

      <ParamBool templateId="pwm$idx" id="hiPinCon" name="hiPinCon" group="PWM/`${pwmName}" default="`${hasConnection(&quot;tr_line&quot;, 0)}`" visible="false" editable="false" desc="" />
      <ParamString templateId="pwm$idx" id="hiPinRcs" name="hiPinRcs" group="PWM/`${pwmName}`" default="`${hiPinCon ? getBlockFromSignal(&quot;tr_line[0]&quot;) : &quot;&quot;}`" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
      <ParamString templateId="pwm$idx" id="hiPinName" name="hiPinName" group="PWM/`${pwmName}`" default="`${hiPinCon ? getBlockDisplayName(hiPinRcs,false) : &quot;&quot;}`" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />

      <ParamSignal templateId="pwm$idx" port="tr_line_compl[0]" name="Low Side Switch Output" group="PWM/`${pwmName}`" visible="true" desc="Complementary PWM output" canBeEmpty="false" >
        <Constraint type="ACCEPT" targetLocation="ioss\[\d+\]\.port\[\d+\]\.pin.*" valid="true" >
          <Parameter id="DriveModes" severity="DEFAULT" reason="">
            <Fixed value="CY_GPIO_DM_STRONG_IN_OFF" />
          </Parameter>
        </Constraint>
        <Constraint type="ACCEPT" targetLocation="ioss\[\d+\]\.port\[\d+\]\.pin.*" valid="true" >
          <Parameter id="DriveModes" severity="INFO" reason="The pin Drive Mode parameter does not match expected.">
            <Fixed value="CY_GPIO_DM_STRONG_IN_OFF" />
          </Parameter>
        </Constraint>
      </ParamSignal>

      <ParamBool templateId="pwm$idx" id="loPinCon" name="loPinCon" group="PWM/`${pwmName}" default="`${hasConnection(&quot;tr_line_compl&quot;, 0)}`" visible="false" editable="false" desc="" />
      <ParamString templateId="pwm$idx" id="loPinRcs" name="loPinRcs" group="PWM/`${pwmName}`" default="`${loPinCon ? getBlockFromSignal(&quot;tr_line_compl[0]&quot;) : &quot;&quot;}`" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
      <ParamString templateId="pwm$idx" id="loPinName" name="loPinName" group="PWM/`${pwmName}`" default="`${loPinCon ? getBlockDisplayName(loPinRcs,false) : &quot;&quot;}`" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />

      <ParamSignal templateId="pwm$idx"      port="stop[0]"       name="PWM stop in"   group="`${getParamValue(&quot;3shunt&quot;, &quot;intConn&quot;)}`/`${pwmName}`" visible="`${getParamValue(&quot;3shunt&quot;, &quot;killInputEnabled&quot;)}`" editable="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" desc="`${getParamValue(&quot;3shunt&quot;, &quot;intDesc&quot;)}`" canBeEmpty="`${!getParamValue(&quot;3shunt&quot;, &quot;killInputEnabled&quot;)}`" >
        <Constraint type="REQUIRE" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;fault&quot;, &quot;location&quot;) . &quot;.digital_in[0]&quot;)}`" valid="true" />
      </ParamSignal>
      <ParamSignal templateId="pwm$idx"      port="capture0[0]"   name="PWM swap in"   group="`${getParamValue(&quot;3shunt&quot;, &quot;intConn&quot;)}`/`${pwmName}`" visible="true" editable="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" desc="`${getParamValue(&quot;3shunt&quot;, &quot;intDesc&quot;)}`" canBeEmpty="false" >
        <Constraint type="REQUIRE" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;syncTimer&quot;, &quot;location&quot;) . &quot;.tr_out1[0]&quot;)}`" valid="true" />
      </ParamSignal>
    </Repeat>

    <ParamSignal templateId="syncTimer"      port="tr_out1[0]"    name="syncTimer tr_out1"   group="`${getParamValue(&quot;3shunt&quot;, &quot;intConn&quot;)}`" visible="true" editable="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" desc="`${getParamValue(&quot;3shunt&quot;, &quot;intDesc&quot;)}`" canBeEmpty="false" >
      <Constraint type="ACCEPT" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;pwm0&quot;, &quot;location&quot;) . &quot;.capture0[0]&quot;)}`" valid="true" />
      <Constraint type="ACCEPT" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;pwm1&quot;, &quot;location&quot;) . &quot;.capture0[0]&quot;)}`" valid="true" />
      <Constraint type="ACCEPT" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;pwm2&quot;, &quot;location&quot;) . &quot;.capture0[0]&quot;)}`" valid="true" />
    </ParamSignal>
    <ParamSignal templateId="fastTimer"      port="tr_out1[0]"    name="fastTimer tr_out1"   group="`${getParamValue(&quot;3shunt&quot;, &quot;intConn&quot;)}`" visible="true" editable="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" desc="`${getParamValue(&quot;3shunt&quot;, &quot;intDesc&quot;)}`" canBeEmpty="false" >
      <!-- <Constraint type="REQUIRE" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;seqInTrig&quot;, &quot;location&quot;) . &quot;.tr_a_in[0]&quot;)}`" valid="true" /> -->
    </ParamSignal>
    <ParamSignal templateId="syncTimer"      port="tr_out0[0]"    name="syncTimer tr_out0"   group="`${getParamValue(&quot;3shunt&quot;, &quot;intConn&quot;)}`/SyncStart" visible="true" editable="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" desc="`${getParamValue(&quot;3shunt&quot;, &quot;intDesc&quot;)}`" canBeEmpty="false" >
      <Constraint type="ACCEPT" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;syncTimer&quot;, &quot;location&quot;) . &quot;.tr_out0[0]&quot;)}`" valid="true" />
      <Constraint type="ACCEPT" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;syncTimer&quot;, &quot;location&quot;) . &quot;.start[0]&quot;)}`" valid="true" />
      <Constraint type="ACCEPT" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;fastTimer&quot;, &quot;location&quot;) . &quot;.start[0]&quot;)}`" valid="true" />
      <Constraint type="ACCEPT" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;pwm0&quot;, &quot;location&quot;) . &quot;.start[0]&quot;)}`" valid="true" />
      <Constraint type="ACCEPT" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;pwm1&quot;, &quot;location&quot;) . &quot;.start[0]&quot;)}`" valid="true" />
      <Constraint type="ACCEPT" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;pwm2&quot;, &quot;location&quot;) . &quot;.start[0]&quot;)}`" valid="true" />
    </ParamSignal>
    <ParamSignal templateId="syncTimer"      port="start[0]"      name="syncTimer start in"  group="`${getParamValue(&quot;3shunt&quot;, &quot;intConn&quot;)}`/SyncStart" visible="true" editable="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" desc="`${getParamValue(&quot;3shunt&quot;, &quot;intDesc&quot;)}`" canBeEmpty="false" >
      <Constraint type="ACCEPT" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;syncTimer&quot;, &quot;location&quot;) . &quot;.tr_out0[0]&quot;)}`" valid="true" />
      <Constraint type="ACCEPT" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;syncTimer&quot;, &quot;location&quot;) . &quot;.start[0]&quot;)}`" valid="true" />
      <Constraint type="ACCEPT" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;fastTimer&quot;, &quot;location&quot;) . &quot;.start[0]&quot;)}`" valid="true" />
      <Constraint type="ACCEPT" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;pwm0&quot;, &quot;location&quot;) . &quot;.start[0]&quot;)}`" valid="true" />
      <Constraint type="ACCEPT" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;pwm1&quot;, &quot;location&quot;) . &quot;.start[0]&quot;)}`" valid="true" />
      <Constraint type="ACCEPT" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;pwm2&quot;, &quot;location&quot;) . &quot;.start[0]&quot;)}`" valid="true" />
    </ParamSignal>
    <ParamSignal templateId="fastTimer"      port="start[0]"      name="fastTimer start in"  group="`${getParamValue(&quot;3shunt&quot;, &quot;intConn&quot;)}`/SyncStart" visible="true" editable="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" desc="`${getParamValue(&quot;3shunt&quot;, &quot;intDesc&quot;)}`" canBeEmpty="false" >
      <Constraint type="ACCEPT" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;syncTimer&quot;, &quot;location&quot;) . &quot;.tr_out0[0]&quot;)}`" valid="true" />
      <Constraint type="ACCEPT" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;syncTimer&quot;, &quot;location&quot;) . &quot;.start[0]&quot;)}`" valid="true" />
      <Constraint type="ACCEPT" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;fastTimer&quot;, &quot;location&quot;) . &quot;.start[0]&quot;)}`" valid="true" />
      <Constraint type="ACCEPT" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;pwm0&quot;, &quot;location&quot;) . &quot;.start[0]&quot;)}`" valid="true" />
      <Constraint type="ACCEPT" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;pwm1&quot;, &quot;location&quot;) . &quot;.start[0]&quot;)}`" valid="true" />
      <Constraint type="ACCEPT" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;pwm2&quot;, &quot;location&quot;) . &quot;.start[0]&quot;)}`" valid="true" />
    </ParamSignal>
    <Repeat count="3">
      <ParamSignal templateId="pwm$idx"      port="start[0]"      name="PWM start in"  group="`${getParamValue(&quot;3shunt&quot;, &quot;intConn&quot;)}`/SyncStart" visible="true" editable="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" desc="`${getParamValue(&quot;3shunt&quot;, &quot;intDesc&quot;)}`" canBeEmpty="false" >
        <Constraint type="ACCEPT" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;syncTimer&quot;, &quot;location&quot;) . &quot;.tr_out0[0]&quot;)}`" valid="true" />
        <Constraint type="ACCEPT" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;syncTimer&quot;, &quot;location&quot;) . &quot;.start[0]&quot;)}`" valid="true" />
        <Constraint type="ACCEPT" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;fastTimer&quot;, &quot;location&quot;) . &quot;.start[0]&quot;)}`" valid="true" />
        <Constraint type="ACCEPT" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;pwm0&quot;, &quot;location&quot;) . &quot;.start[0]&quot;)}`" valid="true" />
        <Constraint type="ACCEPT" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;pwm1&quot;, &quot;location&quot;) . &quot;.start[0]&quot;)}`" valid="true" />
        <Constraint type="ACCEPT" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;pwm2&quot;, &quot;location&quot;) . &quot;.start[0]&quot;)}`" valid="true" />
      </ParamSignal>
    </Repeat>

    <!-- ADC -->
    <ParamString templateId="seqInTrig" id="inTrigRsc" name="inTrigRsc" group="ADC" default="`${INST_LOC}`" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
    <ParamRange templateId="seqInTrig" id="inTrigInst" name="inTrigInst" group="ADC" default="`${getInstNumber(&quot;input_trigger&quot;)}`" min="0" max="7" resolution="1" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
    <ParamPlacement templateId="seqInTrig" name="ADC Sequencer Groups Input Trigger Placement" group="ADC" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" desc="" />
    <ParamString templateId="seqInTrig" id="location" name="" group="" default="`${INST_LOC}`" visible="false" editable="false" desc="" />
    <!-- <ParamSignal templateId="limTrig" port="tr_level_out[0]" name="ADC Limits tr_level_out" group="`${getParamValue(&quot;3shunt&quot;, &quot;intConn&quot;)}`/ADC" visible="true" desc="`${getParamValue(&quot;3shunt&quot;, &quot;intDesc&quot;)}`" canBeEmpty="false" /> -->
    <ParamSignal templateId="seqInTrig" port="tr_a_in[0]" name="ADC Seqencer Groups tr_a_in" group="`${getParamValue(&quot;3shunt&quot;, &quot;intConn&quot;)}`/ADC" visible="true" editable="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" canBeEmpty="false" desc="`${getParamValue(&quot;3shunt&quot;, &quot;intDesc&quot;)}`" >
      <Constraint type="REQUIRE" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;fastTimer&quot;, &quot;location&quot;) . &quot;.tr_out1[0]&quot;)}`" valid="true" />
    </ParamSignal>
    <Repeat count="2">
      <ParamString templateId="seq$idx" id="trigSel" name="trigSel" group="ADC/`${getParamValue(&quot;3shunt&quot;, &quot;grpName$idx&quot;)}`" default="CY_HPPASS_SAR_TRIG_`${getParamValue(&quot;seqInTrig&quot;, &quot;inTrigInst&quot;)}`" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
      <ParamRange templateId="seq$idx" id="seqIdx" name="seqIdx" group="ADC/`${getParamValue(&quot;3shunt&quot;, &quot;grpName$idx&quot;)}`" default="`${$idx}`" min="0" max="1" resolution="1" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" />
    </Repeat>

    <!-- <ParamPlacement templateId="seq0" name="ADC Sequencer Current Measurement Group" group="ADC" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" desc="" /> -->
    <!-- <ParamString templateId="seqInTrig0" id="adc_pwmRsc0" name="adc_pwmRsc0" group="ADC" default="`${getParamValue(&quot;3shunt&quot;, makeId(&quot;pwm0&quot;, &quot;pwmRsc0&quot;))}`" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" /> -->
    <!-- <ParamString templateId="seqInTrig0" id="adc_inTr0" name="adc_inTr0" group="ADC" default="`${INST_LOC}`.tr_a_in[0]" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" editable="false" desc="" /> -->

    <ParamSignal templateId="fault" port="digital_in[0]" name="Fault Input" group="`${getParamValue(&quot;3shunt&quot;, &quot;intConn&quot;)}`/GPIO" visible="`${hasVisibleOption(&quot;digital_in[0]&quot;)}`" editable="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" canBeEmpty="`${!getParamValue(&quot;3shunt&quot;, &quot;killInputEnabled&quot;)}`" desc="`${getParamValue(&quot;3shunt&quot;, &quot;intDesc&quot;)}`" >
      <Constraint type="ACCEPT" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;fault&quot;, &quot;location&quot;) . &quot;.digital_in[0]&quot;)}`" valid="true" />
      <Constraint type="ACCEPT" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;pwm0&quot;, &quot;location&quot;) . &quot;.stop[0]&quot;)}`" valid="true" />
      <Constraint type="ACCEPT" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;pwm1&quot;, &quot;location&quot;) . &quot;.stop[0]&quot;)}`" valid="true" />
      <Constraint type="ACCEPT" targetLocation="`${escapeRegexMetaChars(getParamValue(&quot;pwm2&quot;, &quot;location&quot;) . &quot;.stop[0]&quot;)}`" valid="true" />
    </ParamSignal>
    <ParamSignal templateId="enable" port="digital_out[0]" name="Digital Output" group="`${getParamValue(&quot;3shunt&quot;, &quot;intConn&quot;)}`/GPIO" visible="false" editable="`${getParamValue(&quot;3shunt&quot;, &quot;debug&quot;)}`" canBeEmpty="true" desc="`${getParamValue(&quot;3shunt&quot;, &quot;intDesc&quot;)}`" />

    <ParamBool id="debugCodegen" name="debugCodegen" group="codegen" default="false" visible="`${debug}`" editable="`${debug}`" desc="" />
    <!-- <ParamString id="tab" name="tab" group="codegen" default="    " visible="`${debugCodegen}`" editable="false" desc="single tab" /> -->
    <!-- <ParamBool id="isDiv" name="isDiv" group="codegen" default="`${fastDiv &gt; 1}`" visible="`${debugCodegen}`" editable="false" desc="" /> -->
    <!-- <ParamString id="dtab" name="dtab" group="codegen" default="`${isDiv ? tab . tab : tab}`" visible="`${debugCodegen}`" editable="false" desc="conditional double tab" /> -->
    <ParamString id="null" name="null" group="codegen" default="" visible="`${debugCodegen}`" editable="false" desc="null string" />
    <ParamString id="pwmBase" name="pwmBase" group="codegen" default="TCPWM`${getParamValue(&quot;slowTimer&quot;, &quot;tcpwmInst&quot;)}`" visible="`${debugCodegen}`" editable="false" desc="" />
    <Repeat count="3">
      <ParamRange id="pwmNum$idx" name="pwmNum$idx" group="codegen" default="`${getParamValue(&quot;pwm$idx&quot;, &quot;cntInst&quot;)}`" min="0" max="1000" resolution="1" visible="`${debugCodegen}`" editable="false" desc="" />
      <ParamString id="clkDst$idx" name="clkDst$idx" group="codegen" default="`${&quot;PCLK_TCPWM&quot; . getParamValue(&quot;slowTimer&quot;, &quot;tcpwmInst&quot;) . &quot;_CLOCK_COUNTER_EN&quot; . pwmNum$idx}`" visible="`${debugCodegen}`" editable="false" desc="" />
      <ParamString id="definePrefix$idx" name="definePrefix$idx" group="codegen" visible="`${debugCodegen}`" editable="false" desc=""
                   default="`${&quot;TCPWM&quot; . getParamValue(&quot;slowTimer&quot;, &quot;tcpwmInst&quot;) . &quot;_GRP&quot; . getParamValue(&quot;pwm$idx&quot;, &quot;grpInst&quot;) . &quot;_CNT&quot; . getParamValue(&quot;pwm$idx&quot;, &quot;cntNum&quot;)}`" />
    </Repeat>

    <ParamString templateId="syncTimer" id="syncName" name="syncName" group="codegen" default="`${INST_NAME}`" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debugCodegen&quot;)}`" editable="false" desc="" />
    <ParamString templateId="syncTimer" id="clkDst" name="clkDst" group="codegen" default="`${&quot;PCLK_TCPWM&quot; . getParamValue(&quot;slowTimer&quot;, &quot;tcpwmInst&quot;) . &quot;_CLOCK_COUNTER_EN&quot; . cntInst}`" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debugCodegen&quot;)}`" editable="false" desc="" />
    <ParamString templateId="fastTimer" id="clkDst" name="clkDst" group="codegen" default="`${&quot;PCLK_TCPWM&quot; . getParamValue(&quot;slowTimer&quot;, &quot;tcpwmInst&quot;) . &quot;_CLOCK_COUNTER_EN&quot; . cntInst}`" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debugCodegen&quot;)}`" editable="false" desc="" />
    <ParamString templateId="slowTimer" id="clkDst" name="clkDst" group="codegen" default="`${&quot;PCLK_TCPWM&quot; . getParamValue(&quot;slowTimer&quot;, &quot;tcpwmInst&quot;) . &quot;_CLOCK_COUNTER_EN&quot; . cntInst}`" visible="`${getParamValue(&quot;3shunt&quot;, &quot;debugCodegen&quot;)}`" editable="false" desc="" />

    <ParamBool id="hppassInit" name="hppassInit" group="Advanced" default="`${hppassUsed ? getExposedMember(hppassRsc, &quot;init&quot;) : true}`" visible="`${debug}`" editable="false" desc="" /> <!-- if not used - true, just to do not raise the DRC -->

    <ParamBool id="inFlash" name="Store Config in Flash" group="Advanced" default="true" visible="true" editable="true" desc="Controls whether the configuration structure is stored in flash (const, true) or SRAM (not const, false)." />
    <ParamBool id="init" name="Initialize During Startup" group="Advanced" default="true" visible="true" editable="true" desc="Performs the automatic initialization within the init_cycfg_mcdi() generated function." />
  </Parameters>

  <DRCs>
    <DRC type="ERROR" text="All PWMs must belong to the same Group"
    condition="`${(getParamValue(&quot;pwm0&quot;, &quot;grpInst&quot;) !=  getParamValue(&quot;pwm1&quot;, &quot;grpInst&quot;)) ||
                  (getParamValue(&quot;pwm1&quot;, &quot;grpInst&quot;) !=  getParamValue(&quot;pwm2&quot;, &quot;grpInst&quot;))}`" />
    <DRC type="ERROR" text="Prior to the Motor initialization the HPPASS should be initialized" condition="`${init &amp;&amp; !hppassInit}`" >
      <FixIt action="SET_PARAM" target="pass[0].init" value="true" valid="true" />
      <FixIt action="SET_PARAM" target="init" value="false" valid="true" />
    </DRC>
    <DRC type="ERROR" text="Invalid Callback Name" condition="`${!fastCbNameOk}`">
      <FixIt action="SET_PARAM" target="fastCbName" value="`${INST_NAME}`_fast_callback" valid="true" />
    </DRC>
    <DRC type="ERROR" text="Invalid Pointer Name" condition="`${!fastPointerOk}`">
      <FixIt action="SET_PARAM" target="fastPointer" value="`${INST_NAME}`_fastDataPtr" valid="true" />
    </DRC>
    <DRC type="ERROR" text="Invalid Callback Name" condition="`${!slowCbNameOk}`">
      <FixIt action="SET_PARAM" target="slowCbName" value="`${INST_NAME}`_slow_callback" valid="true" />
    </DRC>
    <DRC type="ERROR" text="Invalid Callback Name" condition="`${!faultCbNameOk}`">
      <FixIt action="SET_PARAM" target="fault#faultCbName" value="`${INST_NAME}`_fault_callback" valid="true" />
    </DRC>
  </DRCs>

  <ConfigFirmware>
    <ConfigInclude value="cy_tcpwm_pwm.h" include="true" />
    <ConfigInclude value="cy_sysclk.h" include="true" />
    <ConfigInclude value="cycfg_routing.h" include="true" />
    <ConfigInclude value="cycfg_peripherals.h" include="true" />
    <!-- <ConfigInclude value="cyhal_hw_types.h" include="true" guard="defined (CY_USING_HAL_LITE)" /> -->
    <!-- <ConfigInclude value="cycfg_clocks.h" include="true" guard="defined (CY_USING_HAL_LITE)" /> -->
    <ConfigInclude value="mtb_mcdi.h" include="true" />

    <ConfigDefine name="`${INST_NAME}`_TCPWM_HW" value="`${pwmBase}`" public="true" include="true" />
    <ConfigDefine name="`${INST_NAME}`_`${getParamValue(&quot;pwm$idx&quot;, &quot;pwmName&quot;)}`_NUM" value="`${pwmNum$idx}`" public="true" include="true" repeatCount="3" />
    <ConfigDefine name="`${INST_NAME}`_SYNC_NUM" value="`${getParamValue(&quot;syncTimer&quot;, &quot;cntInst&quot;)}`U" public="true" include="true" />
    <ConfigDefine name="`${INST_NAME}`_FAST_NUM" value="`${getParamValue(&quot;fastTimer&quot;, &quot;cntInst&quot;)}`U" public="true" include="true" />
    <ConfigDefine name="`${INST_NAME}`_SLOW_NUM" value="`${getParamValue(&quot;slowTimer&quot;, &quot;cntInst&quot;)}`U" public="true" include="true" />
    <ConfigDefine name="`${INST_NAME}`_FAST_DIV" value="`${fastDiv}`" public="true" include="true" />
    <ConfigDefine name="`${INST_NAME}`_FAST_IRQn" value="`${getParamValue(makeId(&quot;seq0&quot;, &quot;irqn&quot;))}`" public="true" include="true" />
    <ConfigDefine name="`${INST_NAME}`_FAST_INTR_MSK" value="CY_HPPASS_INTR_SAR_RESULT_GROUP_`${getParamValue(&quot;seq0&quot;, &quot;grp&quot;)}`" public="false" include="true" />
    <ConfigDefine name="`${INST_NAME}`_ADC_`${chanName$idx}`_CHAN_IDX" value="`${getParamValue(&quot;chan$idx&quot;, &quot;chanInst&quot;)}`U" public="true" include="true" repeatCount="6" />
    <ConfigDefine name="`${INST_NAME}`_ADC_`${chanName$idx}`_RSLT_PTR" value="CY_HPPASS_SAR_CHAN_RSLT_PTR(`${getParamValue(&quot;chan$idx&quot;, &quot;chanInst&quot;)}`U)" public="true" include="true" repeatCount="6" />
    <ConfigDefine name="`${INST_NAME}`_ADC_`${chanName$idx}`_SAMP_GAIN" value="`${getParamValue(&quot;chan$idx&quot;, &quot;sampGainNum&quot;)}`U" public="true" include="true" repeatCount="6" />
    <ConfigDefine name="`${INST_NAME}`_ADC_VREF" value="`${vRefMv}`" public="true" include="true" />
    <ConfigDefine name="`${INST_NAME}`_SLOW_DIV" value="`${slowDiv}`" public="true" include="true" />
    <ConfigDefine name="`${INST_NAME}`_SLOW_IRQn" value="`${getParamValue(makeId(&quot;slowTimer&quot;, &quot;irqn&quot;))}`" public="true" include="true" />
    <ConfigDefine name="`${INST_NAME}`_SLOW_INTR_MSK" value="CY_TCPWM_INT_ON_TC" public="false" include="true" />
    <ConfigDefine name="`${INST_NAME}`_EN_PORT" value="GPIO_PRT`${getParamValue(&quot;enable&quot;, &quot;port&quot;)}`" public="true" include="true" />
    <ConfigDefine name="`${INST_NAME}`_EN_PIN" value="`${getParamValue(&quot;enable&quot;, &quot;pin&quot;)}`U" public="true" include="true" />
    <ConfigDefine name="`${fastPointer}`_SIZE" value="3" public="true" include="true" />
    <!-- <ConfigDefine name="`${INST_NAME}`_SYNC_START" value="`${getParamValue(&quot;syncTimer&quot;, &quot;syncName&quot;)}`_tr_out0_0_TRIGGER_IN" public="true" include="true" /> -->

    <!-- <ConfigExternVariable name="`${fastPointer . &quot;&#91;&#93;&quot;}`" type="int16_t" const="false" include="true" /> -->
    <ConfigExternVariable name="`${getParamValue(&quot;syncTimer&quot;, &quot;cfgName&quot;)}`" type="cy_stc_tcpwm_counter_config_t" const="`${inFlash}`" include="true" />
    <ConfigExternVariable name="`${getParamValue(&quot;fastTimer&quot;, &quot;cfgName&quot;)}`" type="cy_stc_tcpwm_counter_config_t" const="`${inFlash}`" include="true" />
    <ConfigExternVariable name="`${getParamValue(&quot;slowTimer&quot;, &quot;cfgName&quot;)}`" type="cy_stc_tcpwm_counter_config_t" const="`${inFlash}`" include="true" />
    <!-- <ConfigVariable name="`${INST_NAME . &quot;_FAST_ISR(void)&quot;}`" type="void" const="false" public="false" include="true" /> -->
    <!-- <ConfigVariable name="`${INST_NAME . &quot;_SLOW_ISR(void)&quot;}`" type="void" const="false" public="false" include="true" /> -->
    <ConfigArray name="`${fastPointer}`" type="int16_t" const="false" public="true" include="true" arraySize="`${fastPointer}`_SIZE" >
      <ArrayElement value="0" count="3" />
    </ConfigArray>

    <ConfigStruct name="`${INST_NAME}`_pwmCfg" type="cy_stc_tcpwm_pwm_config_t" const="`${inFlash}`" public="true"  include="true" >
      <Member name="pwmMode" value="CY_TCPWM_PWM_MODE_DEADTIME" />
      <Member name="clockPrescaler" value="CY_TCPWM_PWM_PRESCALER_DIVBY_1" />
      <Member name="pwmAlignment" value="`${alignment}`" />
      <Member name="deadTimeClocks" value="`${rDeadCy}`U" />
      <Member name="runMode" value="CY_TCPWM_PWM_CONTINUOUS" />
      <Member name="period0" value="`${alignSym ? pwmPeriodCy : pwmPeriodCy-1}`U" />
      <Member name="period1" value="`${alignSym ? pwmPeriodCy : pwmPeriodCy-1}`U" />
      <Member name="enablePeriodSwap" value="false" />
      <Member name="compare0" value="`${(CY_TCPWM_PWM_RIGHT_ALIGN ne alignment) ? pwmCompareCy : pwmCompareCy-1}`U" />
      <Member name="compare1" value="`${(CY_TCPWM_PWM_RIGHT_ALIGN ne alignment) ? pwmCompareCy : pwmCompareCy-1}`U" />
      <Member name="enableCompareSwap" value="true" />
      <Member name="interruptSources" value="CY_TCPWM_INT_NONE" />
      <Member name="invertPWMOut" value="`${hiInv ? &quot;CY_TCPWM_PWM_INVERT_ENABLE&quot; : &quot;CY_TCPWM_PWM_INVERT_DISABLE&quot;}`" />
      <Member name="invertPWMOutN" value="`${loInv ? &quot;CY_TCPWM_PWM_INVERT_ENABLE&quot; : &quot;CY_TCPWM_PWM_INVERT_DISABLE&quot;}`" />
      <Member name="killMode" value="CY_TCPWM_PWM_ASYNC_KILL" />
      <Member name="swapInputMode" value="CY_TCPWM_INPUT_RISINGEDGE" />
      <Member name="swapInput" value="`${definePrefix$idx}`_CAPTURE0_VALUE" />
      <!-- <Member name="swapInputMode" value="CY_TCPWM_INPUT_LEVEL" /> -->
      <!-- <Member name="swapInput" value="CY_TCPWM_INPUT_1" /> -->
      <!-- <Member name="reloadInputMode" value="CY_TCPWM_INPUT_RISINGEDGE" /> -->
      <!-- <Member name="reloadInput" value="TCPWM`${getParamValue(&quot;slowTimer&quot;, &quot;tcpwmInst&quot;)}`_GRP`${getParamValue(&quot;pwm0&quot;, &quot;grpInst&quot;)}`_CNT`${getParamValue(&quot;pwm0&quot;, &quot;cntNum&quot;)}`_RELOAD_VALUE" /> -->
      <Member name="reloadInputMode" value="CY_TCPWM_INPUT_LEVEL" />
      <Member name="reloadInput" value="CY_TCPWM_INPUT_0" />
      <Member name="startInputMode" value="CY_TCPWM_INPUT_RISINGEDGE" />
      <Member name="startInput" value="`${definePrefix$idx}`_START_VALUE" />
      <!-- <Member name="startInputMode" value="CY_TCPWM_INPUT_LEVEL" /> -->
      <!-- <Member name="startInput" value="CY_TCPWM_INPUT_0" /> -->
      <Member name="killInputMode" value="`${killInputEnabled ? killInputMode : &quot;CY_TCPWM_INPUT_LEVEL&quot;}`" />
      <Member name="killInput" value="`${killInputEnabled ? cast(string, definePrefix$idx).&quot;_STOP_VALUE&quot; : &quot;CY_TCPWM_INPUT_0&quot;}`" />
      <Member name="countInputMode" value="CY_TCPWM_INPUT_LEVEL" />
      <Member name="countInput" value="CY_TCPWM_INPUT_1" />
      <!-- <Member name="swapOverflowUnderflow" value="`${((pwmAlignment eq CY_TCPWM_PWM_CENTER_ALIGN) || (pwmAlignment eq CY_TCPWM_PWM_ASYMMETRIC_ALIGN)) ? SwapUnderflowOverflow : false}`" /> -->
      <Member name="swapOverflowUnderflow" value="false" />
      <Member name="immediateKill" value="true" />
      <Member name="tapsEnabled" value="0U" />
      <Member name="compare2" value="`${(CY_TCPWM_PWM_CENTER_ASYMMETRIC_CC0_CC1_ALIGN eq alignment) ? pwmCompareCy : 0}`U" />
      <Member name="compare3" value="`${(CY_TCPWM_PWM_CENTER_ASYMMETRIC_CC0_CC1_ALIGN eq alignment) ? pwmCompareCy : 0}`U" />
      <Member name="enableCompare1Swap" value="`${(CY_TCPWM_PWM_CENTER_ASYMMETRIC_CC0_CC1_ALIGN eq alignment) ? true : false}`" />
      <Member name="compare0MatchUp" value="`${(CY_TCPWM_PWM_RIGHT_ALIGN ne alignment) ? true : false}`" />
      <Member name="compare0MatchDown" value="`${(CY_TCPWM_PWM_RIGHT_ALIGN eq alignment) || (CY_TCPWM_PWM_CENTER_ALIGN eq alignment) ? true : false}`" />
      <Member name="compare1MatchUp" value="false" />
      <Member name="compare1MatchDown" value="`${(CY_TCPWM_PWM_CENTER_ASYMMETRIC_CC0_CC1_ALIGN eq alignment) ? true : false}`" />
      <Member name="kill1InputMode" value="CY_TCPWM_INPUT_LEVEL" />
      <Member name="kill1Input" value="CY_TCPWM_INPUT_0" />
      <Member name="pwmOnDisable" value="`${pasOut}`" />
      <Member name="trigger0Event" value="CY_TCPWM_CNT_TRIGGER_ON_DISABLED" />
      <Member name="trigger1Event" value="CY_TCPWM_CNT_TRIGGER_ON_DISABLED" />
      <Member name="reloadLineSelect" value="`${reload_line_sel}`" />
      <Member name="line_out_sel" value="`${line_out_source}`" />
      <Member name="linecompl_out_sel" value="`${linecompl_out_source}`" />
      <Member name="line_out_sel_buff" value="`${buff_line_out_source}`" />
      <Member name="linecompl_out_sel_buff" value="`${buff_linecompl_out_source}`" />
      <Member name="deadTimeClocks_linecompl_out" value="`${fDeadCy}`U" />
      <Member name="hrpwm_enable" value="false" guard="defined (CY_IP_MXS40TCPWM)" />
      <Member name="hrpwm_input_freq" value="CY_TCPWM_HRPWM_FREQ_80MHZ_OR_100MHZ" guard="defined (CY_IP_MXS40TCPWM)" />
      <Member name="kill_line_polarity" value="`${killOut}`" guard="defined (CY_IP_MXS40TCPWM)" />
      <Member name="deadTimeClocksBuff" value="`${rDeadCy}`U" guard="defined (CY_IP_MXS40TCPWM)" />
      <Member name="deadTimeClocksBuff_linecompl_out" value="`${fDeadCy}`U" guard="defined (CY_IP_MXS40TCPWM)" />
      <Member name="buffer_swap_enable" value="false" guard="defined (CY_IP_MXS40TCPWM)" />
      <Member name="glitch_filter_enable" value="`${(gf_enable)}`" guard="defined (CY_IP_MXS40TCPWM)" />
      <Member name="gf_depth" value="`${(gf_depth)}`" guard="defined (CY_IP_MXS40TCPWM)" />
      <Member name="dithering_mode" value="`${dithering_mode}`" guard="defined (CY_IP_MXS40TCPWM)" />
      <Member name="period_dithering_value" value="`${Period_Dithering}`" guard="defined (CY_IP_MXS40TCPWM)" />
      <Member name="duty_dithering_value" value="`${Duty_Dithering}`" guard="defined (CY_IP_MXS40TCPWM)" />
      <Member name="limiter" value="`${limiter}`" guard="defined (CY_IP_MXS40TCPWM)" />
    </ConfigStruct>

    <ConfigStruct name="`${INST_NAME}`_fault" type="mtb_stc_mcdi_gpio_t" const="`${inFlash}`" public="true" include="`${faultCb}`">
      <Member name="base" value="GPIO_PRT`${getParamValue(&quot;fault&quot;, &quot;port&quot;)}`" />
      <Member name="pinNum" value="`${getParamValue(&quot;fault&quot;, &quot;pin&quot;)}`UL" />
    </ConfigStruct>

    <ConfigStruct name="`${INST_NAME}`_cfg" type="mtb_stc_mcdi_cfg_t" const="`${inFlash}`" public="true" include="true" >
      <Member name="topo" value="MTB_MCDI_3SHUNT" />
      <Member name="tcpwmBase" value="`${pwmBase}`" />
      <Member name="fastIntrMsk" value="CY_HPPASS_INTR_SAR_RESULT_GROUP_`${getParamValue(&quot;seq0&quot;, &quot;grp&quot;)}`" />
      <Member name="slowIntrMsk" value="CY_TCPWM_INT_ON_TC" />
      <Member name="syncStartTrig" value="(uint32_t)`${getParamValue(&quot;syncTimer&quot;, &quot;syncName&quot;)}`_tr_out0_0_TRIGGER_IN" />
      <ConfigArray name="pwm" type="nested" const="false" public="true"  include="true" >
        <ConfigStruct name="empty" type="nested" const="false" public="true"  include="true" repeatCount="3">
          <Member name="idx" value="`${pwmNum$idx{1}}`" />
          <Member name="cfg" value="&amp;`${INST_NAME}`_pwmCfg" />
        </ConfigStruct>
      </ConfigArray>
      <ConfigArray name="tmr" type="nested" const="false" public="true"  include="true" >
        <ConfigStruct name="empty" type="nested" const="false" public="true"  include="true">
          <Member name="idx" value="`${getParamValue(&quot;syncTimer&quot;, &quot;cntInst&quot;)}`" />
          <Member name="cfg" value="&amp;`${getParamValue(&quot;syncTimer&quot;, &quot;cfgName&quot;)}`" />
        </ConfigStruct>
        <ConfigStruct name="empty" type="nested" const="false" public="true"  include="true">
          <Member name="idx" value="`${getParamValue(&quot;fastTimer&quot;, &quot;cntInst&quot;)}`" />
          <Member name="cfg" value="&amp;`${getParamValue(&quot;fastTimer&quot;, &quot;cfgName&quot;)}`" />
        </ConfigStruct>
        <ConfigStruct name="empty" type="nested" const="false" public="true"  include="true">
          <Member name="idx" value="`${getParamValue(&quot;slowTimer&quot;, &quot;cntInst&quot;)}`" />
          <Member name="cfg" value="&amp;`${getParamValue(&quot;slowTimer&quot;, &quot;cfgName&quot;)}`" />
        </ConfigStruct>
      </ConfigArray>
      <Member name="fault" value="`${(faultCb) ? &quot;&amp;&quot; . INST_NAME . &quot;_fault&quot; : &quot;NULL&quot;}`" />
    </ConfigStruct>

    <!-- <ConfigStruct name="`${INST_NAME}`_fastInterrupt" type="cy_stc_sysint_t" const="false" public="true" include="true" > -->
      <!-- <Member name="intrSrc" value="`${INST_NAME}`_FAST_IRQn" /> -->
      <!-- <Member name="intrPriority" value="`${fastPrio}`" /> -->
    <!-- </ConfigStruct> -->

    <!-- <ConfigStruct name="`${INST_NAME}`_slowInterrupt" type="cy_stc_sysint_t" const="false" public="true" include="true" > -->
      <!-- <Member name="intrSrc" value="`${INST_NAME}`_SLOW_IRQn" /> -->
      <!-- <Member name="intrPriority" value="`${slowPrio}`" /> -->
    <!-- </ConfigStruct> -->

    <ConfigExternFunction name="" signature="uint16_t `${fastCbName . &quot;(void)&quot;}`" include="true"/>
    <ConfigExternFunction name="" signature="uint16_t `${slowCbName . &quot;(void)&quot;}`" include="true"/>

    <ConfigFunction signature="void `${INST_NAME}`_FAST_ISR(void)"  public="true" include="true"
                    body="    	uint32_t intr = Cy_HPPASS_SAR_Result_GetInterruptStatus();&#13;    if (0UL != (`${INST_NAME}`_FAST_INTR_MSK &amp; intr))&#13;    {&#13;
       `${fastPointer}`[0] = (int16_t)*CY_HPPASS_SAR_CHAN_RSLT_PTR(`${getParamValue(&quot;chan0&quot;, &quot;chanInst&quot;)}`U);&#13;
       `${fastPointer}`[1] = (int16_t)*CY_HPPASS_SAR_CHAN_RSLT_PTR(`${getParamValue(&quot;chan1&quot;, &quot;chanInst&quot;)}`U);&#13;
       `${fastPointer}`[2] = (int16_t)*CY_HPPASS_SAR_CHAN_RSLT_PTR(`${getParamValue(&quot;chan2&quot;, &quot;chanInst&quot;)}`U);&#13;        (void)`${fastCbName}`();&#13;    }&#13;    Cy_HPPASS_SAR_Result_ClearInterrupt(intr);" />

    <ConfigFunction signature="void `${INST_NAME}`_SLOW_ISR(void)"  public="true" include="true"
                    body="    	uint32_t intr = Cy_TCPWM_GetInterruptStatus(`${pwmBase}`, `${getParamValue(&quot;slowTimer&quot;, &quot;cntInst&quot;)}`UL);&#13;    if (0UL != (`${INST_NAME}`_SLOW_INTR_MSK &amp; intr))&#13;    {&#13;        (void)`${slowCbName}`();&#13;    }&#13;    Cy_TCPWM_ClearInterrupt(`${pwmBase}`, `${getParamValue(&quot;slowTimer&quot;, &quot;cntInst&quot;)}`UL, intr);" />

    <ConfigFunction signature="__WEAK void __NO_RETURN `${INST_NAME}`_Error(cy_rslt_t error)"
                    body="    (void)error; /* Suppress the compiler warning */&#xA;    while(true){;};" public="prototype_in_header" publicSignature="void `${INST_NAME}`_Error(cy_rslt_t error)" include="true" />

    <ConfigFunction signature="void `${INST_NAME}`_init(void)" public="true" include="true"
                    body="    cy_rslt_t `${INST_NAME}`_status = mtb_mcdi_init(&amp;`${INST_NAME}`_cfg);&#xA;    if (CY_RSLT_SUCCESS != `${INST_NAME}`_status)&#xA;    {&#xA;        `${INST_NAME}`_Error(`${INST_NAME}`_status);&#xA;    }" />

    <ConfigFunction signature="__STATIC_INLINE void `${INST_NAME}`_enable(void)" public="in_header_file_only" include="true"
                    body="    (void)mtb_mcdi_enable(&amp;`${INST_NAME}`_cfg);" />

    <ConfigFunction signature="__STATIC_INLINE void `${INST_NAME}`_disable(void)" public="in_header_file_only" include="true"
                    body="    (void)mtb_mcdi_disable(&amp;`${INST_NAME}`_cfg);" />

    <ConfigFunction signature="void `${INST_NAME}`_start(void)" public="true" include="true"
                    body="    `${hppassInstName}`_start();&#xA;    cy_rslt_t `${INST_NAME}`_status = mtb_mcdi_start(&amp;`${INST_NAME}`_cfg);&#xA;    if (CY_RSLT_SUCCESS != `${INST_NAME}`_status)&#xA;    {&#xA;        `${INST_NAME}`_Error(`${INST_NAME}`_status);&#xA;    }" />

    <ConfigInstruction purpose="INITIALIZE" value="static cy_stc_sysint_t `${INST_NAME}`_fastInterrupt=&#13;    {&#13;        .intrSrc = `${INST_NAME}`_FAST_IRQn,&#13;        .intrPriority = 0,&#13;    };" include="true" />
    <ConfigInstruction purpose="INITIALIZE" value="static cy_stc_sysint_t `${INST_NAME}`_slowInterrupt=&#13;    {&#13;        .intrSrc = `${INST_NAME}`_SLOW_IRQn,&#13;        .intrPriority = 1,&#13;    };" include="true" />
<!-- Workaround, PWM kill by active Low/High -->
    <ConfigInstruction purpose="INITIALIZE" value="(void)Cy_TrigMux_Connect((uint32_t)`${getParamValue(&quot;fault&quot;, &quot;pinInstName&quot;)}`_digital_in_0_TRIGGER_IN, (uint32_t)`${getParamValue(&quot;pwm$idx&quot;, &quot;pwmInstName&quot;)}`_stop_0_TRIGGER_OUT, true, TRIGGER_TYPE_LEVEL);" include="`${(killInputEnabled) &amp;&amp; (killActiveLevel eq 0)}`" repeatCount="3" />
<!-- END -->
    <ConfigInstruction purpose="INITIALIZE" value="(void)Cy_SysClk_PeriphAssignDivider(`${clkDst$idx}`, `${getExposedMember(clkRcs, &quot;clockSel&quot;)}`);" include="`${clkUsed}`" repeatCount="3" />
    <ConfigInstruction purpose="INITIALIZE" value="`${INST_NAME}`_init();" include="`${init}`" />
    <ConfigInstruction purpose="INITIALIZE" value="(void)Cy_SysInt_Init(&amp;`${INST_NAME}`_fastInterrupt, `${INST_NAME}`_FAST_ISR);" include="true" />
    <ConfigInstruction purpose="INITIALIZE" value="(void)Cy_SysInt_Init(&amp;`${INST_NAME}`_slowInterrupt, `${INST_NAME}`_SLOW_ISR);" include="true" />
    <ConfigInstruction purpose="INITIALIZE" value="NVIC_ClearPendingIRQ(`${INST_NAME}`_FAST_IRQn);" include="true" />
    <ConfigInstruction purpose="INITIALIZE" value="NVIC_ClearPendingIRQ(`${INST_NAME}`_SLOW_IRQn);" include="true" />
    <ConfigInstruction purpose="INITIALIZE" value="NVIC_EnableIRQ(`${INST_NAME}`_FAST_IRQn);" include="true" />
    <ConfigInstruction purpose="INITIALIZE" value="NVIC_EnableIRQ(`${INST_NAME}`_SLOW_IRQn);" include="true" />
  </ConfigFirmware>

  <PersonalityTemplate id="slowTimer">
    <FittingRules>
      <MappingRules>
        <IpBlock name="mxs40tcpwm" />
        <Resource name="tcpwm\[0\]\.group\[0\]\.cnt\[[0-9]+\]"/>
      </MappingRules>
    </FittingRules>
    <Parameters>
      <ParamBool id="debug" name="debug" group="Internal" default="false" visible="false" editable="false" desc="" />
      <ParamRange id="pCntGroup" name="pCntGroup" desc="pCntGroup" group="Internal"  default="`${getInstNumber(&quot;group&quot;)}`" min="0" max="3" resolution="1" visible="false" editable="false" />
      <ParamRange id="pMaxGroupCount" name="pMaxGroupCount" desc="pMaxGroupCount" group="Internal"  default="4" min="0" max="4" resolution="1" visible="false" editable="false" />
      <ParamString id="pCntWidthEx" name="pCntWidthEx" desc="pCntWidthEx" group="Internal"  default="GRP_NR[`${pCntGroup}`].CNT.GRP_CNT_WIDTH" visible="false" editable="false" />
      <ParamRange id="pCntWidth" name="pCntWidth" desc="pCntWidth" group="Internal"  default="`${lookupExpression(pCntWidthEx)}`" min="0" max="32" resolution="1" visible="false" editable="false" />
      <ParamRange id="pCntWidthMax" name="pCntWidthMax" desc="pCntWidthMax" group="Internal"  default="`${pow(2, pCntWidth)-1}`" min="0" max="4294967295" resolution="1" visible="false" editable="false" />
      <ParamString id="pCntCC1Ex" name="pCntCC1Ex" desc="pCntCC1Ex" group="Internal" default="GRP_NR[`${pCntGroup}`].CNT.GRP_CC1_PRESENT" visible="false" editable="false" />
      <ParamBool id="pCntCC1" name="pCntCC1" desc="pCntCC1" group="Internal" default="`${lookupExpression(pCntCC1Ex) eq 1}`" visible="false" editable="false" />
      <ParamChoice id="ClockPrescaler" name="Clock Prescaler" group="General" default="CY_TCPWM_COUNTER_PRESCALER_DIVBY_1" visible="`${debug}`" editable="`${debug}`" desc="Divides down the input clock." >
        <Entry name="Divide by 1" value="CY_TCPWM_COUNTER_PRESCALER_DIVBY_1" visible="true" />
        <Entry name="Divide by 2" value="CY_TCPWM_COUNTER_PRESCALER_DIVBY_2" visible="true" />
        <Entry name="Divide by 4" value="CY_TCPWM_COUNTER_PRESCALER_DIVBY_4" visible="true" />
        <Entry name="Divide by 8" value="CY_TCPWM_COUNTER_PRESCALER_DIVBY_8" visible="true" />
        <Entry name="Divide by 16" value="CY_TCPWM_COUNTER_PRESCALER_DIVBY_16" visible="true" />
        <Entry name="Divide by 32" value="CY_TCPWM_COUNTER_PRESCALER_DIVBY_32" visible="true" />
        <Entry name="Divide by 64" value="CY_TCPWM_COUNTER_PRESCALER_DIVBY_64" visible="true" />
        <Entry name="Divide by 128" value="CY_TCPWM_COUNTER_PRESCALER_DIVBY_128" visible="true" />
      </ParamChoice>
      <ParamChoice id="Resolution" name="Counter Resolution" group="General" default="`${(pCntWidth eq 16) ? &quot;CY_TCPWM_COUNTER_RESOLUTION_WIDTH_16_BITS&quot; : &quot;CY_TCPWM_COUNTER_RESOLUTION_WIDTH_32_BITS&quot;}`" visible="`${debug}`" editable="false" desc="Selects the size of the counter.">
        <Entry name="16-bits" value="CY_TCPWM_COUNTER_RESOLUTION_WIDTH_16_BITS" visible="true" />
        <Entry name="32-bits" value="CY_TCPWM_COUNTER_RESOLUTION_WIDTH_32_BITS" visible="true" />
      </ParamChoice>
      <ParamChoice id="RunMode" name="Run Mode" group="General" default="CY_TCPWM_COUNTER_CONTINUOUS" visible="`${debug}`" editable="`${debug}`" desc="If Continuous is selected counter runs forever. If One Shot is selected counter runs for one period and stops.">
        <Entry name="Continuous" value="CY_TCPWM_COUNTER_CONTINUOUS" visible="true" />
        <Entry name="One Shot" value="CY_TCPWM_COUNTER_ONESHOT" visible="true" />
      </ParamChoice>
      <ParamChoice id="CompareOrCapture" name="Compare or Capture" group="General" default="CY_TCPWM_COUNTER_MODE_CAPTURE" visible="`${debug}`" editable="`${debug}`" desc="Selects the mode for the compare capture register.">
        <Entry name="Capture" value="CY_TCPWM_COUNTER_MODE_CAPTURE" visible="true" />
        <Entry name="Compare" value="CY_TCPWM_COUNTER_MODE_COMPARE" visible="true" />
      </ParamChoice>
      <ParamBool id="pCCeqCompare" name="pCCeqCompare" desc="pCCeqCompare" group="Internal" default="`${CompareOrCapture eq CY_TCPWM_COUNTER_MODE_COMPARE}`" visible="false" editable="false" />
      <ParamBool id="mxs40tcpwm" name="mxs40tcpwm" group="General" default="`${&quot;mxs40tcpwm&quot; eq getIpBlockName()}`" visible="`${debug}`" editable="false" desc="" />
      <ParamBool id="copy_enable" name="Shadow Copy Enable" group="General" default="false" visible="`${debug &amp;&amp; mxs40tcpwm}`" editable="`${debug &amp;&amp; mxs40tcpwm}`" desc="Specifies whether swapping mechanism between CC0 and buffered CC0, CC1 and buffered CC1, PERIOD and buffered PERIOD, DT and buffered DT are disabled." />
      <ParamChoice id="CountDirection" name="Count Direction" group="General" default="CY_TCPWM_COUNTER_COUNT_UP" visible="`${debug}`" editable="`${debug}`" desc="Selects the direction the counter counts." >
        <Entry name="Up" value="CY_TCPWM_COUNTER_COUNT_UP" visible="true" />
        <Entry name="Down" value="CY_TCPWM_COUNTER_COUNT_DOWN" visible="true" />
        <Entry name="Up/Down1" value="CY_TCPWM_COUNTER_COUNT_UP_DOWN_1" visible="true" />
        <Entry name="Up/Down2" value="CY_TCPWM_COUNTER_COUNT_UP_DOWN_2" visible="true" />
      </ParamChoice>
      <!-- <ParamBool id="timer_direction_available" name="Timer Direction Availability" group="General" default="false" visible="`${debug}`" editable="`${debug &amp;&amp; mxs40tcpwm &amp;&amp; (CompareOrCapture eq CY_TCPWM_COUNTER_MODE_COMPARE) &amp;&amp; ((CountDirection eq CY_TCPWM_COUNTER_COUNT_UP) || (CountDirection eq CY_TCPWM_COUNTER_COUNT_DOWN))}`" desc="timer direction availability" /> -->
      <ParamChoice id="Timer_Direction_Mode" name="Timer Direction Mode" group="General" default="CY_TCPWM_COUNTER_DIRECTION_DISABLE" visible="`${debug &amp;&amp; mxs40tcpwm &amp;&amp; (CompareOrCapture eq CY_TCPWM_COUNTER_MODE_COMPARE) &amp;&amp; ((CountDirection eq CY_TCPWM_COUNTER_COUNT_UP) || (CountDirection eq CY_TCPWM_COUNTER_COUNT_DOWN))}`" editable="`${debug &amp;&amp; mxs40tcpwm &amp;&amp; (CompareOrCapture eq CY_TCPWM_COUNTER_MODE_COMPARE) &amp;&amp; ((CountDirection eq CY_TCPWM_COUNTER_COUNT_UP) || (CountDirection eq CY_TCPWM_COUNTER_COUNT_DOWN))}`" desc="Counter changes it's direction based on the capture 0 input ." >
        <Entry name="Counter Direction Disable" value="CY_TCPWM_COUNTER_DIRECTION_DISABLE" visible="true" />
        <Entry name="Counter Direction Falling" value="CY_TCPWM_COUNTER_DIRECTION_FALLING" visible="true" />
        <Entry name="Counter Direction Rising"  value="CY_TCPWM_COUNTER_DIRECTION_RISING"  visible="true" />
        <Entry name="Counter Direction Level"   value="CY_TCPWM_COUNTER_DIRECTION_LEVEL"   visible="true" />
      </ParamChoice>
      <ParamBool id="gf_enable" name="Glitch Filter Enable" group="Glitch Filter" default="false" visible="`${debug &amp;&amp; mxs40tcpwm}`" editable="`${debug}`" desc="Enables Glitch filter for input triggers. The Number of glitch filters is design specific and if there is a glitch filter connected to this input trigger it will be used. " />
      <ParamChoice id="gf_depth" name="Glitch Filter Depth" group="Glitch Filter" default="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_0" visible="`${debug &amp;&amp; gf_enable &amp;&amp; mxs40tcpwm}`" editable="`${debug}`" desc="Glitch filter depth support values." >
        <Entry name="Depth Value 0"   value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_0"   visible="true" />
        <Entry name="Depth Value 1"   value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_1"   visible="true" />
        <Entry name="Depth Value 2"   value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_2"   visible="true" />
        <Entry name="Depth Value 4"   value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_4"   visible="true" />
        <Entry name="Depth Value 8"   value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_8"   visible="true" />
        <Entry name="Depth Value 16"  value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_16"  visible="true" />
        <Entry name="Depth Value 32"  value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_32"  visible="true" />
        <Entry name="Depth Value 64"  value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_64"  visible="true" />
        <Entry name="Depth Value 128" value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_128" visible="true" />
        <Entry name="Depth Value 256" value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_256" visible="true" />
        <Entry name="Depth Value 512" value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_512" visible="true" />
      </ParamChoice>
      <ParamBool id="EnableCompare0Swap" name="Enable Compare 0 Swap" group="Compare" default="false" visible="`${debug &amp;&amp; pCCeqCompare}`" editable="`${debug}`" desc="When selected the compare register is swapped between compare 0 and compare 0 buffer each time the comparison is true." />
      <ParamRange id="Compare0" name="`${EnableCompare0Swap ? &quot;Compare 0&quot; : &quot;Compare&quot;}`" group="Compare" default="16384" min="0" max="`${pCntWidthMax}`" resolution="1" visible="`${debug &amp;&amp; pCCeqCompare}`" editable="`${debug}`" desc="Sets the compare value. Range: 0-65535 (for 16 bit resolution) or 0–4294967295 (for 32 bit resolution)." />
      <ParamRange id="Compare1" name="Compare 0 Buff" group="Compare" default="16384" min="0" max="`${pCntWidthMax}`" resolution="1" visible="`${debug &amp;&amp; pCCeqCompare &amp;&amp; EnableCompare0Swap}`" editable="`${debug}`" desc="Sets the compare value. Range: 0-65535 (for 16 bit resolution) or 0–4294967295 (for 32 bit resolution)." />
      <ParamBool id="EnableCompare1Swap" name="Enable Compare 1 Swap" group="Compare" default="false" visible="`${debug &amp;&amp; pCCeqCompare &amp;&amp; pCntCC1}`" editable="`${debug}`" desc="When selected the compare register is swapped between compare 1 and compare 1 buffer each time the comparison is true." />
      <ParamRange id="Compare2" name="Compare 1" group="Compare" default="16384" min="0" max="`${pCntWidthMax}`" resolution="1" visible="`${debug &amp;&amp; pCCeqCompare &amp;&amp; pCntCC1}`" editable="`${debug}`" desc="Sets the compare value. When the count value equals the compare the compare output pulses high. Range: 0-65535 (for 16 bit resolution) or 0–4294967295 (for 32 bit resolution)." />
      <ParamRange id="Compare3" name="Compare 1 Buff" group="Compare" default="16384" min="0" max="`${pCntWidthMax}`" resolution="1" visible="`${debug &amp;&amp; pCCeqCompare &amp;&amp; EnableCompare1Swap &amp;&amp; pCntCC1}`" editable="`${debug}`" desc="Sets the buffered compare value. Range: 0-65535 (for 16 bit resolution) or 0–4294967295 (for 32 bit resolution)." />
      <ParamBool id="InterruptTC" name="Overflow &amp; Underflow" group="Interrupt Source" default="true" visible="`${debug}`" editable="`${debug}`" desc="Generate interrupt on Overflow &amp; Underflow events" />
      <ParamBool id="InterruptCC0" name="Compare 0 &amp; Capture 0" group="Interrupt Source" default="false" visible="`${debug}`" editable="`${debug}`" desc="Generate interrupt on Compare &amp; Capture 0 events" />
      <ParamBool id="InterruptCC1" name="Compare 1 &amp; Capture 1" group="Interrupt Source" default="false" visible="`${debug &amp;&amp; pCntCC1}`" editable="`${debug}`" desc="Generate interrupt on Compare1 event" />
      <ParamString id="InterruptSource" name="InterruptSource" desc="InterruptSource" group="Interrupt Source" default="(CY_TCPWM_INT_ON_TC `${(InterruptTC)? &quot;&quot; : &quot;&amp; 0U&quot;}`) | (CY_TCPWM_INT_ON_CC0 `${(InterruptCC0)? &quot;&quot; : &quot;&amp; 0U&quot;}`) | (CY_TCPWM_INT_ON_CC1 `${(InterruptCC1)? &quot;&quot; : &quot;&amp; 0U&quot;}`)" visible="`${debug}`" editable="false" />
      <ParamChoice id="Capture0Input" name="Capture 0 Input" group="Capture" default="CY_TCPWM_INPUT_DISABLED" visible="`${debug &amp;&amp; ((CompareOrCapture eq CY_TCPWM_COUNTER_MODE_CAPTURE) || (Timer_Direction_Mode ne CY_TCPWM_COUNTER_DIRECTION_DISABLE))}`" editable="`${debug}`" desc="This parameter determines if a Capture 0 terminal is displayed." >
        <Entry name="Rising Edge" value="CY_TCPWM_INPUT_RISINGEDGE" visible="`${(CompareOrCapture eq CY_TCPWM_COUNTER_MODE_CAPTURE) || (Timer_Direction_Mode eq CY_TCPWM_COUNTER_DIRECTION_DISABLE)}`" />
        <Entry name="Falling Edge" value="CY_TCPWM_INPUT_FALLINGEDGE" visible="`${(CompareOrCapture eq CY_TCPWM_COUNTER_MODE_CAPTURE) || (Timer_Direction_Mode eq CY_TCPWM_COUNTER_DIRECTION_DISABLE)}`" />
        <Entry name="Either Edge" value="CY_TCPWM_INPUT_EITHEREDGE" visible="`${(CompareOrCapture eq CY_TCPWM_COUNTER_MODE_CAPTURE) || (Timer_Direction_Mode eq CY_TCPWM_COUNTER_DIRECTION_DISABLE)}`" />
        <Entry name="Level" value="CY_TCPWM_INPUT_LEVEL" visible="`${(Timer_Direction_Mode ne CY_TCPWM_COUNTER_DIRECTION_DISABLE)}`" />
        <Entry name="Disabled" value="CY_TCPWM_INPUT_DISABLED" visible="true" />
      </ParamChoice>
      <ParamChoice id="Capture1Input" name="Capture 1 Input" group="Capture" default="CY_TCPWM_INPUT_DISABLED" visible="`${debug &amp;&amp; pCntCC1 &amp;&amp; (CompareOrCapture eq CY_TCPWM_COUNTER_MODE_CAPTURE)}`" editable="`${debug}`" desc="This parameter determines if a Capture 1 terminal is displayed." >
        <Entry name="Rising Edge" value="CY_TCPWM_INPUT_RISINGEDGE" visible="true" />
        <Entry name="Falling Edge" value="CY_TCPWM_INPUT_FALLINGEDGE" visible="true" />
        <Entry name="Either Edge" value="CY_TCPWM_INPUT_EITHEREDGE" visible="true" />
        <Entry name="Disabled" value="CY_TCPWM_INPUT_DISABLED" visible="true" />
      </ParamChoice>
      <ParamChoice id="CountInput" name="Count Input" group="Inputs" default="CY_TCPWM_INPUT_DISABLED" visible="`${debug}`" editable="`${debug}`" desc="Determines if a count input is needed and how that input is registered." >
        <Entry name="Rising Edge" value="CY_TCPWM_INPUT_RISINGEDGE" visible="true" />
        <Entry name="Falling Edge" value="CY_TCPWM_INPUT_FALLINGEDGE" visible="true" />
        <Entry name="Either Edge" value="CY_TCPWM_INPUT_EITHEREDGE" visible="true" />
        <Entry name="Level" value="CY_TCPWM_INPUT_LEVEL" visible="true" />
        <Entry name="Disabled" value="CY_TCPWM_INPUT_DISABLED" visible="true" />
      </ParamChoice>
      <ParamChoice id="StopInput" name="Stop Input" group="Inputs" default="CY_TCPWM_INPUT_DISABLED" visible="`${debug}`" editable="`${debug}`" desc="Determines if a stop input is needed and how that input is registered." >
        <Entry name="Rising Edge" value="CY_TCPWM_INPUT_RISINGEDGE" visible="true" />
        <Entry name="Falling Edge" value="CY_TCPWM_INPUT_FALLINGEDGE" visible="true" />
        <Entry name="Either Edge" value="CY_TCPWM_INPUT_EITHEREDGE" visible="true" />
        <Entry name="Disabled" value="CY_TCPWM_INPUT_DISABLED" visible="true" />
      </ParamChoice>
      <ParamChoice id="ReloadInput" name="Reload Input" group="Inputs" default="CY_TCPWM_INPUT_DISABLED" visible="`${debug}`" editable="`${debug}`" desc="Determines if a reload input is needed and how the reload signal input is registered." >
        <Entry name="Rising Edge" value="CY_TCPWM_INPUT_RISINGEDGE" visible="true" />
        <Entry name="Falling Edge" value="CY_TCPWM_INPUT_FALLINGEDGE" visible="true" />
        <Entry name="Either Edge" value="CY_TCPWM_INPUT_EITHEREDGE" visible="true" />
        <Entry name="Disabled" value="CY_TCPWM_INPUT_DISABLED" visible="true" />
      </ParamChoice>
      <ParamChoice id="StartInput" name="Start Input" group="Inputs" default="CY_TCPWM_INPUT_DISABLED" visible="`${debug}`" editable="`${debug}`" desc="Determines if a start input is needed and how that input is registered." >
        <Entry name="Rising Edge" value="CY_TCPWM_INPUT_RISINGEDGE" visible="true" />
        <Entry name="Falling Edge" value="CY_TCPWM_INPUT_FALLINGEDGE" visible="true" />
        <Entry name="Either Edge" value="CY_TCPWM_INPUT_EITHEREDGE" visible="true" />
        <Entry name="Disabled" value="CY_TCPWM_INPUT_DISABLED" visible="true" />
      </ParamChoice>
      <ParamChoice id="trigger0Event" name="Trigger 0 Event" group="Trigger Outputs" default="CY_TCPWM_CNT_TRIGGER_ON_DISABLED" visible="`${debug}`" editable="`${debug}`" desc="This output used to connect TCPWM event signals to other peripherals." >
        <Entry name="Overflow" value="CY_TCPWM_CNT_TRIGGER_ON_OVERFLOW" visible="true" />
        <Entry name="Underflow" value="CY_TCPWM_CNT_TRIGGER_ON_UNDEFLOW" visible="true" />
        <Entry name="Terminal Count" value="CY_TCPWM_CNT_TRIGGER_ON_TC" visible="true" />
        <Entry name="Compare 0 Match" value="CY_TCPWM_CNT_TRIGGER_ON_CC0_MATCH" visible="true" />
        <Entry name="Compare 1 Match" value="CY_TCPWM_CNT_TRIGGER_ON_CC1_MATCH" visible="false" />
        <Entry name="Disabled" value="CY_TCPWM_CNT_TRIGGER_ON_DISABLED" visible="true" />
      </ParamChoice>
      <ParamChoice id="trigger1Event" name="Trigger 1 Event" group="Trigger Outputs" default="CY_TCPWM_CNT_TRIGGER_ON_DISABLED" visible="`${debug}`" editable="`${debug}`" desc="This output used to connect TCPWM event signals to other peripherals." >
        <Entry name="Overflow" value="CY_TCPWM_CNT_TRIGGER_ON_OVERFLOW" visible="true" />
        <Entry name="Underflow" value="CY_TCPWM_CNT_TRIGGER_ON_UNDEFLOW" visible="true" />
        <Entry name="Terminal Count" value="CY_TCPWM_CNT_TRIGGER_ON_TC" visible="true" />
        <Entry name="Compare 0 Match" value="CY_TCPWM_CNT_TRIGGER_ON_CC0_MATCH" visible="true" />
        <Entry name="Compare 1 Match" value="CY_TCPWM_CNT_TRIGGER_ON_CC1_MATCH" visible="false" />
        <Entry name="Disabled" value="CY_TCPWM_CNT_TRIGGER_ON_DISABLED" visible="true" />
      </ParamChoice>
      <ParamString id="definePrefix" name="Define prefix" group="Internal" default="`${&quot;TCPWM&quot; . tcpwmInst . &quot;_GRP&quot; . pCntGroup . &quot;_CNT&quot; . getInstNumber(&quot;cnt&quot;)}`" visible="`${debug}`" editable="false" desc="" />
      <ParamString id="defineInputDisabled" name="Define input disabled" group="Internal" default="`${INST_NAME . &quot;_INPUT_DISABLED &amp; 0x3U&quot;}`" visible="`${debug}`" editable="false" desc="" />
    </Parameters>
    <ConfigFirmware>
      <ConfigInclude value="cy_tcpwm_counter.h" include="true" />
      <ConfigInclude value="cy_sysclk.h" include="true" />
      <ConfigInclude value="cycfg_routing.h" include="true" />
      <!-- <ConfigDefine name="`${INST_NAME}`_NUM" value="`${cntInst}`UL" public="true" include="true" /> -->
      <ConfigDefine name="`${INST_NAME}`_INPUT_DISABLED" value="0x7U" public="false" include="true" />
      <ConfigStruct name="`${cfgName}`" type="cy_stc_tcpwm_counter_config_t" const="`${getParamValue(&quot;3shunt&quot;, &quot;inFlash&quot;)}`" public="true" include="true" >
        <Member name="period" value="`${period - 1}`" />
        <Member name="clockPrescaler" value="`${ClockPrescaler}`" />
        <Member name="runMode" value="`${RunMode}`" />
        <Member name="countDirection" value="`${CountDirection}`" />
        <Member name="compareOrCapture" value="`${CompareOrCapture}`" />
        <Member name="compare0" value="`${Compare0}`" />
        <Member name="compare1" value="`${Compare1}`" />
        <Member name="enableCompareSwap" value="`${pCCeqCompare ? EnableCompare0Swap : pCCeqCompare}`" />
        <Member name="interruptSources" value="`${InterruptSource}`" />
        <Member name="captureInputMode" value="`${Capture0Input eq CY_TCPWM_INPUT_DISABLED ? defineInputDisabled : Capture0Input}`" />
        <Member name="captureInput" value="`${Capture0Input eq CY_TCPWM_INPUT_DISABLED ? &quot;CY_TCPWM_INPUT_0&quot; : (definePrefix . &quot;_CAPTURE0_VALUE&quot;)}`" />
        <Member name="reloadInputMode" value="`${ReloadInput eq CY_TCPWM_INPUT_DISABLED ? defineInputDisabled : ReloadInput}`" />
        <Member name="reloadInput" value="`${ReloadInput eq CY_TCPWM_INPUT_DISABLED ? &quot;CY_TCPWM_INPUT_0&quot; : (definePrefix . &quot;_RELOAD_VALUE&quot;)}`" />
        <Member name="startInputMode" value="`${StartInput eq CY_TCPWM_INPUT_DISABLED ? defineInputDisabled : StartInput}`" />
        <Member name="startInput" value="`${StartInput eq CY_TCPWM_INPUT_DISABLED ? &quot;CY_TCPWM_INPUT_0&quot; : (definePrefix . &quot;_START_VALUE&quot;)}`" />
        <Member name="stopInputMode" value="`${StopInput eq CY_TCPWM_INPUT_DISABLED ? defineInputDisabled : StopInput}`" />
        <Member name="stopInput" value="`${StopInput eq CY_TCPWM_INPUT_DISABLED ? &quot;CY_TCPWM_INPUT_0&quot; : (definePrefix . &quot;_STOP_VALUE&quot;)}`" />
        <Member name="countInputMode" value="`${CountInput eq CY_TCPWM_INPUT_DISABLED ? defineInputDisabled : CountInput}`" />
        <Member name="countInput" value="`${CountInput eq CY_TCPWM_INPUT_DISABLED ? &quot;CY_TCPWM_INPUT_1&quot; : (definePrefix . &quot;_COUNT_VALUE&quot;)}`" />
        <Member name="capture1InputMode" value="`${Capture1Input eq CY_TCPWM_INPUT_DISABLED ? defineInputDisabled : Capture1Input}`" />
        <Member name="capture1Input" value="`${Capture1Input eq CY_TCPWM_INPUT_DISABLED ? &quot;CY_TCPWM_INPUT_0&quot; : (definePrefix . &quot;_CAPTURE1_VALUE&quot;)}`" />
        <Member name="compare2" value="`${pCntCC1 ? Compare2 : &quot;CY_TCPWM_GRP_CNT_CC0_DEFAULT&quot;}`" />
        <Member name="compare3" value="`${pCntCC1 ? Compare3 : &quot;CY_TCPWM_GRP_CNT_CC0_BUFF_DEFAULT&quot;}`" />
        <Member name="enableCompare1Swap" value="`${pCCeqCompare ? EnableCompare1Swap : pCCeqCompare}`" />
        <Member name="trigger0Event" value="`${trigger0Event}`" />
        <Member name="trigger1Event" value="`${trigger1Event}`" />
        <Member name="buffer_swap_enable" value="`${copy_enable}`" guard="defined (CY_IP_MXS40TCPWM)" />
        <Member name="direction_mode" value="`${Timer_Direction_Mode}`" guard="defined (CY_IP_MXS40TCPWM)" />
        <Member name="glitch_filter_enable" value="`${gf_enable}`" guard="defined (CY_IP_MXS40TCPWM)" />
        <Member name="gf_depth" value="`${gf_depth}`" guard="defined (CY_IP_MXS40TCPWM)" />
      </ConfigStruct>

      <ConfigInstruction purpose="INITIALIZE" value="Cy_SysClk_PeriphAssignDivider(`${clkDst}`, `${getExposedMember(getBlockFromSignal(&quot;clock_counter_en[0]&quot;), &quot;clockSel&quot;)}`);" include="true" />

      <!-- <ConfigStruct name="`${INST_NAME}`_obj" type="cyhal_resource_inst_t" const="true" public="true" include="true" guard="defined(CY_USING_HAL_LITE)"> -->
        <!-- <Member name="type" value="CYHAL_RSC_TCPWM" /> -->
        <!-- <Member name="block_num" value="`${(getInstNumber(&quot;tcpwm&quot;) * pMaxGroupCount) + grpInst}`U" /> -->
        <!-- <Member name="channel_num" value="`${getInstNumber(&quot;cnt&quot;)}`U" /> -->
      <!-- </ConfigStruct> -->

      <!-- <ConfigStruct name="`${INST_NAME}`_clock" type="cyhal_clock_t" const="`${inFlash}`" public="true" include="true" guard="defined(CY_USING_HAL_LITE)"> -->
        <!-- <Member name="block" value="`${getExposedMember(pclk, &quot;hal_block&quot;)}`" /> -->
        <!-- <Member name="channel" value="`${getExposedMember(pclk, &quot;number&quot;)}`" /> -->
      <!-- </ConfigStruct> -->

      <!-- <ConfigStruct name="`${INST_NAME}`_hal_config" type="cyhal_pwm_configurator_t" const="`${inFlash}`" public="true" include="true" guard="defined (CY_USING_HAL) || defined(CY_USING_HAL_LITE)"> -->
        <!-- <Member name="resource" value="&amp;`${INST_NAME}`_obj" /> -->
        <!-- <Member name="config" value="&amp;`${INST_NAME}`_config" /> -->
        <!-- <Member name="clock" value="&amp;`${INST_NAME}`_clock" /> -->
      <!-- </ConfigStruct> -->
    </ConfigFirmware>
  </PersonalityTemplate>

  <PersonalityTemplate id="pwm$idx" repeatCount="3" >
    <FittingRules>
      <MappingRules>
        <IpBlock name="mxs40tcpwm" />
        <Resource name="tcpwm\[0\]\.group\[[1-9]\]\.cnt\[[0-9]+\]"/>
      </MappingRules>
    </FittingRules>
    <Parameters>
    </Parameters>
    <ConfigFirmware>
      <!-- <ConfigDefine name="`${INST_NAME}`_HW" value="TCPWM`${pwmInst}`" public="true" include="true" /> -->
    </ConfigFirmware>
  </PersonalityTemplate>

  <PersonalityTemplate id="syncTimer" >
    <FittingRules>
      <MappingRules>
        <IpBlock name="mxs40tcpwm" />
        <Resource name="tcpwm\[0\]\.group\[[1-9]\]\.cnt\[[0-9]+\]"/>
      </MappingRules>
    </FittingRules>
    <Parameters>
      <ParamBool id="debug" name="debug" group="Internal" default="false" visible="false" editable="false" desc="" />
      <ParamRange id="pCntGroup" name="pCntGroup" desc="pCntGroup" group="Internal"  default="`${getInstNumber(&quot;group&quot;)}`" min="0" max="3" resolution="1" visible="false" editable="false" />
      <ParamRange id="pMaxGroupCount" name="pMaxGroupCount" desc="pMaxGroupCount" group="Internal"  default="4" min="0" max="4" resolution="1" visible="false" editable="false" />
      <ParamString id="pCntWidthEx" name="pCntWidthEx" desc="pCntWidthEx" group="Internal"  default="GRP_NR[`${pCntGroup}`].CNT.GRP_CNT_WIDTH" visible="false" editable="false" />
      <ParamRange id="pCntWidth" name="pCntWidth" desc="pCntWidth" group="Internal"  default="`${lookupExpression(pCntWidthEx)}`" min="0" max="32" resolution="1" visible="false" editable="false" />
      <ParamRange id="pCntWidthMax" name="pCntWidthMax" desc="pCntWidthMax" group="Internal"  default="`${pow(2, pCntWidth)-1}`" min="0" max="4294967295" resolution="1" visible="false" editable="false" />
      <ParamString id="pCntCC1Ex" name="pCntCC1Ex" desc="pCntCC1Ex" group="Internal" default="GRP_NR[`${pCntGroup}`].CNT.GRP_CC1_PRESENT" visible="false" editable="false" />
      <ParamBool id="pCntCC1" name="pCntCC1" desc="pCntCC1" group="Internal" default="`${lookupExpression(pCntCC1Ex) eq 1}`" visible="false" editable="false" />
      <ParamChoice id="ClockPrescaler" name="Clock Prescaler" group="General" default="CY_TCPWM_COUNTER_PRESCALER_DIVBY_1" visible="`${debug}`" editable="`${debug}`" desc="Divides down the input clock." >
        <Entry name="Divide by 1" value="CY_TCPWM_COUNTER_PRESCALER_DIVBY_1" visible="true" />
        <Entry name="Divide by 2" value="CY_TCPWM_COUNTER_PRESCALER_DIVBY_2" visible="true" />
        <Entry name="Divide by 4" value="CY_TCPWM_COUNTER_PRESCALER_DIVBY_4" visible="true" />
        <Entry name="Divide by 8" value="CY_TCPWM_COUNTER_PRESCALER_DIVBY_8" visible="true" />
        <Entry name="Divide by 16" value="CY_TCPWM_COUNTER_PRESCALER_DIVBY_16" visible="true" />
        <Entry name="Divide by 32" value="CY_TCPWM_COUNTER_PRESCALER_DIVBY_32" visible="true" />
        <Entry name="Divide by 64" value="CY_TCPWM_COUNTER_PRESCALER_DIVBY_64" visible="true" />
        <Entry name="Divide by 128" value="CY_TCPWM_COUNTER_PRESCALER_DIVBY_128" visible="true" />
      </ParamChoice>
      <ParamChoice id="Resolution" name="Counter Resolution" group="General" default="`${(pCntWidth eq 16) ? &quot;CY_TCPWM_COUNTER_RESOLUTION_WIDTH_16_BITS&quot; : &quot;CY_TCPWM_COUNTER_RESOLUTION_WIDTH_32_BITS&quot;}`" visible="`${debug}`" editable="false" desc="Selects the size of the counter.">
        <Entry name="16-bits" value="CY_TCPWM_COUNTER_RESOLUTION_WIDTH_16_BITS" visible="true" />
        <Entry name="32-bits" value="CY_TCPWM_COUNTER_RESOLUTION_WIDTH_32_BITS" visible="true" />
      </ParamChoice>
      <ParamChoice id="RunMode" name="Run Mode" group="General" default="CY_TCPWM_COUNTER_CONTINUOUS" visible="`${debug}`" editable="`${debug}`" desc="If Continuous is selected counter runs forever. If One Shot is selected counter runs for one period and stops.">
        <Entry name="Continuous" value="CY_TCPWM_COUNTER_CONTINUOUS" visible="true" />
        <Entry name="One Shot" value="CY_TCPWM_COUNTER_ONESHOT" visible="true" />
      </ParamChoice>
      <ParamChoice id="CompareOrCapture" name="Compare or Capture" group="General" default="CY_TCPWM_COUNTER_MODE_COMPARE" visible="`${debug}`" editable="`${debug}`" desc="Selects the mode for the compare capture register.">
        <Entry name="Capture" value="CY_TCPWM_COUNTER_MODE_CAPTURE" visible="true" />
        <Entry name="Compare" value="CY_TCPWM_COUNTER_MODE_COMPARE" visible="true" />
      </ParamChoice>
      <ParamBool id="pCCeqCompare" name="pCCeqCompare" desc="pCCeqCompare" group="Internal" default="`${CompareOrCapture eq CY_TCPWM_COUNTER_MODE_COMPARE}`" visible="false" editable="false" />
      <ParamBool id="mxs40tcpwm" name="mxs40tcpwm" group="General" default="`${&quot;mxs40tcpwm&quot; eq getIpBlockName()}`" visible="`${debug}`" editable="false" desc="" />
      <ParamBool id="copy_enable" name="Shadow Copy Enable" group="General" default="false" visible="`${debug &amp;&amp; mxs40tcpwm}`" editable="`${debug &amp;&amp; mxs40tcpwm}`" desc="Specifies whether swapping mechanism between CC0 and buffered CC0, CC1 and buffered CC1, PERIOD and buffered PERIOD, DT and buffered DT are disabled." />
      <ParamChoice id="CountDirection" name="Count Direction" group="General" default="CY_TCPWM_COUNTER_COUNT_UP" visible="`${debug}`" editable="`${debug}`" desc="Selects the direction the counter counts." >
        <Entry name="Up" value="CY_TCPWM_COUNTER_COUNT_UP" visible="true" />
        <Entry name="Down" value="CY_TCPWM_COUNTER_COUNT_DOWN" visible="true" />
        <Entry name="Up/Down1" value="CY_TCPWM_COUNTER_COUNT_UP_DOWN_1" visible="true" />
        <Entry name="Up/Down2" value="CY_TCPWM_COUNTER_COUNT_UP_DOWN_2" visible="true" />
      </ParamChoice>
      <!-- <ParamBool id="timer_direction_available" name="Timer Direction Availability" group="General" default="false" visible="`${debug}`" editable="`${debug &amp;&amp; mxs40tcpwm &amp;&amp; (CompareOrCapture eq CY_TCPWM_COUNTER_MODE_COMPARE) &amp;&amp; ((CountDirection eq CY_TCPWM_COUNTER_COUNT_UP) || (CountDirection eq CY_TCPWM_COUNTER_COUNT_DOWN))}`" desc="timer direction availability" /> -->
      <ParamChoice id="Timer_Direction_Mode" name="Timer Direction Mode" group="General" default="CY_TCPWM_COUNTER_DIRECTION_DISABLE" visible="`${debug &amp;&amp; mxs40tcpwm &amp;&amp; (CompareOrCapture eq CY_TCPWM_COUNTER_MODE_COMPARE) &amp;&amp; ((CountDirection eq CY_TCPWM_COUNTER_COUNT_UP) || (CountDirection eq CY_TCPWM_COUNTER_COUNT_DOWN))}`" editable="`${debug &amp;&amp; mxs40tcpwm &amp;&amp; (CompareOrCapture eq CY_TCPWM_COUNTER_MODE_COMPARE) &amp;&amp; ((CountDirection eq CY_TCPWM_COUNTER_COUNT_UP) || (CountDirection eq CY_TCPWM_COUNTER_COUNT_DOWN))}`" desc="Counter changes it's direction based on the capture 0 input ." >
        <Entry name="Counter Direction Disable" value="CY_TCPWM_COUNTER_DIRECTION_DISABLE" visible="true" />
        <Entry name="Counter Direction Falling" value="CY_TCPWM_COUNTER_DIRECTION_FALLING" visible="true" />
        <Entry name="Counter Direction Rising"  value="CY_TCPWM_COUNTER_DIRECTION_RISING"  visible="true" />
        <Entry name="Counter Direction Level"   value="CY_TCPWM_COUNTER_DIRECTION_LEVEL"   visible="true" />
      </ParamChoice>
      <ParamBool id="gf_enable" name="Glitch Filter Enable" group="Glitch Filter" default="false" visible="`${debug &amp;&amp; mxs40tcpwm}`" editable="`${debug}`" desc="Enables Glitch filter for input triggers. The Number of glitch filters is design specific and if there is a glitch filter connected to this input trigger it will be used. " />
      <ParamChoice id="gf_depth" name="Glitch Filter Depth" group="Glitch Filter" default="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_0" visible="`${debug &amp;&amp; gf_enable &amp;&amp; mxs40tcpwm}`" editable="`${debug}`" desc="Glitch filter depth support values." >
        <Entry name="Depth Value 0"   value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_0"   visible="true" />
        <Entry name="Depth Value 1"   value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_1"   visible="true" />
        <Entry name="Depth Value 2"   value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_2"   visible="true" />
        <Entry name="Depth Value 4"   value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_4"   visible="true" />
        <Entry name="Depth Value 8"   value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_8"   visible="true" />
        <Entry name="Depth Value 16"  value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_16"  visible="true" />
        <Entry name="Depth Value 32"  value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_32"  visible="true" />
        <Entry name="Depth Value 64"  value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_64"  visible="true" />
        <Entry name="Depth Value 128" value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_128" visible="true" />
        <Entry name="Depth Value 256" value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_256" visible="true" />
        <Entry name="Depth Value 512" value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_512" visible="true" />
      </ParamChoice>
      <ParamBool id="EnableCompare0Swap" name="Enable Compare 0 Swap" group="Compare" default="false" visible="`${debug &amp;&amp; pCCeqCompare}`" editable="`${debug}`" desc="When selected the compare register is swapped between compare 0 and compare 0 buffer each time the comparison is true." />
      <!-- <ParamRange id="Compare0" name="`${EnableCompare0Swap ? &quot;Compare 0&quot; : &quot;Compare&quot;}`" group="Compare" default="16384" min="0" max="`${pCntWidthMax}`" resolution="1" visible="`${debug &amp;&amp; pCCeqCompare}`" editable="`${debug}`" desc="Sets the compare value. Range: 0-65535 (for 16 bit resolution) or 0–4294967295 (for 32 bit resolution)." /> -->
      <!-- <ParamRange id="Compare1" name="Compare 0 Buff" group="Compare" default="16384" min="0" max="`${pCntWidthMax}`" resolution="1" visible="`${debug &amp;&amp; pCCeqCompare &amp;&amp; EnableCompare0Swap}`" editable="`${debug}`" desc="Sets the compare value. Range: 0-65535 (for 16 bit resolution) or 0–4294967295 (for 32 bit resolution)." /> -->
      <ParamBool id="EnableCompare1Swap" name="Enable Compare 1 Swap" group="Compare" default="false" visible="`${debug &amp;&amp; pCCeqCompare &amp;&amp; pCntCC1}`" editable="`${debug}`" desc="When selected the compare register is swapped between compare 1 and compare 1 buffer each time the comparison is true." />
      <ParamRange id="Compare2" name="Compare 1" group="Compare" default="16384" min="0" max="`${pCntWidthMax}`" resolution="1" visible="`${debug &amp;&amp; pCCeqCompare &amp;&amp; pCntCC1}`" editable="`${debug}`" desc="Sets the compare value. When the count value equals the compare the compare output pulses high. Range: 0-65535 (for 16 bit resolution) or 0–4294967295 (for 32 bit resolution)." />
      <ParamRange id="Compare3" name="Compare 1 Buff" group="Compare" default="16384" min="0" max="`${pCntWidthMax}`" resolution="1" visible="`${debug &amp;&amp; pCCeqCompare &amp;&amp; EnableCompare1Swap &amp;&amp; pCntCC1}`" editable="`${debug}`" desc="Sets the buffered compare value. Range: 0-65535 (for 16 bit resolution) or 0–4294967295 (for 32 bit resolution)." />
      <ParamBool id="InterruptTC" name="Overflow &amp; Underflow" group="Interrupt Source" default="true" visible="`${debug}`" editable="`${debug}`" desc="Generate interrupt on Overflow &amp; Underflow events" />
      <ParamBool id="InterruptCC0" name="Compare 0 &amp; Capture 0" group="Interrupt Source" default="false" visible="`${debug}`" editable="`${debug}`" desc="Generate interrupt on Compare &amp; Capture 0 events" />
      <ParamBool id="InterruptCC1" name="Compare 1 &amp; Capture 1" group="Interrupt Source" default="false" visible="`${debug &amp;&amp; pCntCC1}`" editable="`${debug}`" desc="Generate interrupt on Compare1 event" />
      <ParamString id="InterruptSource" name="InterruptSource" desc="InterruptSource" group="Interrupt Source" default="(CY_TCPWM_INT_ON_TC `${(InterruptTC)? &quot;&quot; : &quot;&amp; 0U&quot;}`) | (CY_TCPWM_INT_ON_CC0 `${(InterruptCC0)? &quot;&quot; : &quot;&amp; 0U&quot;}`) | (CY_TCPWM_INT_ON_CC1 `${(InterruptCC1)? &quot;&quot; : &quot;&amp; 0U&quot;}`)" visible="`${debug}`" editable="false" />
      <ParamChoice id="Capture0Input" name="Capture 0 Input" group="Capture" default="CY_TCPWM_INPUT_DISABLED" visible="`${debug &amp;&amp; ((CompareOrCapture eq CY_TCPWM_COUNTER_MODE_CAPTURE) || (Timer_Direction_Mode ne CY_TCPWM_COUNTER_DIRECTION_DISABLE))}`" editable="`${debug}`" desc="This parameter determines if a Capture 0 terminal is displayed." >
        <Entry name="Rising Edge" value="CY_TCPWM_INPUT_RISINGEDGE" visible="`${(CompareOrCapture eq CY_TCPWM_COUNTER_MODE_CAPTURE) || (Timer_Direction_Mode eq CY_TCPWM_COUNTER_DIRECTION_DISABLE)}`" />
        <Entry name="Falling Edge" value="CY_TCPWM_INPUT_FALLINGEDGE" visible="`${(CompareOrCapture eq CY_TCPWM_COUNTER_MODE_CAPTURE) || (Timer_Direction_Mode eq CY_TCPWM_COUNTER_DIRECTION_DISABLE)}`" />
        <Entry name="Either Edge" value="CY_TCPWM_INPUT_EITHEREDGE" visible="`${(CompareOrCapture eq CY_TCPWM_COUNTER_MODE_CAPTURE) || (Timer_Direction_Mode eq CY_TCPWM_COUNTER_DIRECTION_DISABLE)}`" />
        <Entry name="Level" value="CY_TCPWM_INPUT_LEVEL" visible="`${(Timer_Direction_Mode ne CY_TCPWM_COUNTER_DIRECTION_DISABLE)}`" />
        <Entry name="Disabled" value="CY_TCPWM_INPUT_DISABLED" visible="true" />
      </ParamChoice>
      <ParamChoice id="Capture1Input" name="Capture 1 Input" group="Capture" default="CY_TCPWM_INPUT_DISABLED" visible="`${debug &amp;&amp; pCntCC1 &amp;&amp; (CompareOrCapture eq CY_TCPWM_COUNTER_MODE_CAPTURE)}`" editable="`${debug}`" desc="This parameter determines if a Capture 1 terminal is displayed." >
        <Entry name="Rising Edge" value="CY_TCPWM_INPUT_RISINGEDGE" visible="true" />
        <Entry name="Falling Edge" value="CY_TCPWM_INPUT_FALLINGEDGE" visible="true" />
        <Entry name="Either Edge" value="CY_TCPWM_INPUT_EITHEREDGE" visible="true" />
        <Entry name="Disabled" value="CY_TCPWM_INPUT_DISABLED" visible="true" />
      </ParamChoice>
      <ParamChoice id="CountInput" name="Count Input" group="Inputs" default="CY_TCPWM_INPUT_DISABLED" visible="`${debug}`" editable="`${debug}`" desc="Determines if a count input is needed and how that input is registered." >
        <Entry name="Rising Edge" value="CY_TCPWM_INPUT_RISINGEDGE" visible="true" />
        <Entry name="Falling Edge" value="CY_TCPWM_INPUT_FALLINGEDGE" visible="true" />
        <Entry name="Either Edge" value="CY_TCPWM_INPUT_EITHEREDGE" visible="true" />
        <Entry name="Level" value="CY_TCPWM_INPUT_LEVEL" visible="true" />
        <Entry name="Disabled" value="CY_TCPWM_INPUT_DISABLED" visible="true" />
      </ParamChoice>
      <ParamChoice id="StopInput" name="Stop Input" group="Inputs" default="CY_TCPWM_INPUT_DISABLED" visible="`${debug}`" editable="`${debug}`" desc="Determines if a stop input is needed and how that input is registered." >
        <Entry name="Rising Edge" value="CY_TCPWM_INPUT_RISINGEDGE" visible="true" />
        <Entry name="Falling Edge" value="CY_TCPWM_INPUT_FALLINGEDGE" visible="true" />
        <Entry name="Either Edge" value="CY_TCPWM_INPUT_EITHEREDGE" visible="true" />
        <Entry name="Disabled" value="CY_TCPWM_INPUT_DISABLED" visible="true" />
      </ParamChoice>
      <ParamChoice id="ReloadInput" name="Reload Input" group="Inputs" default="CY_TCPWM_INPUT_DISABLED" visible="`${debug}`" editable="`${debug}`" desc="Determines if a reload input is needed and how the reload signal input is registered." >
        <Entry name="Rising Edge" value="CY_TCPWM_INPUT_RISINGEDGE" visible="true" />
        <Entry name="Falling Edge" value="CY_TCPWM_INPUT_FALLINGEDGE" visible="true" />
        <Entry name="Either Edge" value="CY_TCPWM_INPUT_EITHEREDGE" visible="true" />
        <Entry name="Disabled" value="CY_TCPWM_INPUT_DISABLED" visible="true" />
      </ParamChoice>
      <ParamChoice id="StartInput" name="Start Input" group="Inputs" default="CY_TCPWM_INPUT_RISINGEDGE" visible="`${debug}`" editable="`${debug}`" desc="Determines if a start input is needed and how that input is registered." >
        <Entry name="Rising Edge" value="CY_TCPWM_INPUT_RISINGEDGE" visible="true" />
        <Entry name="Falling Edge" value="CY_TCPWM_INPUT_FALLINGEDGE" visible="true" />
        <Entry name="Either Edge" value="CY_TCPWM_INPUT_EITHEREDGE" visible="true" />
        <Entry name="Disabled" value="CY_TCPWM_INPUT_DISABLED" visible="true" />
      </ParamChoice>
      <ParamChoice id="trigger0Event" name="Trigger 0 Event" group="Trigger Outputs" default="CY_TCPWM_CNT_TRIGGER_ON_DISABLED" visible="`${debug}`" editable="`${debug}`" desc="This output used to connect TCPWM event signals to other peripherals." >
        <Entry name="Overflow" value="CY_TCPWM_CNT_TRIGGER_ON_OVERFLOW" visible="true" />
        <Entry name="Underflow" value="CY_TCPWM_CNT_TRIGGER_ON_UNDEFLOW" visible="true" />
        <Entry name="Terminal Count" value="CY_TCPWM_CNT_TRIGGER_ON_TC" visible="true" />
        <Entry name="Compare 0 Match" value="CY_TCPWM_CNT_TRIGGER_ON_CC0_MATCH" visible="true" />
        <Entry name="Compare 1 Match" value="CY_TCPWM_CNT_TRIGGER_ON_CC1_MATCH" visible="false" />
        <Entry name="Disabled" value="CY_TCPWM_CNT_TRIGGER_ON_DISABLED" visible="true" />
      </ParamChoice>
      <ParamChoice id="trigger1Event" name="Trigger 1 Event" group="Trigger Outputs" default="CY_TCPWM_CNT_TRIGGER_ON_CC0_MATCH" visible="`${debug}`" editable="`${debug}`" desc="This output used to connect TCPWM event signals to other peripherals." >
        <Entry name="Overflow" value="CY_TCPWM_CNT_TRIGGER_ON_OVERFLOW" visible="true" />
        <Entry name="Underflow" value="CY_TCPWM_CNT_TRIGGER_ON_UNDEFLOW" visible="true" />
        <Entry name="Terminal Count" value="CY_TCPWM_CNT_TRIGGER_ON_TC" visible="true" />
        <Entry name="Compare 0 Match" value="CY_TCPWM_CNT_TRIGGER_ON_CC0_MATCH" visible="true" />
        <Entry name="Compare 1 Match" value="CY_TCPWM_CNT_TRIGGER_ON_CC1_MATCH" visible="false" />
        <Entry name="Disabled" value="CY_TCPWM_CNT_TRIGGER_ON_DISABLED" visible="true" />
      </ParamChoice>
      <ParamString id="definePrefix" name="Define prefix" group="Internal" default="`${&quot;TCPWM&quot; . getInstNumber(&quot;tcpwm&quot;) . &quot;_GRP&quot; . pCntGroup . &quot;_CNT&quot; . getInstNumber(&quot;cnt&quot;)}`" visible="`${debug}`" editable="false" desc="" />
      <ParamString id="defineInputDisabled" name="Define input disabled" group="Internal" default="`${INST_NAME . &quot;_INPUT_DISABLED &amp; 0x3U&quot;}`" visible="`${debug}`" editable="false" desc="" />
    </Parameters>
    <ConfigFirmware>
      <!-- <ConfigDefine name="`${INST_NAME}`_NUM" value="`${cntInst}`UL" public="true" include="true" /> -->
      <ConfigDefine name="`${INST_NAME}`_INPUT_DISABLED" value="0x7U" public="false" include="true" />
      <ConfigStruct name="`${cfgName}`" type="cy_stc_tcpwm_counter_config_t" const="`${getParamValue(&quot;3shunt&quot;, &quot;inFlash&quot;)}`" public="true" include="true" >
        <Member name="period" value="`${getParamValue(&quot;fastTimer&quot;, &quot;period&quot;) - 1}`" />
        <Member name="clockPrescaler" value="`${ClockPrescaler}`" />
        <Member name="runMode" value="`${RunMode}`" />
        <Member name="countDirection" value="`${CountDirection}`" />
        <Member name="compareOrCapture" value="`${CompareOrCapture}`" />
        <Member name="compare0" value="`${updatePointCy - 1}`U" />
        <Member name="compare1" value="`${updatePointCy - 1}`U" />
        <Member name="enableCompareSwap" value="`${pCCeqCompare ? EnableCompare0Swap : pCCeqCompare}`" />
        <Member name="interruptSources" value="`${InterruptSource}`" />
        <Member name="captureInputMode" value="`${Capture0Input eq CY_TCPWM_INPUT_DISABLED ? defineInputDisabled : Capture0Input}`" />
        <Member name="captureInput" value="`${Capture0Input eq CY_TCPWM_INPUT_DISABLED ? &quot;CY_TCPWM_INPUT_0&quot; : (definePrefix . &quot;_CAPTURE0_VALUE&quot;)}`" />
        <Member name="reloadInputMode" value="`${ReloadInput eq CY_TCPWM_INPUT_DISABLED ? defineInputDisabled : ReloadInput}`" />
        <Member name="reloadInput" value="`${ReloadInput eq CY_TCPWM_INPUT_DISABLED ? &quot;CY_TCPWM_INPUT_0&quot; : (definePrefix . &quot;_RELOAD_VALUE&quot;)}`" />
        <Member name="startInputMode" value="`${StartInput eq CY_TCPWM_INPUT_DISABLED ? defineInputDisabled : StartInput}`" />
        <Member name="startInput" value="`${StartInput eq CY_TCPWM_INPUT_DISABLED ? &quot;CY_TCPWM_INPUT_0&quot; : (definePrefix . &quot;_START_VALUE&quot;)}`" />
        <Member name="stopInputMode" value="`${StopInput eq CY_TCPWM_INPUT_DISABLED ? defineInputDisabled : StopInput}`" />
        <Member name="stopInput" value="`${StopInput eq CY_TCPWM_INPUT_DISABLED ? &quot;CY_TCPWM_INPUT_0&quot; : (definePrefix . &quot;_STOP_VALUE&quot;)}`" />
        <Member name="countInputMode" value="`${CountInput eq CY_TCPWM_INPUT_DISABLED ? defineInputDisabled : CountInput}`" />
        <Member name="countInput" value="`${CountInput eq CY_TCPWM_INPUT_DISABLED ? &quot;CY_TCPWM_INPUT_1&quot; : (definePrefix . &quot;_COUNT_VALUE&quot;)}`" />
        <Member name="capture1InputMode" value="`${Capture1Input eq CY_TCPWM_INPUT_DISABLED ? defineInputDisabled : Capture1Input}`" />
        <Member name="capture1Input" value="`${Capture1Input eq CY_TCPWM_INPUT_DISABLED ? &quot;CY_TCPWM_INPUT_0&quot; : (definePrefix . &quot;_CAPTURE1_VALUE&quot;)}`" />
        <Member name="compare2" value="`${pCntCC1 ? Compare2 : &quot;CY_TCPWM_GRP_CNT_CC0_DEFAULT&quot;}`" />
        <Member name="compare3" value="`${pCntCC1 ? Compare3 : &quot;CY_TCPWM_GRP_CNT_CC0_BUFF_DEFAULT&quot;}`" />
        <Member name="enableCompare1Swap" value="`${pCCeqCompare ? EnableCompare1Swap : pCCeqCompare}`" />
        <Member name="trigger0Event" value="`${trigger0Event}`" />
        <Member name="trigger1Event" value="`${trigger1Event}`" />
        <Member name="buffer_swap_enable" value="`${copy_enable}`" guard="defined (CY_IP_MXS40TCPWM)" />
        <Member name="direction_mode" value="`${Timer_Direction_Mode}`" guard="defined (CY_IP_MXS40TCPWM)" />
        <Member name="glitch_filter_enable" value="`${gf_enable}`" guard="defined (CY_IP_MXS40TCPWM)" />
        <Member name="gf_depth" value="`${gf_depth}`" guard="defined (CY_IP_MXS40TCPWM)" />
      </ConfigStruct>

      <ConfigInstruction purpose="INITIALIZE" value="Cy_SysClk_PeriphAssignDivider(`${clkDst}`, `${getExposedMember(getBlockFromSignal(&quot;clock_counter_en[0]&quot;), &quot;clockSel&quot;)}`);" include="true" />

      <!-- <ConfigStruct name="`${INST_NAME}`_obj" type="cyhal_resource_inst_t" const="true" public="true" include="true" guard="defined(CY_USING_HAL_LITE)"> -->
        <!-- <Member name="type" value="CYHAL_RSC_TCPWM" /> -->
        <!-- <Member name="block_num" value="`${(getInstNumber(&quot;tcpwm&quot;) * pMaxGroupCount) + grpInst}`U" /> -->
        <!-- <Member name="channel_num" value="`${getInstNumber(&quot;cnt&quot;)}`U" /> -->
      <!-- </ConfigStruct> -->

      <!-- <ConfigStruct name="`${INST_NAME}`_clock" type="cyhal_clock_t" const="`${inFlash}`" public="true" include="true" guard="defined(CY_USING_HAL_LITE)"> -->
        <!-- <Member name="block" value="`${getExposedMember(pclk, &quot;hal_block&quot;)}`" /> -->
        <!-- <Member name="channel" value="`${getExposedMember(pclk, &quot;number&quot;)}`" /> -->
      <!-- </ConfigStruct> -->

      <!-- <ConfigStruct name="`${INST_NAME}`_hal_config" type="cyhal_pwm_configurator_t" const="`${inFlash}`" public="true" include="true" guard="defined (CY_USING_HAL) || defined(CY_USING_HAL_LITE)"> -->
        <!-- <Member name="resource" value="&amp;`${INST_NAME}`_obj" /> -->
        <!-- <Member name="config" value="&amp;`${INST_NAME}`_config" /> -->
        <!-- <Member name="clock" value="&amp;`${INST_NAME}`_clock" /> -->
      <!-- </ConfigStruct> -->
    </ConfigFirmware>
  </PersonalityTemplate>

  <PersonalityTemplate id="fastTimer" >
    <FittingRules>
      <MappingRules>
        <IpBlock name="mxs40tcpwm" />
        <Resource name="tcpwm\[0\]\.group\[[1-9]\]\.cnt\[[0-9]+\]"/>
      </MappingRules>
    </FittingRules>
    <Parameters>
      <ParamBool id="debug" name="debug" group="Internal" default="false" visible="false" editable="false" desc="" />
      <ParamRange id="pCntGroup" name="pCntGroup" desc="pCntGroup" group="Internal"  default="`${getInstNumber(&quot;group&quot;)}`" min="0" max="3" resolution="1" visible="false" editable="false" />
      <ParamRange id="pMaxGroupCount" name="pMaxGroupCount" desc="pMaxGroupCount" group="Internal"  default="4" min="0" max="4" resolution="1" visible="false" editable="false" />
      <ParamString id="pCntWidthEx" name="pCntWidthEx" desc="pCntWidthEx" group="Internal"  default="GRP_NR[`${pCntGroup}`].CNT.GRP_CNT_WIDTH" visible="false" editable="false" />
      <ParamRange id="pCntWidth" name="pCntWidth" desc="pCntWidth" group="Internal"  default="`${lookupExpression(pCntWidthEx)}`" min="0" max="32" resolution="1" visible="false" editable="false" />
      <ParamRange id="pCntWidthMax" name="pCntWidthMax" desc="pCntWidthMax" group="Internal"  default="`${pow(2, pCntWidth)-1}`" min="0" max="4294967295" resolution="1" visible="false" editable="false" />
      <ParamString id="pCntCC1Ex" name="pCntCC1Ex" desc="pCntCC1Ex" group="Internal" default="GRP_NR[`${pCntGroup}`].CNT.GRP_CC1_PRESENT" visible="false" editable="false" />
      <ParamBool id="pCntCC1" name="pCntCC1" desc="pCntCC1" group="Internal" default="`${lookupExpression(pCntCC1Ex) eq 1}`" visible="false" editable="false" />
      <ParamChoice id="ClockPrescaler" name="Clock Prescaler" group="General" default="CY_TCPWM_COUNTER_PRESCALER_DIVBY_1" visible="`${debug}`" editable="`${debug}`" desc="Divides down the input clock." >
        <Entry name="Divide by 1" value="CY_TCPWM_COUNTER_PRESCALER_DIVBY_1" visible="true" />
        <Entry name="Divide by 2" value="CY_TCPWM_COUNTER_PRESCALER_DIVBY_2" visible="true" />
        <Entry name="Divide by 4" value="CY_TCPWM_COUNTER_PRESCALER_DIVBY_4" visible="true" />
        <Entry name="Divide by 8" value="CY_TCPWM_COUNTER_PRESCALER_DIVBY_8" visible="true" />
        <Entry name="Divide by 16" value="CY_TCPWM_COUNTER_PRESCALER_DIVBY_16" visible="true" />
        <Entry name="Divide by 32" value="CY_TCPWM_COUNTER_PRESCALER_DIVBY_32" visible="true" />
        <Entry name="Divide by 64" value="CY_TCPWM_COUNTER_PRESCALER_DIVBY_64" visible="true" />
        <Entry name="Divide by 128" value="CY_TCPWM_COUNTER_PRESCALER_DIVBY_128" visible="true" />
      </ParamChoice>
      <ParamChoice id="Resolution" name="Counter Resolution" group="General" default="`${(pCntWidth eq 16) ? &quot;CY_TCPWM_COUNTER_RESOLUTION_WIDTH_16_BITS&quot; : &quot;CY_TCPWM_COUNTER_RESOLUTION_WIDTH_32_BITS&quot;}`" visible="`${debug}`" editable="false" desc="Selects the size of the counter.">
        <Entry name="16-bits" value="CY_TCPWM_COUNTER_RESOLUTION_WIDTH_16_BITS" visible="true" />
        <Entry name="32-bits" value="CY_TCPWM_COUNTER_RESOLUTION_WIDTH_32_BITS" visible="true" />
      </ParamChoice>
      <ParamChoice id="RunMode" name="Run Mode" group="General" default="CY_TCPWM_COUNTER_CONTINUOUS" visible="`${debug}`" editable="`${debug}`" desc="If Continuous is selected counter runs forever. If One Shot is selected counter runs for one period and stops.">
        <Entry name="Continuous" value="CY_TCPWM_COUNTER_CONTINUOUS" visible="true" />
        <Entry name="One Shot" value="CY_TCPWM_COUNTER_ONESHOT" visible="true" />
      </ParamChoice>
      <ParamChoice id="CompareOrCapture" name="Compare or Capture" group="General" default="CY_TCPWM_COUNTER_MODE_COMPARE" visible="`${debug}`" editable="`${debug}`" desc="Selects the mode for the compare capture register.">
        <Entry name="Capture" value="CY_TCPWM_COUNTER_MODE_CAPTURE" visible="true" />
        <Entry name="Compare" value="CY_TCPWM_COUNTER_MODE_COMPARE" visible="true" />
      </ParamChoice>
      <ParamBool id="pCCeqCompare" name="pCCeqCompare" desc="pCCeqCompare" group="Internal" default="`${CompareOrCapture eq CY_TCPWM_COUNTER_MODE_COMPARE}`" visible="false" editable="false" />
      <ParamBool id="mxs40tcpwm" name="mxs40tcpwm" group="General" default="`${&quot;mxs40tcpwm&quot; eq getIpBlockName()}`" visible="`${debug}`" editable="false" desc="" />
      <ParamBool id="copy_enable" name="Shadow Copy Enable" group="General" default="false" visible="`${debug &amp;&amp; mxs40tcpwm}`" editable="`${debug &amp;&amp; mxs40tcpwm}`" desc="Specifies whether swapping mechanism between CC0 and buffered CC0, CC1 and buffered CC1, PERIOD and buffered PERIOD, DT and buffered DT are disabled." />
      <ParamChoice id="CountDirection" name="Count Direction" group="General" default="CY_TCPWM_COUNTER_COUNT_UP" visible="`${debug}`" editable="`${debug}`" desc="Selects the direction the counter counts." >
        <Entry name="Up" value="CY_TCPWM_COUNTER_COUNT_UP" visible="true" />
        <Entry name="Down" value="CY_TCPWM_COUNTER_COUNT_DOWN" visible="true" />
        <Entry name="Up/Down1" value="CY_TCPWM_COUNTER_COUNT_UP_DOWN_1" visible="true" />
        <Entry name="Up/Down2" value="CY_TCPWM_COUNTER_COUNT_UP_DOWN_2" visible="true" />
      </ParamChoice>
      <!-- <ParamBool id="timer_direction_available" name="Timer Direction Availability" group="General" default="false" visible="`${debug}`" editable="`${debug &amp;&amp; mxs40tcpwm &amp;&amp; (CompareOrCapture eq CY_TCPWM_COUNTER_MODE_COMPARE) &amp;&amp; ((CountDirection eq CY_TCPWM_COUNTER_COUNT_UP) || (CountDirection eq CY_TCPWM_COUNTER_COUNT_DOWN))}`" desc="timer direction availability" /> -->
      <ParamChoice id="Timer_Direction_Mode" name="Timer Direction Mode" group="General" default="CY_TCPWM_COUNTER_DIRECTION_DISABLE" visible="`${debug &amp;&amp; mxs40tcpwm &amp;&amp; (CompareOrCapture eq CY_TCPWM_COUNTER_MODE_COMPARE) &amp;&amp; ((CountDirection eq CY_TCPWM_COUNTER_COUNT_UP) || (CountDirection eq CY_TCPWM_COUNTER_COUNT_DOWN))}`" editable="`${debug &amp;&amp; mxs40tcpwm &amp;&amp; (CompareOrCapture eq CY_TCPWM_COUNTER_MODE_COMPARE) &amp;&amp; ((CountDirection eq CY_TCPWM_COUNTER_COUNT_UP) || (CountDirection eq CY_TCPWM_COUNTER_COUNT_DOWN))}`" desc="Counter changes it's direction based on the capture 0 input ." >
        <Entry name="Counter Direction Disable" value="CY_TCPWM_COUNTER_DIRECTION_DISABLE" visible="true" />
        <Entry name="Counter Direction Falling" value="CY_TCPWM_COUNTER_DIRECTION_FALLING" visible="true" />
        <Entry name="Counter Direction Rising"  value="CY_TCPWM_COUNTER_DIRECTION_RISING"  visible="true" />
        <Entry name="Counter Direction Level"   value="CY_TCPWM_COUNTER_DIRECTION_LEVEL"   visible="true" />
      </ParamChoice>
      <ParamBool id="gf_enable" name="Glitch Filter Enable" group="Glitch Filter" default="false" visible="`${debug &amp;&amp; mxs40tcpwm}`" editable="`${debug}`" desc="Enables Glitch filter for input triggers. The Number of glitch filters is design specific and if there is a glitch filter connected to this input trigger it will be used. " />
      <ParamChoice id="gf_depth" name="Glitch Filter Depth" group="Glitch Filter" default="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_0" visible="`${debug &amp;&amp; gf_enable &amp;&amp; mxs40tcpwm}`" editable="`${debug}`" desc="Glitch filter depth support values." >
        <Entry name="Depth Value 0"   value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_0"   visible="true" />
        <Entry name="Depth Value 1"   value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_1"   visible="true" />
        <Entry name="Depth Value 2"   value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_2"   visible="true" />
        <Entry name="Depth Value 4"   value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_4"   visible="true" />
        <Entry name="Depth Value 8"   value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_8"   visible="true" />
        <Entry name="Depth Value 16"  value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_16"  visible="true" />
        <Entry name="Depth Value 32"  value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_32"  visible="true" />
        <Entry name="Depth Value 64"  value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_64"  visible="true" />
        <Entry name="Depth Value 128" value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_128" visible="true" />
        <Entry name="Depth Value 256" value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_256" visible="true" />
        <Entry name="Depth Value 512" value="CY_GLITCH_FILTER_DEPTH_SUPPORT_VALUE_512" visible="true" />
      </ParamChoice>
      <ParamBool id="EnableCompare0Swap" name="Enable Compare 0 Swap" group="Compare" default="false" visible="`${debug &amp;&amp; pCCeqCompare}`" editable="`${debug}`" desc="When selected the compare register is swapped between compare 0 and compare 0 buffer each time the comparison is true." />
      <!-- <ParamRange id="Compare0" name="`${EnableCompare0Swap ? &quot;Compare 0&quot; : &quot;Compare&quot;}`" group="Compare" default="16384" min="0" max="`${pCntWidthMax}`" resolution="1" visible="`${debug &amp;&amp; pCCeqCompare}`" editable="`${debug}`" desc="Sets the compare value. Range: 0-65535 (for 16 bit resolution) or 0–4294967295 (for 32 bit resolution)." /> -->
      <!-- <ParamRange id="Compare1" name="Compare 0 Buff" group="Compare" default="16384" min="0" max="`${pCntWidthMax}`" resolution="1" visible="`${debug &amp;&amp; pCCeqCompare &amp;&amp; EnableCompare0Swap}`" editable="`${debug}`" desc="Sets the compare value. Range: 0-65535 (for 16 bit resolution) or 0–4294967295 (for 32 bit resolution)." /> -->
      <ParamBool id="EnableCompare1Swap" name="Enable Compare 1 Swap" group="Compare" default="false" visible="`${debug &amp;&amp; pCCeqCompare &amp;&amp; pCntCC1}`" editable="`${debug}`" desc="When selected the compare register is swapped between compare 1 and compare 1 buffer each time the comparison is true." />
      <ParamRange id="Compare2" name="Compare 1" group="Compare" default="16384" min="0" max="`${pCntWidthMax}`" resolution="1" visible="`${debug &amp;&amp; pCCeqCompare &amp;&amp; pCntCC1}`" editable="`${debug}`" desc="Sets the compare value. When the count value equals the compare the compare output pulses high. Range: 0-65535 (for 16 bit resolution) or 0–4294967295 (for 32 bit resolution)." />
      <ParamRange id="Compare3" name="Compare 1 Buff" group="Compare" default="16384" min="0" max="`${pCntWidthMax}`" resolution="1" visible="`${debug &amp;&amp; pCCeqCompare &amp;&amp; EnableCompare1Swap &amp;&amp; pCntCC1}`" editable="`${debug}`" desc="Sets the buffered compare value. Range: 0-65535 (for 16 bit resolution) or 0–4294967295 (for 32 bit resolution)." />
      <ParamBool id="InterruptTC" name="Overflow &amp; Underflow" group="Interrupt Source" default="false" visible="`${debug}`" editable="`${debug}`" desc="Generate interrupt on Overflow &amp; Underflow events" />
      <ParamBool id="InterruptCC0" name="Compare 0 &amp; Capture 0" group="Interrupt Source" default="false" visible="`${debug}`" editable="`${debug}`" desc="Generate interrupt on Compare &amp; Capture 0 events" />
      <ParamBool id="InterruptCC1" name="Compare 1 &amp; Capture 1" group="Interrupt Source" default="false" visible="`${debug &amp;&amp; pCntCC1}`" editable="`${debug}`" desc="Generate interrupt on Compare1 event" />
      <ParamString id="InterruptSource" name="InterruptSource" desc="InterruptSource" group="Interrupt Source" default="(CY_TCPWM_INT_ON_TC `${(InterruptTC)? &quot;&quot; : &quot;&amp; 0U&quot;}`) | (CY_TCPWM_INT_ON_CC0 `${(InterruptCC0)? &quot;&quot; : &quot;&amp; 0U&quot;}`) | (CY_TCPWM_INT_ON_CC1 `${(InterruptCC1)? &quot;&quot; : &quot;&amp; 0U&quot;}`)" visible="`${debug}`" editable="false" />
      <ParamChoice id="Capture0Input" name="Capture 0 Input" group="Capture" default="CY_TCPWM_INPUT_DISABLED" visible="`${debug &amp;&amp; ((CompareOrCapture eq CY_TCPWM_COUNTER_MODE_CAPTURE) || (Timer_Direction_Mode ne CY_TCPWM_COUNTER_DIRECTION_DISABLE))}`" editable="`${debug}`" desc="This parameter determines if a Capture 0 terminal is displayed." >
        <Entry name="Rising Edge" value="CY_TCPWM_INPUT_RISINGEDGE" visible="`${(CompareOrCapture eq CY_TCPWM_COUNTER_MODE_CAPTURE) || (Timer_Direction_Mode eq CY_TCPWM_COUNTER_DIRECTION_DISABLE)}`" />
        <Entry name="Falling Edge" value="CY_TCPWM_INPUT_FALLINGEDGE" visible="`${(CompareOrCapture eq CY_TCPWM_COUNTER_MODE_CAPTURE) || (Timer_Direction_Mode eq CY_TCPWM_COUNTER_DIRECTION_DISABLE)}`" />
        <Entry name="Either Edge" value="CY_TCPWM_INPUT_EITHEREDGE" visible="`${(CompareOrCapture eq CY_TCPWM_COUNTER_MODE_CAPTURE) || (Timer_Direction_Mode eq CY_TCPWM_COUNTER_DIRECTION_DISABLE)}`" />
        <Entry name="Level" value="CY_TCPWM_INPUT_LEVEL" visible="`${(Timer_Direction_Mode ne CY_TCPWM_COUNTER_DIRECTION_DISABLE)}`" />
        <Entry name="Disabled" value="CY_TCPWM_INPUT_DISABLED" visible="true" />
      </ParamChoice>
      <ParamChoice id="Capture1Input" name="Capture 1 Input" group="Capture" default="CY_TCPWM_INPUT_DISABLED" visible="`${debug &amp;&amp; pCntCC1 &amp;&amp; (CompareOrCapture eq CY_TCPWM_COUNTER_MODE_CAPTURE)}`" editable="`${debug}`" desc="This parameter determines if a Capture 1 terminal is displayed." >
        <Entry name="Rising Edge" value="CY_TCPWM_INPUT_RISINGEDGE" visible="true" />
        <Entry name="Falling Edge" value="CY_TCPWM_INPUT_FALLINGEDGE" visible="true" />
        <Entry name="Either Edge" value="CY_TCPWM_INPUT_EITHEREDGE" visible="true" />
        <Entry name="Disabled" value="CY_TCPWM_INPUT_DISABLED" visible="true" />
      </ParamChoice>
      <ParamChoice id="CountInput" name="Count Input" group="Inputs" default="CY_TCPWM_INPUT_DISABLED" visible="`${debug}`" editable="`${debug}`" desc="Determines if a count input is needed and how that input is registered." >
        <Entry name="Rising Edge" value="CY_TCPWM_INPUT_RISINGEDGE" visible="true" />
        <Entry name="Falling Edge" value="CY_TCPWM_INPUT_FALLINGEDGE" visible="true" />
        <Entry name="Either Edge" value="CY_TCPWM_INPUT_EITHEREDGE" visible="true" />
        <Entry name="Level" value="CY_TCPWM_INPUT_LEVEL" visible="true" />
        <Entry name="Disabled" value="CY_TCPWM_INPUT_DISABLED" visible="true" />
      </ParamChoice>
      <ParamChoice id="StopInput" name="Stop Input" group="Inputs" default="CY_TCPWM_INPUT_DISABLED" visible="`${debug}`" editable="`${debug}`" desc="Determines if a stop input is needed and how that input is registered." >
        <Entry name="Rising Edge" value="CY_TCPWM_INPUT_RISINGEDGE" visible="true" />
        <Entry name="Falling Edge" value="CY_TCPWM_INPUT_FALLINGEDGE" visible="true" />
        <Entry name="Either Edge" value="CY_TCPWM_INPUT_EITHEREDGE" visible="true" />
        <Entry name="Disabled" value="CY_TCPWM_INPUT_DISABLED" visible="true" />
      </ParamChoice>
      <ParamChoice id="ReloadInput" name="Reload Input" group="Inputs" default="CY_TCPWM_INPUT_DISABLED" visible="`${debug}`" editable="`${debug}`" desc="Determines if a reload input is needed and how the reload signal input is registered." >
        <Entry name="Rising Edge" value="CY_TCPWM_INPUT_RISINGEDGE" visible="true" />
        <Entry name="Falling Edge" value="CY_TCPWM_INPUT_FALLINGEDGE" visible="true" />
        <Entry name="Either Edge" value="CY_TCPWM_INPUT_EITHEREDGE" visible="true" />
        <Entry name="Disabled" value="CY_TCPWM_INPUT_DISABLED" visible="true" />
      </ParamChoice>
      <ParamChoice id="StartInput" name="Start Input" group="Inputs" default="CY_TCPWM_INPUT_RISINGEDGE" visible="`${debug}`" editable="`${debug}`" desc="Determines if a start input is needed and how that input is registered." >
        <Entry name="Rising Edge" value="CY_TCPWM_INPUT_RISINGEDGE" visible="true" />
        <Entry name="Falling Edge" value="CY_TCPWM_INPUT_FALLINGEDGE" visible="true" />
        <Entry name="Either Edge" value="CY_TCPWM_INPUT_EITHEREDGE" visible="true" />
        <Entry name="Disabled" value="CY_TCPWM_INPUT_DISABLED" visible="true" />
      </ParamChoice>
      <ParamChoice id="trigger0Event" name="Trigger 0 Event" group="Trigger Outputs" default="CY_TCPWM_CNT_TRIGGER_ON_DISABLED" visible="`${debug}`" editable="`${debug}`" desc="This output used to connect TCPWM event signals to other peripherals." >
        <Entry name="Overflow" value="CY_TCPWM_CNT_TRIGGER_ON_OVERFLOW" visible="true" />
        <Entry name="Underflow" value="CY_TCPWM_CNT_TRIGGER_ON_UNDEFLOW" visible="true" />
        <Entry name="Terminal Count" value="CY_TCPWM_CNT_TRIGGER_ON_TC" visible="true" />
        <Entry name="Compare 0 Match" value="CY_TCPWM_CNT_TRIGGER_ON_CC0_MATCH" visible="true" />
        <Entry name="Compare 1 Match" value="CY_TCPWM_CNT_TRIGGER_ON_CC1_MATCH" visible="false" />
        <Entry name="Disabled" value="CY_TCPWM_CNT_TRIGGER_ON_DISABLED" visible="true" />
      </ParamChoice>
      <ParamChoice id="trigger1Event" name="Trigger 1 Event" group="Trigger Outputs" default="CY_TCPWM_CNT_TRIGGER_ON_CC0_MATCH" visible="`${debug}`" editable="`${debug}`" desc="This output used to connect TCPWM event signals to other peripherals." >
        <Entry name="Overflow" value="CY_TCPWM_CNT_TRIGGER_ON_OVERFLOW" visible="true" />
        <Entry name="Underflow" value="CY_TCPWM_CNT_TRIGGER_ON_UNDEFLOW" visible="true" />
        <Entry name="Terminal Count" value="CY_TCPWM_CNT_TRIGGER_ON_TC" visible="true" />
        <Entry name="Compare 0 Match" value="CY_TCPWM_CNT_TRIGGER_ON_CC0_MATCH" visible="true" />
        <Entry name="Compare 1 Match" value="CY_TCPWM_CNT_TRIGGER_ON_CC1_MATCH" visible="false" />
        <Entry name="Disabled" value="CY_TCPWM_CNT_TRIGGER_ON_DISABLED" visible="true" />
      </ParamChoice>
      <ParamString id="definePrefix" name="Define prefix" group="Internal" default="`${&quot;TCPWM&quot; . getInstNumber(&quot;tcpwm&quot;) . &quot;_GRP&quot; . pCntGroup . &quot;_CNT&quot; . getInstNumber(&quot;cnt&quot;)}`" visible="`${debug}`" editable="false" desc="" />
      <ParamString id="defineInputDisabled" name="Define input disabled" group="Internal" default="`${INST_NAME . &quot;_INPUT_DISABLED &amp; 0x3U&quot;}`" visible="`${debug}`" editable="false" desc="" />
    </Parameters>
    <ConfigFirmware>
      <!-- <ConfigDefine name="`${INST_NAME}`_NUM" value="`${cntInst}`UL" public="true" include="true" /> -->
      <ConfigDefine name="`${INST_NAME}`_INPUT_DISABLED" value="0x7U" public="false" include="true" />
      <ConfigStruct name="`${cfgName}`" type="cy_stc_tcpwm_counter_config_t" const="`${getParamValue(&quot;3shunt&quot;, &quot;inFlash&quot;)}`" public="true" include="true" >
        <Member name="period" value="`${period - 1}`" />
        <Member name="clockPrescaler" value="`${ClockPrescaler}`" />
        <Member name="runMode" value="`${RunMode}`" />
        <Member name="countDirection" value="`${CountDirection}`" />
        <Member name="compareOrCapture" value="`${CompareOrCapture}`" />
        <Member name="compare0" value="`${getParamValue(&quot;3shunt&quot;, &quot;convPointCy&quot;) - 1}`U" />
        <Member name="compare1" value="`${getParamValue(&quot;3shunt&quot;, &quot;convPointCy&quot;) - 1}`U" />
        <Member name="enableCompareSwap" value="`${pCCeqCompare ? EnableCompare0Swap : pCCeqCompare}`" />
        <Member name="interruptSources" value="`${InterruptSource}`" />
        <Member name="captureInputMode" value="`${Capture0Input eq CY_TCPWM_INPUT_DISABLED ? defineInputDisabled : Capture0Input}`" />
        <Member name="captureInput" value="`${Capture0Input eq CY_TCPWM_INPUT_DISABLED ? &quot;CY_TCPWM_INPUT_0&quot; : (definePrefix . &quot;_CAPTURE0_VALUE&quot;)}`" />
        <Member name="reloadInputMode" value="`${ReloadInput eq CY_TCPWM_INPUT_DISABLED ? defineInputDisabled : ReloadInput}`" />
        <Member name="reloadInput" value="`${ReloadInput eq CY_TCPWM_INPUT_DISABLED ? &quot;CY_TCPWM_INPUT_0&quot; : (definePrefix . &quot;_RELOAD_VALUE&quot;)}`" />
        <Member name="startInputMode" value="`${StartInput eq CY_TCPWM_INPUT_DISABLED ? defineInputDisabled : StartInput}`" />
        <Member name="startInput" value="`${StartInput eq CY_TCPWM_INPUT_DISABLED ? &quot;CY_TCPWM_INPUT_0&quot; : (definePrefix . &quot;_START_VALUE&quot;)}`" />
        <Member name="stopInputMode" value="`${StopInput eq CY_TCPWM_INPUT_DISABLED ? defineInputDisabled : StopInput}`" />
        <Member name="stopInput" value="`${StopInput eq CY_TCPWM_INPUT_DISABLED ? &quot;CY_TCPWM_INPUT_0&quot; : (definePrefix . &quot;_STOP_VALUE&quot;)}`" />
        <Member name="countInputMode" value="`${CountInput eq CY_TCPWM_INPUT_DISABLED ? defineInputDisabled : CountInput}`" />
        <Member name="countInput" value="`${CountInput eq CY_TCPWM_INPUT_DISABLED ? &quot;CY_TCPWM_INPUT_1&quot; : (definePrefix . &quot;_COUNT_VALUE&quot;)}`" />
        <Member name="capture1InputMode" value="`${Capture1Input eq CY_TCPWM_INPUT_DISABLED ? defineInputDisabled : Capture1Input}`" />
        <Member name="capture1Input" value="`${Capture1Input eq CY_TCPWM_INPUT_DISABLED ? &quot;CY_TCPWM_INPUT_0&quot; : (definePrefix . &quot;_CAPTURE1_VALUE&quot;)}`" />
        <Member name="compare2" value="`${pCntCC1 ? Compare2 : &quot;CY_TCPWM_GRP_CNT_CC0_DEFAULT&quot;}`" />
        <Member name="compare3" value="`${pCntCC1 ? Compare3 : &quot;CY_TCPWM_GRP_CNT_CC0_BUFF_DEFAULT&quot;}`" />
        <Member name="enableCompare1Swap" value="`${pCCeqCompare ? EnableCompare1Swap : pCCeqCompare}`" />
        <Member name="trigger0Event" value="`${trigger0Event}`" />
        <Member name="trigger1Event" value="`${trigger1Event}`" />
        <Member name="buffer_swap_enable" value="`${copy_enable}`" guard="defined (CY_IP_MXS40TCPWM)" />
        <Member name="direction_mode" value="`${Timer_Direction_Mode}`" guard="defined (CY_IP_MXS40TCPWM)" />
        <Member name="glitch_filter_enable" value="`${gf_enable}`" guard="defined (CY_IP_MXS40TCPWM)" />
        <Member name="gf_depth" value="`${gf_depth}`" guard="defined (CY_IP_MXS40TCPWM)" />
      </ConfigStruct>

      <ConfigInstruction purpose="INITIALIZE" value="Cy_SysClk_PeriphAssignDivider(`${clkDst}`, `${getExposedMember(getBlockFromSignal(&quot;clock_counter_en[0]&quot;), &quot;clockSel&quot;)}`);" include="true" />

      <!-- <ConfigStruct name="`${INST_NAME}`_obj" type="cyhal_resource_inst_t" const="true" public="true" include="true" guard="defined(CY_USING_HAL_LITE)"> -->
        <!-- <Member name="type" value="CYHAL_RSC_TCPWM" /> -->
        <!-- <Member name="block_num" value="`${(getInstNumber(&quot;tcpwm&quot;) * pMaxGroupCount) + grpInst}`U" /> -->
        <!-- <Member name="channel_num" value="`${getInstNumber(&quot;cnt&quot;)}`U" /> -->
      <!-- </ConfigStruct> -->

      <!-- <ConfigStruct name="`${INST_NAME}`_clock" type="cyhal_clock_t" const="`${inFlash}`" public="true" include="true" guard="defined(CY_USING_HAL_LITE)"> -->
        <!-- <Member name="block" value="`${getExposedMember(pclk, &quot;hal_block&quot;)}`" /> -->
        <!-- <Member name="channel" value="`${getExposedMember(pclk, &quot;number&quot;)}`" /> -->
      <!-- </ConfigStruct> -->

      <!-- <ConfigStruct name="`${INST_NAME}`_hal_config" type="cyhal_pwm_configurator_t" const="`${inFlash}`" public="true" include="true" guard="defined (CY_USING_HAL) || defined(CY_USING_HAL_LITE)"> -->
        <!-- <Member name="resource" value="&amp;`${INST_NAME}`_obj" /> -->
        <!-- <Member name="config" value="&amp;`${INST_NAME}`_config" /> -->
        <!-- <Member name="clock" value="&amp;`${INST_NAME}`_clock" /> -->
      <!-- </ConfigStruct> -->
    </ConfigFirmware>
  </PersonalityTemplate>


  <!-- ADC -->
  <PersonalityTemplate id="chan$idx" repeatCount="6">
    <FittingRules>
      <MappingRules>
        <IpBlock name="mxs40mcpass" />
        <Resource name="pass\.sar\.ch"/>
      </MappingRules>
    </FittingRules>
    <ExposedMembers>
      <ExposedMember key="cfgName" paramId="cfgName" />
      <ExposedMember key="diff" paramId="diff" />
      <ExposedMember key="limit" paramId="limit" />
      <ExposedMember key="sign" paramId="sign" />
      <ExposedMember key="fifo" paramId="fifo" />
      <ExposedMember key="firChanIdx" paramId="firChanIdx" />
    </ExposedMembers>
    <Parameters>
      <ParamBool id="debug" name="debug" group="Internal" default="false" visible="false" editable="false" desc="" />
      <ParamString id="cfgName" name="cfgName" group="Internal" default="`${INST_NAME}`_cfg" visible="`${debug}`" editable="false" desc="" />
      <ParamString id="sarRsc" name="sarRsc" group="Internal" default="`${&quot;pass[0].sar[0]&quot;}`" visible="`${debug}`" editable="false" desc="" />
      <ParamBool id="sarEn" name="sarEn" group="Internal" default="`${isBlockUsed(sarRsc)}`" visible="false" editable="`${debug}`" desc="" />
      <ParamRange id="inst" name="inst" group="Internal" default="`${getInstNumber(&quot;ch&quot;)}`" min="0" max="27" resolution="1" visible="`${debug}`" editable="false" desc="" />
      <ParamRange id="sampInst" name="sampInst" group="Internal" default="`${(inst &gt;= 12) ? (inst - 12)/4 : inst}`" min="0" max="11" resolution="1" visible="`${debug}`" editable="false" desc="" />
      <ParamBool id="even" name="even" group="Internal" default="`${0 == (inst % 2)}`" visible="`${debug}`" editable="false" desc="" />
      <ParamBool id="diff" name="Pseudo-Differential Enable" group="General" default="false" visible="`${debug &amp;&amp; even}`" editable="`${debug &amp;&amp; even}`" desc="Enable Pseudo-Differential Conversions." />
      <ParamString id="limit" name="limit" group="Internal" default="CY_HPPASS_SAR_LIMIT_DISABLED" visible="`${debug}`" editable="false" desc="" />
      <ParamBool id="sign" name="Result Format" group="General" default="false" visible="`${debug}`" editable="false" desc="" />
      <ParamString id="firChanIdx" name="firChanIdx" group="Internal" default="`${INST_NAME}`_FIR_CHAN_IDX" visible="`${debug}`" editable="false" desc="" />
      <ParamString id="rscNameLoc" name="rscNameLoc" group="Internal" default="`${getBlockDisplayName(&quot;pass[0].sar[0].ch[&quot; . inst . &quot;]&quot;, false)}`" visible="`${debug}`" editable="false" desc="" />
      <ParamString id="rscName" name="rscName" group="Internal" default="`${(rscNameLoc eq &quot;P8.2&quot;) ? &quot;P8_2&quot; : ((rscNameLoc eq &quot;P8.0&quot;) ? &quot;P8_0&quot; : rscNameLoc)}`" visible="`${debug}`" editable="false" desc="" />
    </Parameters>
    <DRCs>
      <DRC type="ERROR" text="`${sampType}` Sampler `${sampInst}` is not enabled" condition="`${!sampUsed}`" >
        <FixIt action="ENABLE_BLOCK" target="`${sampRsc}`" value="" valid="true" />
      </DRC>
    </DRCs>
    <ConfigFirmware>
      <!-- <ConfigDefine name="`${INST_NAME}`_RSLT_PTR" value="CY_HPPASS_SAR_CHAN_RSLT_PTR(`${inst}`)" public="true" include="true" /> -->
      <!-- <ConfigDefine name="`${INST_NAME}`_SAMP_GAIN" value="`${sampGainNum}`" public="true" include="true" /> -->
      <ConfigDefine name="`${firChanIdx}`" value="CY_HPPASS_FIR_CHAN_`${inst}`" public="true" include="true" />
      <!-- <ConfigDefine name="`${INST_NAME}`_CHAN_IDX" value="`${inst}`U" public="true" include="true" /> -->
      <!-- <ConfigDefine name="`${rscName}`_CHAN_IDX" value="`${inst}`U" public="true" include="`${rscName ne INST_NAME}`" /> -->
      <ConfigStruct name="`${cfgName}`" type="cy_stc_hppass_sar_chan_t" const="`${sarEn ? getExposedMember(sarRsc, &quot;inFlash&quot;) : false}`" public="true" include="true" >
        <Member name="diff" value="`${diff}`" />
        <Member name="sign" value="`${sign}`" />
        <Member name="avg" value="false" />
        <Member name="limit" value="`${limit}`" />
        <Member name="result" value="true" />
        <Member name="fifo" value="CY_HPPASS_FIFO_DISABLED" />
      </ConfigStruct>
    </ConfigFirmware>
  </PersonalityTemplate>

  <PersonalityTemplate id="seq$idx" repeatCount="2" >
    <FittingRules>
      <MappingRules>
        <IpBlock name="mxs40mcpass" />
        <Resource name="pass\.sar\.seq\.grp"/>
      </MappingRules>
    </FittingRules>
    <ExposedMembers>
      <ExposedMember key="cfgName" paramId="cfgName" />
    </ExposedMembers>
    <Parameters>
      <ParamString id="cfgName" name="cfgName" group="Internal" default="`${INST_NAME}`_cfg" visible="false" editable="false" desc="" />
      <ParamString id="sarRsc" name="sarRsc" group="Internal" default="`${&quot;pass[0].sar[0]&quot;}`" visible="false" editable="false" desc="" />
      <ParamBool id="sarEn" name="Is SAR Enabled" group="Internal" default="`${isBlockUsed(sarRsc)}`" visible="false" editable="false" desc="" />
    </Parameters>
    <DRCs>
      <DRC type="ERROR" text="SAR is not enabled" condition="`${!sarEn}`" >
        <FixIt action="ENABLE_BLOCK" target="`${sarRsc}`" value="" valid="true" />
      </DRC>
    </DRCs>
    <ConfigFirmware>
      <ConfigStruct name="`${cfgName}`" type="cy_stc_hppass_sar_grp_t" const="`${sarEn ? getExposedMember(sarRsc, &quot;inFlash&quot;) : false}`" public="true" include="true" >
        <Member name="dirSampMsk" value="`${toHex(dirSampMsk)}`U" />
        <Member name="muxSampMsk" value="`${toHex(muxSampMsk)}`U" />
        <ConfigArray name="muxChanIdx" type="nested" const="false" public="true" include="true" >
          <ArrayElement value="`${muxSel$idx{0}}`U" count="4" />
        </ConfigArray>
        <Member name="trig" value="`${trigSel}`" />
        <Member name="sampTime" value="CY_HPPASS_SAR_SAMP_TIME_DISABLED" />
        <Member name="priority" value="`${0 eq seqIdx}`" />
        <Member name="continuous" value="false" />
      </ConfigStruct>
    </ConfigFirmware>
  </PersonalityTemplate>

  <PersonalityTemplate id="seqInTrig">
    <FittingRules>
      <MappingRules>
        <IpBlock name="mxs40mcpass" />
        <Resource name="pass\.input_trigger"/>
      </MappingRules>
    </FittingRules>
    <ExposedMembers>
      <ExposedMember key="sel" paramId="sel" />
      <ExposedMember key="mod" paramId="mod" />
    </ExposedMembers>
    <Parameters>
      <ParamString id="sel" name="sel" group="Internal" visible="false" editable="false" desc="" default="CY_HPPASS_TR_HW_A" />
      <ParamString id="mod" name="mod" group="Internal" visible="false" editable="false" desc="" default="CY_HPPASS_PULSE_ON_POS_DOUBLE_SYNC" />
    </Parameters>
  </PersonalityTemplate>

  <PersonalityTemplate id="enable" >
    <FittingRules>
      <MappingRules>
        <IpBlock name="mxs40ioss,mxs40sioss" />
        <Resource name="ioss\.port\.pin" />
      </MappingRules>
    </FittingRules>
    <ExposedMembers>
      <ExposedMember key="intr" paramId="intr" />
      <ExposedMember key="cb" paramId="cb" />
    </ExposedMembers>
    <Parameters>
      <ParamBool id="debug" name="debug" group="Internal" default="false" visible="false" editable="false" desc="" />
      <ParamBool id="intr" name="intr" group="Internal" default="false" visible="`${debug}`" editable="false" desc="" />
      <ParamString id="cb" name="cb" group="Internal" default="" visible="`${debug}`" editable="false" desc="" />
      <ParamBool id="hasSIO" name="HasSIO" group="Misc" default="`${lookupExpression(&quot;GPIO.GPIO_PORT_NR[&quot; . getInstNumber(&quot;port&quot;) . &quot;].GPIO_PRT.SIO&quot;) &gt; 0}`" visible="false" editable="false" desc="Has SIO" />
      <ParamBool id="hasPullUpRes" name="HasPullUpRes" group="Misc" default="`${pullUpResAvailable ? (lookupExpression(&quot;GPIO.GPIO_PORT_NR[&quot; . getInstNumber(&quot;port&quot;) . &quot;].GPIO_PRT.RES_CFG&quot;) &gt; 0) : 0}`" visible="false" editable="false" desc="Has pull-up resistor" />
      <ParamBool id="hasIRQ" name="HasIRQ" group="Misc" default="`${lookupExpression(&quot;GPIO.GPIO_PORT_NR[&quot; . getInstNumber(&quot;port&quot;) . &quot;].GPIO_PRT.IRQ&quot;, 0) &gt; 0}`" visible="false" editable="false" desc="Has dedicated IRQ" />
      <ParamString id="driveModeExtension" name="Drive Mode Extension" group="Internal" default="`${lookupExpression(&quot;GPIO.GPIO_PORT_NR[&quot; . getInstNumber(&quot;port&quot;) . &quot;].GPIO_PRT.DRIVEMODE_WIDTH&quot;, 0)}`" visible="false" editable="false" desc="The drive mode extension" />
      <ParamRange id="pullUpResAvailable" name="Pull-up resistor" group="Internal" default="`${lookupExpression(&quot;GPIO.GPIO_PORT_NR[3].GPIO_PRT.RES_CFG&quot;, 0)}`" min="-1" max="1" resolution="1" visible="false" editable="false" desc="The pull-up resistor configuration" />
      <ParamChoice id="DriveModes" name="Drive Mode" group="General" default="CY_GPIO_DM_STRONG" visible="`${debug}`" editable="`${debug}`" desc="The Drive Mode parameter configures the pin provide to one of the eight available pin drive modes. Please see the device DS for more details on each drive mode." >
        <Entry name="Strong Drive. Input buffer on"                                                    value="CY_GPIO_DM_STRONG"                       visible="true" />
        <Entry name="Strong Drive. Input buffer off"                                                   value="CY_GPIO_DM_STRONG_IN_OFF"                visible="true" />
        <Entry name="Open Drain, Drives Low. Input buffer off"                                         value="CY_GPIO_DM_OD_DRIVESLOW_IN_OFF"          visible="true" />
        <Entry name="Open Drain, Drives High. Input buffer off"                                        value="CY_GPIO_DM_OD_DRIVESHIGH_IN_OFF"         visible="true" />
        <Entry name="Open Drain, Drives Low. Input buffer on"                                          value="CY_GPIO_DM_OD_DRIVESLOW"                 visible="true" />
        <Entry name="Open Drain, Drives High. Input buffer on"                                         value="CY_GPIO_DM_OD_DRIVESHIGH"                visible="true" />
        <Entry name="Resistive Pull-Up. Input buffer off"                                              value="CY_GPIO_DM_PULLUP_IN_OFF"                visible="true" />
        <Entry name="Resistive Pull-Down. Input buffer off"                                            value="CY_GPIO_DM_PULLDOWN_IN_OFF"              visible="true" />
        <Entry name="Resistive Pull-Up/Down. Input buffer off"                                         value="CY_GPIO_DM_PULLUP_DOWN_IN_OFF"           visible="true" />
        <Entry name="Resistive Pull-Up. Input buffer on"                                               value="CY_GPIO_DM_PULLUP"                       visible="true" />
        <Entry name="Resistive Pull-Down. Input buffer on"                                             value="CY_GPIO_DM_PULLDOWN"                     visible="true" />
        <Entry name="Resistive Pull-Up/Down. Input buffer on"                                          value="CY_GPIO_DM_PULLUP_DOWN"                  visible="true" />
        <Entry name="Digital High-Z. Input buffer on"                                                  value="CY_GPIO_DM_HIGHZ"                        visible="true" />
        <Entry name="Analog High-Z. Input buffer off"                                                  value="CY_GPIO_DM_ANALOG"                       visible="true" />
        <Entry name="Strong Drive/Resistive Pull-Up/High-Z"  value="CY_GPIO_DM_CFGOUT3_STRONG_PULLUP_HIGHZ"  visible="`${(driveModeExtension eq 4)}`" />
      </ParamChoice>
      <!-- <ParamChoice id="initialState" name="Initial Drive State" group="General" default="0" visible="`${debug}`" editable="`${debug}`" desc="This parameter specifies the pin-specific initial value written to the pin's OUT Register after a device reset/power-on." > -->
        <!-- <Entry name="High (1)" value="1" visible="true" /> -->
        <!-- <Entry name="Low (0)"  value="0" visible="true" /> -->
      <!-- </ParamChoice> -->
      <ParamChoice id="vtrip" name="Threshold" group="Input" default="CY_GPIO_VTRIP_CMOS" visible="`${debug}`" editable="`${debug}`" desc="This parameter selects the threshold levels that define a logic high level (1) and a logic low level (0)." >
        <Entry name="CMOS" value="CY_GPIO_VTRIP_CMOS" visible="true" />
        <Entry name="TTL"  value="CY_GPIO_VTRIP_TTL"  visible="true" />
      </ParamChoice>
      <ParamChoice id="isrTrigger" name="Interrupt Trigger Type" group="Input" default="CY_GPIO_INTR_DISABLE" visible="`${debug &amp;&amp; hasIRQ}`" editable="`${debug}`" desc="This parameter selects whether the pin can generate an interrupt and, if selected, the interrupt type." >
        <Entry name="None"         value="CY_GPIO_INTR_DISABLE" visible="true" />
        <Entry name="Rising Edge"  value="CY_GPIO_INTR_RISING"  visible="true" />
        <Entry name="Falling Edge" value="CY_GPIO_INTR_FALLING" visible="true" />
        <Entry name="Both Edges"   value="CY_GPIO_INTR_BOTH"    visible="true" />
      </ParamChoice>
      <ParamBool id="sioInputBuffer" name="SIO Input Buffer Differential" group="Input" default="false" visible="`${hasSIO}`" editable="`${hasSIO}`" desc="Selects the input buffer mode" />
      <ParamChoice id="sioTrip" name="SIO Input Buffer Trip Mode" group="Input" default="CY_SIO_VTRIP_CMOS" visible="`${hasSIO}`" editable="`${hasSIO}`" desc="Selects the input buffer trip-point in single ended input buffer mode." >
        <Entry name="CMOS (single-ended)"                 value="CY_SIO_VTRIP_CMOS"             visible="true" />
        <Entry name="TTL (single-ended)"                  value="CY_SIO_VTRIP_TTL"              visible="true" />
        <Entry name="0.5xVddio or 0.5xVoh (differential)" value="CY_SIO_VTRIP_0_5VDDIO_0_5VOH"  visible="true" />
        <Entry name="0.4xVddio or 0.4xVoh (differential)" value="CY_SIO_VTRIP_0_4VDDIO_1_0VREF" visible="true" />
      </ParamChoice>
      <ParamChoice id="sioRef" name="SIO Reference Voltage" group="Input" default="CY_SIO_VREF_PINREF" visible="`${hasSIO}`" editable="`${hasSIO}`" desc="Selects reference voltage (Vref) trip-point of the input buffer." >
        <Entry name="Analog Pin"              value="CY_SIO_VREF_PINREF" visible="true" />
        <Entry name="Internal 1.2V Reference" value="CY_SIO_VREF_1_2V"   visible="true" />
        <Entry name="AMUXBUS A"               value="CY_SIO_VREF_AMUX_A" visible="true" />
        <Entry name="AMUXBUS B"               value="CY_SIO_VREF_AMUX_B" visible="true" />
      </ParamChoice>
      <ParamChoice id="sioVoltage"  name="Regulated Output Voltage Level (Voh)" group="Input" default="CY_SIO_VOH_1_00" visible="`${hasSIO}`" editable="`${hasSIO}`" desc="Selects the regulated Voh output level and trip point of the input buffer for a specific SIO pin pair. Voh depends on the selected reference voltage." >
        <Entry name="1 x Reference"    value="CY_SIO_VOH_1_00" visible="true" />
        <Entry name="1.25 x Reference" value="CY_SIO_VOH_1_25" visible="true" />
        <Entry name="1.49 x Reference" value="CY_SIO_VOH_1_49" visible="true" />
        <Entry name="1.67 x Reference" value="CY_SIO_VOH_1_67" visible="true" />
        <Entry name="2.08 x Reference" value="CY_SIO_VOH_2_08" visible="true" />
        <Entry name="2.50 x Reference" value="CY_SIO_VOH_2_50" visible="true" />
        <Entry name="2.78 x Reference" value="CY_SIO_VOH_2_78" visible="true" />
        <Entry name="4.16 x Reference" value="CY_SIO_VOH_4_16" visible="true" />
      </ParamChoice>
      <ParamBool id="sioOutputBuffer"  name="SIO Output Buffer Regulated" group="Output" default="true" visible="`${hasSIO &amp;&amp; DigitalOutput}`" editable="`${hasSIO &amp;&amp; DigitalOutput}`" desc="Selects the output buffer mode" />
      <ParamChoice id="pullUpRes" name="Pull-up resistor" group="Output" default="CY_GPIO_PULLUP_RES_DISABLE" visible="`${pullUpResAvailable &amp;&amp; (DriveModes eq CY_GPIO_DM_CFGOUT3_STRONG_PULLUP_HIGHZ)}`" editable="`${pullUpResAvailable &amp;&amp; (DriveModes eq CY_GPIO_DM_CFGOUT3_STRONG_PULLUP_HIGHZ)}`" desc="The Pull-up resistor parameter configures the additional pull-up resistors." >
        <Entry name="Disable additional Pull-up resistors" value="CY_GPIO_PULLUP_RES_DISABLE" visible="true" />
        <Entry name="570Ω pull-up resistance"              value="CY_GPIO_PULLUP_RES_570"     visible="`${hasPullUpRes}`" />
        <Entry name="720Ω pull-up resistance"              value="CY_GPIO_PULLUP_RES_720"     visible="`${hasPullUpRes}`" />
        <Entry name="840Ω pull-up resistance"              value="CY_GPIO_PULLUP_RES_840"     visible="`${hasPullUpRes}`" />
        <Entry name="1100Ω pull-up resistance"             value="CY_GPIO_PULLUP_RES_1100"    visible="`${hasPullUpRes}`" />
        <Entry name="1200Ω pull-up resistance"             value="CY_GPIO_PULLUP_RES_1200"    visible="`${hasPullUpRes}`" />
        <Entry name="1800Ω pull-up resistance"             value="CY_GPIO_PULLUP_RES_1800"    visible="`${hasPullUpRes}`" />
        <Entry name="2800Ω pull-up resistance"             value="CY_GPIO_PULLUP_RES_2800"    visible="`${hasPullUpRes}`" />
      </ParamChoice>
    </Parameters>
    <ConfigFirmware>
      <ConfigInclude value="cy_gpio.h" include="true" />
      <ConfigInclude value="cy_sysint.h" include="`${getParamValue(&quot;3shunt&quot;, &quot;faultCb&quot;)}`" />
      <!-- <ConfigInclude value="cycfg_routing.h" include="true" /> -->
      <ConfigInclude value="cyhal_hw_types.h" include="true" guard="defined (CY_USING_HAL_LITE)" />

      <ConfigDefine name="`${INST_NAME}`_PORT" value="`${&quot;GPIO_PRT&quot;. port}`" public="true" include="true" />
      <ConfigDefine name="`${INST_NAME}`_PORT_NUM" value="`${port}`U" public="true" include="true" />
      <ConfigDefine name="`${INST_NAME}`_PIN" value="`${pin}`U" public="true" include="true" />
      <ConfigDefine name="`${INST_NAME}`_NUM" value="`${pin}`U" public="true" include="true" />
      <ConfigDefine name="`${INST_NAME}`_DRIVEMODE" value="`${DriveModes}`" public="true" include="true" />
      <ConfigDefine name="`${INST_NAME}`_INIT_DRIVESTATE" value="`${initialState}`" public="true" include="true" />
      <!-- <ConfigDefine name="`${blockName . &quot;_HSIOM&quot;}`" value="`${hasSmifConn ? &quot;HSIOM_SEL_ACT_15&quot; : &quot;HSIOM_SEL_GPIO&quot;}`" public="true" include="true" preventOverride="true" /> -->
      <!-- <ConfigDefine name="`${INST_NAME}`_HSIOM" value="`${blockName . &quot;_HSIOM&quot;}`" public="true" include="`${!(INST_NAME eq blockName)}`" /> -->
      <ConfigDefine name="`${INST_NAME}`_IRQ" value="`${(nonSec eq 1) ? &quot;ioss_interrupts_&quot; : &quot;ioss_interrupts_sec_&quot;}`gpio_`${port}`_IRQn" public="true" include="`${hasIRQ}`" />
      <ConfigDefine name="`${INST_NAME}`_HAL_PORT_PIN" value="P`${port}`_`${pin}`" public="true" include="true" guard="defined (CY_USING_HAL_LITE)"/>
      <ConfigDefine name="`${INST_NAME}`" value="P`${port}`_`${pin}`" public="true" include="true" guard="defined (CY_USING_HAL_LITE)" />
      <ConfigDefine name="`${INST_NAME}`_HAL_IRQ" value="`${(isrTrigger eq CY_GPIO_INTR_DISABLE) ? &quot;CYHAL_GPIO_IRQ_NONE&quot; :
                                                            (isrTrigger eq CY_GPIO_INTR_RISING) ? &quot;CYHAL_GPIO_IRQ_RISE&quot; :
                                                            (isrTrigger eq CY_GPIO_INTR_FALLING) ? &quot;CYHAL_GPIO_IRQ_FALL&quot; : &quot;CYHAL_GPIO_IRQ_BOTH&quot;}`"
                                                  public="true" include="true" guard="defined (CY_USING_HAL_LITE)" />
      <ConfigDefine name="`${INST_NAME}`_HAL_DIR" value="`${((DriveModes eq CY_GPIO_DM_HIGHZ) || (DriveModes eq CY_GPIO_DM_ANALOG)) ? &quot;CYHAL_GPIO_DIR_INPUT &quot; :
                                                            ((DriveModes eq CY_GPIO_DM_STRONG_IN_OFF) ||
                                                             (DriveModes eq CY_GPIO_DM_OD_DRIVESLOW_IN_OFF) ||
                                                             (DriveModes eq CY_GPIO_DM_OD_DRIVESHIGH_IN_OFF) ||
                                                             (DriveModes eq CY_GPIO_DM_PULLUP_IN_OFF) ||
                                                             (DriveModes eq CY_GPIO_DM_PULLDOWN_IN_OFF) ||
                                                             (DriveModes eq CY_GPIO_DM_PULLUP_DOWN_IN_OFF)) ? &quot;CYHAL_GPIO_DIR_OUTPUT &quot; : &quot;CYHAL_GPIO_DIR_BIDIRECTIONAL &quot;}`"
                                                  public="true" include="true" guard="defined (CY_USING_HAL_LITE)" />
      <ConfigDefine name="`${INST_NAME}`_HAL_DRIVEMODE" value="`${(DriveModes eq CY_GPIO_DM_HIGHZ) ? &quot;CYHAL_GPIO_DRIVE_NONE&quot; :
                                                                  (DriveModes eq CY_GPIO_DM_ANALOG) ? &quot;CYHAL_GPIO_DRIVE_ANALOG&quot; :
                                                                 ((DriveModes eq CY_GPIO_DM_PULLUP_IN_OFF) ||
                                                                  (DriveModes eq CY_GPIO_DM_PULLUP)) ? &quot;CYHAL_GPIO_DRIVE_PULLUP&quot; :
                                                                 ((DriveModes eq CY_GPIO_DM_PULLDOWN_IN_OFF) ||
                                                                  (DriveModes eq CY_GPIO_DM_PULLDOWN)) ? &quot;CYHAL_GPIO_DRIVE_PULLDOWN&quot; :
                                                                 ((DriveModes eq CY_GPIO_DM_OD_DRIVESLOW_IN_OFF) ||
                                                                  (DriveModes eq CY_GPIO_DM_OD_DRIVESLOW)) ? &quot;CYHAL_GPIO_DRIVE_OPENDRAINDRIVESLOW&quot; :
                                                                 ((DriveModes eq CY_GPIO_DM_OD_DRIVESHIGH_IN_OFF) ||
                                                                  (DriveModes eq CY_GPIO_DM_OD_DRIVESHIGH)) ? &quot;CYHAL_GPIO_DRIVE_OPENDRAINDRIVESHIGH&quot; :
                                                                 ((DriveModes eq CY_GPIO_DM_STRONG_IN_OFF) ||
                                                                  (DriveModes eq CY_GPIO_DM_STRONG)) ? &quot;CYHAL_GPIO_DRIVE_STRONG&quot; : &quot;CYHAL_GPIO_DRIVE_PULLUPDOWN&quot;}`"
                                                        public="true" include="true" guard="defined (CY_USING_HAL_LITE)" />
      <ConfigStruct name="`${INST_NAME}`_config" type="cy_stc_gpio_pin_config_t" const="`${getParamValue(&quot;3shunt&quot;, &quot;inFlash&quot;)}`" public="true" include="true" >
        <Member name="outVal" value="`${initialState}`" />
        <Member name="driveMode" value="`${DriveModes}`" />
        <Member name="hsiom" value="HSIOM_SEL_GPIO" />
        <Member name="intEdge" value="`${isrTrigger}`" />
        <Member name="intMask" value="`${isrTrigger eq CY_GPIO_INTR_DISABLE ? 0 : 1}`UL" />
        <Member name="vtrip" value="`${vtrip}`" />
        <Member name="slewRate" value="CY_GPIO_SLEW_FAST" />
        <Member name="driveSel" value="CY_GPIO_DRIVE_FULL" />
        <Member name="vregEn" value="`${(!hasSIO) ? &quot;0UL&quot; :
                                        sioOutputBuffer ? &quot;1UL&quot; : &quot;0UL&quot;}`" />
        <Member name="ibufMode" value="`${(!hasSIO) ? &quot;0UL&quot; :
                                        sioInputBuffer ? &quot;1UL&quot; : &quot;0UL&quot;}`" />
        <Member name="vtripSel" value="`${hasSIO ? sioTrip : &quot;0UL&quot;}`" />
        <Member name="vrefSel" value="`${hasSIO ? sioRef : &quot;0UL&quot;}`" />
        <Member name="vohSel" value="`${hasSIO ? sioVoltage : &quot;0UL&quot;}`" />
        <Member name="pullUpRes" value="`${pullUpRes}`" include="`${pullUpResAvailable}`"/>
        <Member name="nonSec" value="`${(secExtAvailable eq 1) ? nonSec : &quot;1UL&quot;}`" include="`${secExtAvailable ne -1}`"/>
      </ConfigStruct>

      <ConfigStruct name="`${INST_NAME}`_obj" type="cyhal_resource_inst_t" const="true" public="true" include="true" guard="defined (CY_USING_HAL_LITE)">
        <Member name="type" value="CYHAL_RSC_GPIO" />
        <Member name="block_num" value="`${INST_NAME}`_PORT_NUM" />
        <Member name="channel_num" value="`${INST_NAME}`_PIN" />
      </ConfigStruct>

      <ConfigInstruction purpose="INITIALIZE" value="Cy_GPIO_Pin_Init(`${INST_NAME}`_PORT, `${INST_NAME}`_PIN, &amp;`${INST_NAME}`_config);" include="true" />
    </ConfigFirmware>
  </PersonalityTemplate>

  <PersonalityTemplate id="fault" valid="`${getParamValue(&quot;3shunt&quot;, &quot;killInputEnabled&quot;)}`" >
    <FittingRules>
      <MappingRules>
        <IpBlock name="mxs40ioss,mxs40sioss" />
        <Resource name="ioss\.port\.pin" />
      </MappingRules>
    </FittingRules>
    <ExposedMembers>
      <ExposedMember key="intr" paramId="intr" />
      <ExposedMember key="cb" paramId="cb" />
    </ExposedMembers>
    <Parameters>
      <ParamBool id="debug" name="debug" group="Internal" default="false" visible="false" editable="false" desc="" />
      <!-- <ParamBool id="intr" name="intr" group="Internal" default="`${getParamValue(&quot;3shunt&quot;, &quot;faultCb&quot;)}`" visible="`${debug}`" editable="true" desc="" /> -->
      <!-- <ParamString id="cb" name="cb" group="Internal" default="`${getParamValue(&quot;3shunt&quot;, &quot;faultCbName&quot;)}`" visible="`${debug}`" editable="true" desc="" /> -->
      <ParamBool id="hasSIO" name="HasSIO" group="Misc" default="`${lookupExpression(&quot;GPIO.GPIO_PORT_NR[&quot; . getInstNumber(&quot;port&quot;) . &quot;].GPIO_PRT.SIO&quot;) &gt; 0}`" visible="false" editable="false" desc="Has SIO" />
      <ParamBool id="hasPullUpRes" name="HasPullUpRes" group="Misc" default="`${pullUpResAvailable ? (lookupExpression(&quot;GPIO.GPIO_PORT_NR[&quot; . getInstNumber(&quot;port&quot;) . &quot;].GPIO_PRT.RES_CFG&quot;) &gt; 0) : 0}`" visible="false" editable="false" desc="Has pull-up resistor" />
      <ParamBool id="hasIRQ" name="HasIRQ" group="Misc" default="`${lookupExpression(&quot;GPIO.GPIO_PORT_NR[&quot; . getInstNumber(&quot;port&quot;) . &quot;].GPIO_PRT.IRQ&quot;, 0) &gt; 0}`" visible="false" editable="false" desc="Has dedicated IRQ" />
      <ParamString id="driveModeExtension" name="Drive Mode Extension" group="Internal" default="`${lookupExpression(&quot;GPIO.GPIO_PORT_NR[&quot; . getInstNumber(&quot;port&quot;) . &quot;].GPIO_PRT.DRIVEMODE_WIDTH&quot;, 0)}`" visible="false" editable="false" desc="The drive mode extension" />
      <ParamRange id="pullUpResAvailable" name="Pull-up resistor" group="Internal" default="`${lookupExpression(&quot;GPIO.GPIO_PORT_NR[3].GPIO_PRT.RES_CFG&quot;, 0)}`" min="-1" max="1" resolution="1" visible="false" editable="false" desc="The pull-up resistor configuration" />
      <ParamChoice id="DriveModes" name="Drive Mode" group="General" default="CY_GPIO_DM_HIGHZ" visible="`${debug}`" editable="`${debug}`" desc="The Drive Mode parameter configures the pin provide to one of the eight available pin drive modes. Please see the device DS for more details on each drive mode." >
        <Entry name="Strong Drive. Input buffer on"                                                    value="CY_GPIO_DM_STRONG"                       visible="true" />
        <Entry name="Strong Drive. Input buffer off"                                                   value="CY_GPIO_DM_STRONG_IN_OFF"                visible="true" />
        <Entry name="Open Drain, Drives Low. Input buffer off"                                         value="CY_GPIO_DM_OD_DRIVESLOW_IN_OFF"          visible="true" />
        <Entry name="Open Drain, Drives High. Input buffer off"                                        value="CY_GPIO_DM_OD_DRIVESHIGH_IN_OFF"         visible="true" />
        <Entry name="Open Drain, Drives Low. Input buffer on"                                          value="CY_GPIO_DM_OD_DRIVESLOW"                 visible="true" />
        <Entry name="Open Drain, Drives High. Input buffer on"                                         value="CY_GPIO_DM_OD_DRIVESHIGH"                visible="true" />
        <Entry name="Resistive Pull-Up. Input buffer off"                                              value="CY_GPIO_DM_PULLUP_IN_OFF"                visible="true" />
        <Entry name="Resistive Pull-Down. Input buffer off"                                            value="CY_GPIO_DM_PULLDOWN_IN_OFF"              visible="true" />
        <Entry name="Resistive Pull-Up/Down. Input buffer off"                                         value="CY_GPIO_DM_PULLUP_DOWN_IN_OFF"           visible="true" />
        <Entry name="Resistive Pull-Up. Input buffer on"                                               value="CY_GPIO_DM_PULLUP"                       visible="true" />
        <Entry name="Resistive Pull-Down. Input buffer on"                                             value="CY_GPIO_DM_PULLDOWN"                     visible="true" />
        <Entry name="Resistive Pull-Up/Down. Input buffer on"                                          value="CY_GPIO_DM_PULLUP_DOWN"                  visible="true" />
        <Entry name="Digital High-Z. Input buffer on"                                                  value="CY_GPIO_DM_HIGHZ"                        visible="true" />
        <Entry name="Analog High-Z. Input buffer off"                                                  value="CY_GPIO_DM_ANALOG"                       visible="true" />
        <Entry name="Strong Drive/Resistive Pull-Up/High-Z"  value="CY_GPIO_DM_CFGOUT3_STRONG_PULLUP_HIGHZ"  visible="`${(driveModeExtension eq 4)}`" />
      </ParamChoice>
      <!-- <ParamChoice id="initialState" name="Initial Drive State" group="General" default="0" visible="`${debug}`" editable="`${debug}`" desc="This parameter specifies the pin-specific initial value written to the pin's OUT Register after a device reset/power-on." > -->
        <!-- <Entry name="High (1)" value="1" visible="true" /> -->
        <!-- <Entry name="Low (0)"  value="0" visible="true" /> -->
      <!-- </ParamChoice> -->
      <ParamChoice id="vtrip" name="Threshold" group="Input" default="CY_GPIO_VTRIP_CMOS" visible="`${debug}`" editable="`${debug}`" desc="This parameter selects the threshold levels that define a logic high level (1) and a logic low level (0)." >
        <Entry name="CMOS" value="CY_GPIO_VTRIP_CMOS" visible="true" />
        <Entry name="TTL"  value="CY_GPIO_VTRIP_TTL"  visible="true" />
      </ParamChoice>
      <ParamChoice id="isrTrigger" name="Interrupt Trigger Type" group="Input" default="CY_GPIO_INTR_DISABLE" visible="`${debug &amp;&amp; hasIRQ}`" editable="`${debug}`" desc="This parameter selects whether the pin can generate an interrupt and, if selected, the interrupt type." >
        <Entry name="None"         value="CY_GPIO_INTR_DISABLE" visible="true" />
        <Entry name="Rising Edge"  value="CY_GPIO_INTR_RISING"  visible="true" />
        <Entry name="Falling Edge" value="CY_GPIO_INTR_FALLING" visible="true" />
        <Entry name="Both Edges"   value="CY_GPIO_INTR_BOTH"    visible="true" />
      </ParamChoice>
      <ParamBool id="sioInputBuffer" name="SIO Input Buffer Differential" group="Input" default="false" visible="`${hasSIO}`" editable="`${hasSIO}`" desc="Selects the input buffer mode" />
      <ParamChoice id="sioTrip" name="SIO Input Buffer Trip Mode" group="Input" default="CY_SIO_VTRIP_CMOS" visible="`${hasSIO}`" editable="`${hasSIO}`" desc="Selects the input buffer trip-point in single ended input buffer mode." >
        <Entry name="CMOS (single-ended)"                 value="CY_SIO_VTRIP_CMOS"             visible="true" />
        <Entry name="TTL (single-ended)"                  value="CY_SIO_VTRIP_TTL"              visible="true" />
        <Entry name="0.5xVddio or 0.5xVoh (differential)" value="CY_SIO_VTRIP_0_5VDDIO_0_5VOH"  visible="true" />
        <Entry name="0.4xVddio or 0.4xVoh (differential)" value="CY_SIO_VTRIP_0_4VDDIO_1_0VREF" visible="true" />
      </ParamChoice>
      <ParamChoice id="sioRef" name="SIO Reference Voltage" group="Input" default="CY_SIO_VREF_PINREF" visible="`${hasSIO}`" editable="`${hasSIO}`" desc="Selects reference voltage (Vref) trip-point of the input buffer." >
        <Entry name="Analog Pin"              value="CY_SIO_VREF_PINREF" visible="true" />
        <Entry name="Internal 1.2V Reference" value="CY_SIO_VREF_1_2V"   visible="true" />
        <Entry name="AMUXBUS A"               value="CY_SIO_VREF_AMUX_A" visible="true" />
        <Entry name="AMUXBUS B"               value="CY_SIO_VREF_AMUX_B" visible="true" />
      </ParamChoice>
      <ParamChoice id="sioVoltage"  name="Regulated Output Voltage Level (Voh)" group="Input" default="CY_SIO_VOH_1_00" visible="`${hasSIO}`" editable="`${hasSIO}`" desc="Selects the regulated Voh output level and trip point of the input buffer for a specific SIO pin pair. Voh depends on the selected reference voltage." >
        <Entry name="1 x Reference"    value="CY_SIO_VOH_1_00" visible="true" />
        <Entry name="1.25 x Reference" value="CY_SIO_VOH_1_25" visible="true" />
        <Entry name="1.49 x Reference" value="CY_SIO_VOH_1_49" visible="true" />
        <Entry name="1.67 x Reference" value="CY_SIO_VOH_1_67" visible="true" />
        <Entry name="2.08 x Reference" value="CY_SIO_VOH_2_08" visible="true" />
        <Entry name="2.50 x Reference" value="CY_SIO_VOH_2_50" visible="true" />
        <Entry name="2.78 x Reference" value="CY_SIO_VOH_2_78" visible="true" />
        <Entry name="4.16 x Reference" value="CY_SIO_VOH_4_16" visible="true" />
      </ParamChoice>
      <ParamBool id="sioOutputBuffer"  name="SIO Output Buffer Regulated" group="Output" default="true" visible="`${hasSIO &amp;&amp; DigitalOutput}`" editable="`${hasSIO &amp;&amp; DigitalOutput}`" desc="Selects the output buffer mode" />
      <ParamChoice id="pullUpRes" name="Pull-up resistor" group="Output" default="CY_GPIO_PULLUP_RES_DISABLE" visible="`${pullUpResAvailable &amp;&amp; (DriveModes eq CY_GPIO_DM_CFGOUT3_STRONG_PULLUP_HIGHZ)}`" editable="`${pullUpResAvailable &amp;&amp; (DriveModes eq CY_GPIO_DM_CFGOUT3_STRONG_PULLUP_HIGHZ)}`" desc="The Pull-up resistor parameter configures the additional pull-up resistors." >
        <Entry name="Disable additional Pull-up resistors" value="CY_GPIO_PULLUP_RES_DISABLE" visible="true" />
        <Entry name="570Ω pull-up resistance"              value="CY_GPIO_PULLUP_RES_570"     visible="`${hasPullUpRes}`" />
        <Entry name="720Ω pull-up resistance"              value="CY_GPIO_PULLUP_RES_720"     visible="`${hasPullUpRes}`" />
        <Entry name="840Ω pull-up resistance"              value="CY_GPIO_PULLUP_RES_840"     visible="`${hasPullUpRes}`" />
        <Entry name="1100Ω pull-up resistance"             value="CY_GPIO_PULLUP_RES_1100"    visible="`${hasPullUpRes}`" />
        <Entry name="1200Ω pull-up resistance"             value="CY_GPIO_PULLUP_RES_1200"    visible="`${hasPullUpRes}`" />
        <Entry name="1800Ω pull-up resistance"             value="CY_GPIO_PULLUP_RES_1800"    visible="`${hasPullUpRes}`" />
        <Entry name="2800Ω pull-up resistance"             value="CY_GPIO_PULLUP_RES_2800"    visible="`${hasPullUpRes}`" />
      </ParamChoice>
      <ParamRange id="port" name="Port number" group="Internal" default="`${getInstNumber(&quot;port&quot;)}`" min="0" max="127" resolution="1" visible="false" editable="false" desc="" />
      <ParamRange id="pin" name="Pin number" group="Internal" default="`${getInstNumber(&quot;pin&quot;)}`" min="0" max="7" resolution="1" visible="false" editable="false" desc="" />
      <ParamString id="blockName" name="Block name" group="Internal" default="`${&quot;ioss_0_port_&quot; . port . &quot;_pin_&quot; . pin}`" visible="false" editable="false" desc="" />
    </Parameters>
    <ConfigFirmware>
      <ConfigInclude value="cy_gpio.h" include="true" />
      <ConfigInclude value="cycfg_routing.h" include="true" />
      <ConfigInclude value="cyhal_hw_types.h" include="true" guard="defined (CY_USING_HAL_LITE)" />

      <ConfigDefine name="`${INST_NAME}`_PORT" value="`${&quot;GPIO_PRT&quot;. port}`" public="true" include="true" />
      <ConfigDefine name="`${INST_NAME}`_PORT_NUM" value="`${port}`U" public="true" include="true" />
      <ConfigDefine name="`${INST_NAME}`_PIN" value="`${pin}`U" public="true" include="true" />
      <ConfigDefine name="`${INST_NAME}`_NUM" value="`${pin}`U" public="true" include="true" />
      <ConfigDefine name="`${INST_NAME}`_DRIVEMODE" value="`${DriveModes}`" public="true" include="true" />
      <ConfigDefine name="`${INST_NAME}`_INIT_DRIVESTATE" value="`${initialState}`" public="true" include="true" />
      <!-- <ConfigDefine name="`${blockName . &quot;_HSIOM&quot;}`" value="`${hasSmifConn ? &quot;HSIOM_SEL_ACT_15&quot; : &quot;HSIOM_SEL_GPIO&quot;}`" public="true" include="true" preventOverride="true" /> -->
      <ConfigDefine name="`${INST_NAME}`_HSIOM" value="`${blockName . &quot;_HSIOM&quot;}`" public="true" include="`${!(INST_NAME eq blockName)}`" />
      <ConfigDefine name="`${INST_NAME}`_IRQ" value="`${(getParamValue(&quot;enable&quot;, &quot;nonSec&quot;) eq 1) ? &quot;ioss_interrupts_&quot; : &quot;ioss_interrupts_sec_&quot;}`gpio_`${port}`_IRQn" public="true" include="`${hasIRQ}`" />
      <ConfigDefine name="`${INST_NAME}`_HAL_PORT_PIN" value="P`${port}`_`${pin}`" public="true" include="true" guard="defined (CY_USING_HAL_LITE)"/>
      <ConfigDefine name="`${INST_NAME}`" value="P`${port}`_`${pin}`" public="true" include="true" guard="defined (CY_USING_HAL_LITE)" />
      <ConfigDefine name="`${INST_NAME}`_HAL_IRQ" value="`${(isrTrigger eq CY_GPIO_INTR_DISABLE) ? &quot;CYHAL_GPIO_IRQ_NONE&quot; :
                                                            (isrTrigger eq CY_GPIO_INTR_RISING) ? &quot;CYHAL_GPIO_IRQ_RISE&quot; :
                                                            (isrTrigger eq CY_GPIO_INTR_FALLING) ? &quot;CYHAL_GPIO_IRQ_FALL&quot; : &quot;CYHAL_GPIO_IRQ_BOTH&quot;}`"
                                                  public="true" include="true" guard="defined (CY_USING_HAL_LITE)" />
      <ConfigDefine name="`${INST_NAME}`_HAL_DIR" value="`${((DriveModes eq CY_GPIO_DM_HIGHZ) || (DriveModes eq CY_GPIO_DM_ANALOG)) ? &quot;CYHAL_GPIO_DIR_INPUT &quot; :
                                                            ((DriveModes eq CY_GPIO_DM_STRONG_IN_OFF) ||
                                                             (DriveModes eq CY_GPIO_DM_OD_DRIVESLOW_IN_OFF) ||
                                                             (DriveModes eq CY_GPIO_DM_OD_DRIVESHIGH_IN_OFF) ||
                                                             (DriveModes eq CY_GPIO_DM_PULLUP_IN_OFF) ||
                                                             (DriveModes eq CY_GPIO_DM_PULLDOWN_IN_OFF) ||
                                                             (DriveModes eq CY_GPIO_DM_PULLUP_DOWN_IN_OFF)) ? &quot;CYHAL_GPIO_DIR_OUTPUT &quot; : &quot;CYHAL_GPIO_DIR_BIDIRECTIONAL &quot;}`"
                                                  public="true" include="true" guard="defined (CY_USING_HAL_LITE)" />
      <ConfigDefine name="`${INST_NAME}`_HAL_DRIVEMODE" value="`${(DriveModes eq CY_GPIO_DM_HIGHZ) ? &quot;CYHAL_GPIO_DRIVE_NONE&quot; :
                                                                  (DriveModes eq CY_GPIO_DM_ANALOG) ? &quot;CYHAL_GPIO_DRIVE_ANALOG&quot; :
                                                                 ((DriveModes eq CY_GPIO_DM_PULLUP_IN_OFF) ||
                                                                  (DriveModes eq CY_GPIO_DM_PULLUP)) ? &quot;CYHAL_GPIO_DRIVE_PULLUP&quot; :
                                                                 ((DriveModes eq CY_GPIO_DM_PULLDOWN_IN_OFF) ||
                                                                  (DriveModes eq CY_GPIO_DM_PULLDOWN)) ? &quot;CYHAL_GPIO_DRIVE_PULLDOWN&quot; :
                                                                 ((DriveModes eq CY_GPIO_DM_OD_DRIVESLOW_IN_OFF) ||
                                                                  (DriveModes eq CY_GPIO_DM_OD_DRIVESLOW)) ? &quot;CYHAL_GPIO_DRIVE_OPENDRAINDRIVESLOW&quot; :
                                                                 ((DriveModes eq CY_GPIO_DM_OD_DRIVESHIGH_IN_OFF) ||
                                                                  (DriveModes eq CY_GPIO_DM_OD_DRIVESHIGH)) ? &quot;CYHAL_GPIO_DRIVE_OPENDRAINDRIVESHIGH&quot; :
                                                                 ((DriveModes eq CY_GPIO_DM_STRONG_IN_OFF) ||
                                                                  (DriveModes eq CY_GPIO_DM_STRONG)) ? &quot;CYHAL_GPIO_DRIVE_STRONG&quot; : &quot;CYHAL_GPIO_DRIVE_PULLUPDOWN&quot;}`"
                                                        public="true" include="true" guard="defined (CY_USING_HAL_LITE)" />
      <ConfigStruct name="`${INST_NAME}`_config" type="cy_stc_gpio_pin_config_t" const="`${getParamValue(&quot;3shunt&quot;, &quot;inFlash&quot;)}`" public="true" include="true" >
        <Member name="outVal" value="`${initialState}`" />
        <Member name="driveMode" value="`${DriveModes}`" />
        <Member name="hsiom" value="`${INST_NAME}`_HSIOM" />
        <Member name="intEdge" value="`${((&quot;CY_TCPWM_INPUT_RISINGEDGE&quot; eq getParamValue(&quot;3shunt&quot;, &quot;killInputMode&quot;)) || (&quot;CY_TCPWM_INPUT_LEVEL&quot; eq getParamValue(&quot;3shunt&quot;, &quot;killInputMode&quot;))) ? &quot;CY_GPIO_INTR_RISING&quot; : &quot;CY_GPIO_INTR_DISABLE&quot;}`" />
        <Member name="intMask" value="`${cb ? 1 : 0}`UL" />
        <Member name="vtrip" value="`${vtrip}`" />
        <Member name="slewRate" value="CY_GPIO_SLEW_FAST" />
        <Member name="driveSel" value="CY_GPIO_DRIVE_FULL" />
        <Member name="vregEn" value="`${(!hasSIO) ? &quot;0UL&quot; :
                                        sioOutputBuffer ? &quot;1UL&quot; : &quot;0UL&quot;}`" />
        <Member name="ibufMode" value="`${(!hasSIO) ? &quot;0UL&quot; :
                                        sioInputBuffer ? &quot;1UL&quot; : &quot;0UL&quot;}`" />
        <Member name="vtripSel" value="`${hasSIO ? sioTrip : &quot;0UL&quot;}`" />
        <Member name="vrefSel" value="`${hasSIO ? sioRef : &quot;0UL&quot;}`" />
        <Member name="vohSel" value="`${hasSIO ? sioVoltage : &quot;0UL&quot;}`" />
        <Member name="pullUpRes" value="`${pullUpRes}`" include="`${pullUpResAvailable}`"/>
        <Member name="nonSec" value="`${(getParamValue(&quot;enable&quot;, &quot;secExtAvailable&quot;) eq 1) ? getParamValue(&quot;enable&quot;, &quot;nonSec&quot;) : &quot;1UL&quot;}`" include="`${getParamValue(&quot;enable&quot;, &quot;secExtAvailable&quot;) ne -1}`"/>
      </ConfigStruct>

      <ConfigStruct name="`${INST_NAME}`_obj" type="cyhal_resource_inst_t" const="true" public="true" include="true" guard="defined (CY_USING_HAL_LITE)">
        <Member name="type" value="CYHAL_RSC_GPIO" />
        <Member name="block_num" value="`${INST_NAME}`_PORT_NUM" />
        <Member name="channel_num" value="`${INST_NAME}`_PIN" />
      </ConfigStruct>

      <ConfigInstruction purpose="INITIALIZE" value="Cy_GPIO_Pin_Init(`${INST_NAME}`_PORT, `${INST_NAME}`_PIN, &amp;`${INST_NAME}`_config);" include="true" />
    </ConfigFirmware>
  </PersonalityTemplate>

</PersonalityTemplate>
