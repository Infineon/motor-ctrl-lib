<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="mtb__mcdi_8h" kind="file" language="C++">
    <compoundname>mtb_mcdi.h</compoundname>
    <includes local="yes">cy_pdl.h</includes>
    <includedby refid="mtb__mcdi_8c" local="yes">mtb_mcdi.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>mtb_mcdi.h</label>
        <link refid="mtb__mcdi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cy_pdl.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structmtb__stc__mcdi__pwm__t" prot="public">mtb_stc_mcdi_pwm_t</innerclass>
    <innerclass refid="structmtb__stc__mcdi__tmr__t" prot="public">mtb_stc_mcdi_tmr_t</innerclass>
    <innerclass refid="structmtb__stc__mcdi__gpio__t" prot="public">mtb_stc_mcdi_gpio_t</innerclass>
    <innerclass refid="structmtb__stc__mcdi__cfg__t" prot="public">mtb_stc_mcdi_cfg_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__group__mcdi__macros_1gab3d7cac66a5828bae5554da74b15727c" prot="public" static="no">
        <name>MTB_MCDI_PWM_U</name>
        <initializer>(0U)</initializer>
        <briefdescription>
<para>U-phase PWM index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mcdi/mtb_mcdi.h" line="203" column="9" bodyfile="mcdi/mtb_mcdi.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__mcdi__macros_1gab1f93d075ac5b6dccda558f1694e81cc" prot="public" static="no">
        <name>MTB_MCDI_PWM_V</name>
        <initializer>(1U)</initializer>
        <briefdescription>
<para>V-phase PWM index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mcdi/mtb_mcdi.h" line="204" column="9" bodyfile="mcdi/mtb_mcdi.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__mcdi__macros_1ga4d8fd7091ee0ab83688e5fad530fa536" prot="public" static="no">
        <name>MTB_MCDI_PWM_W</name>
        <initializer>(2U)</initializer>
        <briefdescription>
<para>W-phase PWM index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mcdi/mtb_mcdi.h" line="205" column="9" bodyfile="mcdi/mtb_mcdi.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__mcdi__macros_1gaeb37179b6cfb4e2f93ac3d4493eb8024" prot="public" static="no">
        <name>MTB_MCDI_TMR_SYNC</name>
        <initializer>(0U)</initializer>
        <briefdescription>
<para>Synchronization Timer index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mcdi/mtb_mcdi.h" line="207" column="9" bodyfile="mcdi/mtb_mcdi.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__mcdi__macros_1gad236de1b26014108d39dc38824f395e9" prot="public" static="no">
        <name>MTB_MCDI_TMR_FAST</name>
        <initializer>(1U)</initializer>
        <briefdescription>
<para>Fast Control Loop Timer index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mcdi/mtb_mcdi.h" line="208" column="9" bodyfile="mcdi/mtb_mcdi.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__mcdi__macros_1gabf52c07aff1216be73dada15234a3810" prot="public" static="no">
        <name>MTB_MCDI_TMR_SLOW</name>
        <initializer>(2U)</initializer>
        <briefdescription>
<para>Fast Control Loop Timer index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mcdi/mtb_mcdi.h" line="209" column="9" bodyfile="mcdi/mtb_mcdi.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__group__mcdi__topologies_1ga63b341bbaebe7f4fede8361e0501911f" prot="public" static="no" strong="no">
        <type></type>
        <name>mtb_en_mcdi_topo_t</name>
        <enumvalue id="group__group__mcdi__topologies_1gga63b341bbaebe7f4fede8361e0501911fa4b59a0c639ea147f2ac614a9506607fd" prot="public">
          <name>MTB_MCDI_3SHUNT</name>
          <briefdescription>
<para>3-shunt topology </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__group__mcdi__topologies_1gga63b341bbaebe7f4fede8361e0501911fa08d037d41b8b1b4e94fe75e23ea6c707" prot="public">
          <name>MTB_MCDI_1SHUNT</name>
          <briefdescription>
<para>1-shunt topology </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The motor control topologies. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mcdi/mtb_mcdi.h" line="219" column="1" bodyfile="mcdi/mtb_mcdi.h" bodystart="220" bodyend="223"/>
      </memberdef>
      <memberdef kind="enum" id="group__group__mcdi__status_1gaa124ac06d698702da0fbf6cb44be1dec" prot="public" static="no" strong="no">
        <type></type>
        <name>cy_en_mcdi_status_t</name>
        <enumvalue id="group__group__mcdi__status_1ggaa124ac06d698702da0fbf6cb44be1decabcfa07c2f7dd3231b671d732da06c222" prot="public">
          <name>CY_MCDI_SUCCESS</name>
          <initializer>= CY_RSLT_SUCCESS</initializer>
          <briefdescription>
<para>Action was successful. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__group__mcdi__status_1ggaa124ac06d698702da0fbf6cb44be1decadd0e8e2969e8210d64601cae9b7ddd22" prot="public">
          <name>CY_MCDI_BAD_PARAM</name>
          <initializer>= CY_RSLT_CREATE(CY_RSLT_TYPE_ERROR,
                                               CY_RSLT_GET_MODULE(CY_RSLT_MODULE_MIDDLEWARE_MCDI),
                                               0x0000UL)</initializer>
          <briefdescription>
<para>The Input parameter is out of range or input pointer is NULL and initialization could not be completed. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Return status for functions of the driver for Motor Control Device Interface. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mcdi/mtb_mcdi.h" line="230" column="1" bodyfile="mcdi/mtb_mcdi.h" bodystart="231" bodyend="237"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__group__mcdi__functions_1ga51a3bd9bed4fc1317476522d054fb583" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cy_rslt_t</type>
        <definition>cy_rslt_t mtb_mcdi_init</definition>
        <argsstring>(mtb_stc_mcdi_cfg_t const *cfg)</argsstring>
        <name>mtb_mcdi_init</name>
        <param>
          <type><ref refid="structmtb__stc__mcdi__cfg__t" kindref="compound">mtb_stc_mcdi_cfg_t</ref> const *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
<para>Initializes all MCDI Timers and PWMs. </para>
        </briefdescription>
        <detaileddescription>
<para>The HPPASS is a common resource, it is initialized outside of the solution level (it can be common for multiple solutions).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the configuration structure <ref refid="structmtb__stc__mcdi__cfg__t" kindref="compound">mtb_stc_mcdi_cfg_t</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The combined status if initialization of all the Timers and PWMs.</para>
</simplesect>
<simplesect kind="par"><title>Function Usage</title><para><programlisting filename="fut_dat_snippet/main.c"><codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CY_RSLT_SUCCESS<sp/>!=<sp/><ref refid="group__group__mcdi__functions_1ga51a3bd9bed4fc1317476522d054fb583" kindref="member">mtb_mcdi_init</ref>(&amp;myMotor_cfg))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CY_ASSERT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>possible<sp/>error<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__mcdi__functions_1gacbee2416e6dfff366a74a3cea179c2cc" kindref="member">mtb_mcdi_enable</ref>(&amp;myMotor_cfg);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CY_RSLT_SUCCESS<sp/>!=<sp/><ref refid="group__group__mcdi__functions_1gace17318abfe875652b61ba0f43824339" kindref="member">mtb_mcdi_start</ref>(&amp;myMotor_cfg))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CY_ASSERT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>possible<sp/>error<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>after<sp/>some<sp/>time,<sp/>when<sp/>motor<sp/>control<sp/>HW<sp/>has<sp/>to<sp/>be<sp/>stopped<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__mcdi__functions_1gad3dd6a067f1d7921b2ff843cdb62111e" kindref="member">mtb_mcdi_disable</ref>(&amp;myMotor_cfg);</highlight></codeline>
</programlisting> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mcdi/mtb_mcdi.h" line="297" column="11" bodyfile="mcdi/mtb_mcdi.c" bodystart="46" bodyend="70" declfile="mcdi/mtb_mcdi.h" declline="297" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__group__mcdi__functions_1gacbee2416e6dfff366a74a3cea179c2cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cy_rslt_t</type>
        <definition>cy_rslt_t mtb_mcdi_enable</definition>
        <argsstring>(mtb_stc_mcdi_cfg_t const *cfg)</argsstring>
        <name>mtb_mcdi_enable</name>
        <param>
          <type><ref refid="structmtb__stc__mcdi__cfg__t" kindref="compound">mtb_stc_mcdi_cfg_t</ref> const *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
<para>Enables all MCDI Timers and PWMs. </para>
        </briefdescription>
        <detaileddescription>
<para>After this action, they are sensitive to input triggers.</para>
<para><simplesect kind="return"><para>The execution status.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the configuration structure <ref refid="structmtb__stc__mcdi__cfg__t" kindref="compound">mtb_stc_mcdi_cfg_t</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Function Usage</title><para><programlisting filename="fut_dat_snippet/main.c"><codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CY_RSLT_SUCCESS<sp/>!=<sp/><ref refid="group__group__mcdi__functions_1ga51a3bd9bed4fc1317476522d054fb583" kindref="member">mtb_mcdi_init</ref>(&amp;myMotor_cfg))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CY_ASSERT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>possible<sp/>error<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__mcdi__functions_1gacbee2416e6dfff366a74a3cea179c2cc" kindref="member">mtb_mcdi_enable</ref>(&amp;myMotor_cfg);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CY_RSLT_SUCCESS<sp/>!=<sp/><ref refid="group__group__mcdi__functions_1gace17318abfe875652b61ba0f43824339" kindref="member">mtb_mcdi_start</ref>(&amp;myMotor_cfg))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CY_ASSERT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>possible<sp/>error<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>after<sp/>some<sp/>time,<sp/>when<sp/>motor<sp/>control<sp/>HW<sp/>has<sp/>to<sp/>be<sp/>stopped<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__mcdi__functions_1gad3dd6a067f1d7921b2ff843cdb62111e" kindref="member">mtb_mcdi_disable</ref>(&amp;myMotor_cfg);</highlight></codeline>
</programlisting> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mcdi/mtb_mcdi.h" line="314" column="11" bodyfile="mcdi/mtb_mcdi.c" bodystart="73" bodyend="105" declfile="mcdi/mtb_mcdi.h" declline="314" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__group__mcdi__functions_1gad3dd6a067f1d7921b2ff843cdb62111e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cy_rslt_t</type>
        <definition>cy_rslt_t mtb_mcdi_disable</definition>
        <argsstring>(mtb_stc_mcdi_cfg_t const *cfg)</argsstring>
        <name>mtb_mcdi_disable</name>
        <param>
          <type><ref refid="structmtb__stc__mcdi__cfg__t" kindref="compound">mtb_stc_mcdi_cfg_t</ref> const *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
<para>Stops and Disables all MCDI Timers and PWMs. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The execution status.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the configuration structure <ref refid="structmtb__stc__mcdi__cfg__t" kindref="compound">mtb_stc_mcdi_cfg_t</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Function Usage</title><para><programlisting filename="fut_dat_snippet/main.c"><codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CY_RSLT_SUCCESS<sp/>!=<sp/><ref refid="group__group__mcdi__functions_1ga51a3bd9bed4fc1317476522d054fb583" kindref="member">mtb_mcdi_init</ref>(&amp;myMotor_cfg))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CY_ASSERT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>possible<sp/>error<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__mcdi__functions_1gacbee2416e6dfff366a74a3cea179c2cc" kindref="member">mtb_mcdi_enable</ref>(&amp;myMotor_cfg);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CY_RSLT_SUCCESS<sp/>!=<sp/><ref refid="group__group__mcdi__functions_1gace17318abfe875652b61ba0f43824339" kindref="member">mtb_mcdi_start</ref>(&amp;myMotor_cfg))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CY_ASSERT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>possible<sp/>error<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>after<sp/>some<sp/>time,<sp/>when<sp/>motor<sp/>control<sp/>HW<sp/>has<sp/>to<sp/>be<sp/>stopped<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__mcdi__functions_1gad3dd6a067f1d7921b2ff843cdb62111e" kindref="member">mtb_mcdi_disable</ref>(&amp;myMotor_cfg);</highlight></codeline>
</programlisting> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mcdi/mtb_mcdi.h" line="330" column="11" bodyfile="mcdi/mtb_mcdi.c" bodystart="108" bodyend="138" declfile="mcdi/mtb_mcdi.h" declline="330" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__group__mcdi__functions_1gace17318abfe875652b61ba0f43824339" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cy_rslt_t</type>
        <definition>cy_rslt_t mtb_mcdi_start</definition>
        <argsstring>(mtb_stc_mcdi_cfg_t const *cfg)</argsstring>
        <name>mtb_mcdi_start</name>
        <param>
          <type><ref refid="structmtb__stc__mcdi__cfg__t" kindref="compound">mtb_stc_mcdi_cfg_t</ref> const *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
<para>Starts all the PWMs and Sync and Fast Timers synchronously. </para>
        </briefdescription>
        <detaileddescription>
<para>Starts the Slow Timer asynchronously after that. The HPPASS is a common resource, it is configured and started before this function execution.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the configuration structure <ref refid="structmtb__stc__mcdi__cfg__t" kindref="compound">mtb_stc_mcdi_cfg_t</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The Cy_TrigMux_SwTrigger status.</para>
</simplesect>
<simplesect kind="par"><title>Function Usage</title><para><programlisting filename="fut_dat_snippet/main.c"><codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CY_RSLT_SUCCESS<sp/>!=<sp/><ref refid="group__group__mcdi__functions_1ga51a3bd9bed4fc1317476522d054fb583" kindref="member">mtb_mcdi_init</ref>(&amp;myMotor_cfg))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CY_ASSERT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>possible<sp/>error<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__mcdi__functions_1gacbee2416e6dfff366a74a3cea179c2cc" kindref="member">mtb_mcdi_enable</ref>(&amp;myMotor_cfg);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CY_RSLT_SUCCESS<sp/>!=<sp/><ref refid="group__group__mcdi__functions_1gace17318abfe875652b61ba0f43824339" kindref="member">mtb_mcdi_start</ref>(&amp;myMotor_cfg))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CY_ASSERT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>possible<sp/>error<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>after<sp/>some<sp/>time,<sp/>when<sp/>motor<sp/>control<sp/>HW<sp/>has<sp/>to<sp/>be<sp/>stopped<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__mcdi__functions_1gad3dd6a067f1d7921b2ff843cdb62111e" kindref="member">mtb_mcdi_disable</ref>(&amp;myMotor_cfg);</highlight></codeline>
</programlisting> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mcdi/mtb_mcdi.h" line="349" column="11" bodyfile="mcdi/mtb_mcdi.c" bodystart="141" bodyend="151" declfile="mcdi/mtb_mcdi.h" declline="349" declcolumn="11"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Provides private declarations for the MCDI library. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="version"><para>1.0</para>
</simplesect>
<simplesect kind="copyright"><para>(c) (2024), Cypress Semiconductor Corporation (an Infineon company) or an affiliate of Cypress Semiconductor Corporation. All rights reserved.</para>
</simplesect>
This software, including source code, documentation and related materials (&quot;Software&quot;) is owned by Cypress Semiconductor Corporation or one of its affiliates (&quot;Cypress&quot;) and is protected by and subject to worldwide patent protection (United States and foreign), United States copyright laws and international treaty provisions. Therefore, you may use this Software only as provided in the license agreement accompanying the software package from which you obtained this Software (&quot;EULA&quot;).</para>
<para>If no EULA applies, Cypress hereby grants you a personal, non-exclusive, non-transferable license to copy, modify, and compile the Software source code solely for use in connection with Cypress&apos;s integrated circuit products. Any reproduction, modification, translation, compilation, or representation of this Software except as specified above is prohibited without the express written permission of Cypress.</para>
<para>Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. Cypress reserves the right to make changes to the Software without notice. Cypress does not assume any liability arising out of the application or use of the Software or any product or circuit described in the Software. Cypress does not authorize its products for use in any products where a malfunction or failure of the Cypress product may reasonably be expected to result in significant property damage, injury or death (&quot;High Risk Product&quot;). By including Cypress&apos;s product in a High Risk Product, the manufacturer of such system or application assumes all risk of such use and in doing so agrees to indemnify Cypress against all liability. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MTB_MCDI_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MTB_MCDI_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cy_pdl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CY_IP_MXS40MCPASS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__cplusplus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CY_MCDI_MOTORS<sp/>2U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CY_MCDI_PWM_NUM<sp/>3U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CY_MCDI_TMR_NUM<sp/>3U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MTB_MCDI_PWM_U<sp/><sp/><sp/><sp/><sp/>(0U)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MTB_MCDI_PWM_V<sp/><sp/><sp/><sp/><sp/>(1U)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MTB_MCDI_PWM_W<sp/><sp/><sp/><sp/><sp/>(2U)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MTB_MCDI_TMR_SYNC<sp/><sp/><sp/><sp/><sp/>(0U)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MTB_MCDI_TMR_FAST<sp/><sp/><sp/><sp/><sp/>(1U)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MTB_MCDI_TMR_SLOW<sp/><sp/><sp/><sp/><sp/>(2U)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">/***************************************</highlight></codeline>
<codeline lineno="213"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Enumerated<sp/>Types</highlight></codeline>
<codeline lineno="214"><highlight class="comment">***************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__mcdi__topologies_1gga63b341bbaebe7f4fede8361e0501911fa4b59a0c639ea147f2ac614a9506607fd" kindref="member">MTB_MCDI_3SHUNT</ref>,<sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__mcdi__topologies_1gga63b341bbaebe7f4fede8361e0501911fa08d037d41b8b1b4e94fe75e23ea6c707" kindref="member">MTB_MCDI_1SHUNT</ref><sp/><sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal">}<sp/><ref refid="group__group__mcdi__topologies_1ga63b341bbaebe7f4fede8361e0501911f" kindref="member">mtb_en_mcdi_topo_t</ref>;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__mcdi__status_1ggaa124ac06d698702da0fbf6cb44be1decabcfa07c2f7dd3231b671d732da06c222" kindref="member">CY_MCDI_SUCCESS</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>CY_RSLT_SUCCESS,<sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__mcdi__status_1ggaa124ac06d698702da0fbf6cb44be1decadd0e8e2969e8210d64601cae9b7ddd22" kindref="member">CY_MCDI_BAD_PARAM</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>CY_RSLT_CREATE(CY_RSLT_TYPE_ERROR,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CY_RSLT_GET_MODULE(CY_RSLT_MODULE_MIDDLEWARE_MCDI),</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0000UL)<sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal">}<sp/><ref refid="group__group__mcdi__status_1gaa124ac06d698702da0fbf6cb44be1dec" kindref="member">cy_en_mcdi_status_t</ref>;</highlight></codeline>
<codeline lineno="244" refid="structmtb__stc__mcdi__pwm__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx;<sp/></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>cy_stc_tcpwm_pwm_config_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>cfg;<sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal">}<sp/><ref refid="structmtb__stc__mcdi__pwm__t" kindref="compound">mtb_stc_mcdi_pwm_t</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="structmtb__stc__mcdi__tmr__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx;<sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>cy_stc_tcpwm_counter_config_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>cfg;<sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal">}<sp/><ref refid="structmtb__stc__mcdi__tmr__t" kindref="compound">mtb_stc_mcdi_tmr_t</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="structmtb__stc__mcdi__gpio__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>GPIO_PRT_Type<sp/>*<sp/>base;<sp/></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/>pinNum;<sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal">}<sp/><ref refid="structmtb__stc__mcdi__gpio__t" kindref="compound">mtb_stc_mcdi_gpio_t</ref>;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="structmtb__stc__mcdi__cfg__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__mcdi__topologies_1ga63b341bbaebe7f4fede8361e0501911f" kindref="member">mtb_en_mcdi_topo_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topo;<sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fastIntrMsk;<sp/></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slowIntrMsk;<sp/></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>syncStartTrig;<sp/></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>TCPWM_Type<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tcpwmBase;<sp/></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmtb__stc__mcdi__pwm__t" kindref="compound">mtb_stc_mcdi_pwm_t</ref><sp/>pwm[CY_MCDI_PWM_NUM];<sp/></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmtb__stc__mcdi__tmr__t" kindref="compound">mtb_stc_mcdi_tmr_t</ref><sp/>tmr[CY_MCDI_TMR_NUM];<sp/></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmtb__stc__mcdi__gpio__t" kindref="compound">mtb_stc_mcdi_gpio_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>fault;<sp/></highlight></codeline>
<codeline lineno="276"><highlight class="normal">}<sp/><ref refid="structmtb__stc__mcdi__cfg__t" kindref="compound">mtb_stc_mcdi_cfg_t</ref>;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="283"><highlight class="comment">*<sp/>Function<sp/>Name:<sp/>mtb_mcdi_init</highlight></codeline>
<codeline lineno="284"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal">cy_rslt_t<sp/><ref refid="group__group__mcdi__functions_1ga51a3bd9bed4fc1317476522d054fb583" kindref="member">mtb_mcdi_init</ref>(<ref refid="structmtb__stc__mcdi__cfg__t" kindref="compound">mtb_stc_mcdi_cfg_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>cfg);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="301"><highlight class="comment">*<sp/>Function<sp/>Name:<sp/>mtb_mcdi_enable</highlight></codeline>
<codeline lineno="302"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal">cy_rslt_t<sp/><ref refid="group__group__mcdi__functions_1gacbee2416e6dfff366a74a3cea179c2cc" kindref="member">mtb_mcdi_enable</ref>(<ref refid="structmtb__stc__mcdi__cfg__t" kindref="compound">mtb_stc_mcdi_cfg_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>cfg);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="318"><highlight class="comment">*<sp/>Function<sp/>Name:<sp/>mtb_mcdi_disable</highlight></codeline>
<codeline lineno="319"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal">cy_rslt_t<sp/><ref refid="group__group__mcdi__functions_1gad3dd6a067f1d7921b2ff843cdb62111e" kindref="member">mtb_mcdi_disable</ref>(<ref refid="structmtb__stc__mcdi__cfg__t" kindref="compound">mtb_stc_mcdi_cfg_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>cfg);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="334"><highlight class="comment">*<sp/>Function<sp/>Name:<sp/>mtb_mcdi_start</highlight></codeline>
<codeline lineno="335"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal">cy_rslt_t<sp/><ref refid="group__group__mcdi__functions_1gace17318abfe875652b61ba0f43824339" kindref="member">mtb_mcdi_start</ref>(<ref refid="structmtb__stc__mcdi__cfg__t" kindref="compound">mtb_stc_mcdi_cfg_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>cfg);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__cplusplus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CY_IP_MXS40MCPASS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MTB_MCDI_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>[]<sp/>END<sp/>OF<sp/>FILE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="mcdi/mtb_mcdi.h"/>
  </compounddef>
</doxygen>
