<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="mtb__mcdi_8c" kind="file" language="C++">
    <compoundname>mtb_mcdi.c</compoundname>
    <includes refid="mtb__mcdi_8h" local="yes">mtb_mcdi.h</includes>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__group__mcdi__functions_1ga51a3bd9bed4fc1317476522d054fb583" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cy_rslt_t</type>
        <definition>cy_rslt_t mtb_mcdi_init</definition>
        <argsstring>(mtb_stc_mcdi_cfg_t const *cfg)</argsstring>
        <name>mtb_mcdi_init</name>
        <param>
          <type><ref refid="structmtb__stc__mcdi__cfg__t" kindref="compound">mtb_stc_mcdi_cfg_t</ref> const *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
<para>Initializes all MCDI Timers and PWMs. </para>
        </briefdescription>
        <detaileddescription>
<para>The HPPASS is a common resource, it is initialized outside of the solution level (it can be common for multiple solutions).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the configuration structure <ref refid="structmtb__stc__mcdi__cfg__t" kindref="compound">mtb_stc_mcdi_cfg_t</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The combined status if initialization of all the Timers and PWMs.</para>
</simplesect>
<simplesect kind="par"><title>Function Usage</title><para><programlisting filename="fut_dat_snippet/main.c"><codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CY_RSLT_SUCCESS<sp/>!=<sp/><ref refid="group__group__mcdi__functions_1ga51a3bd9bed4fc1317476522d054fb583" kindref="member">mtb_mcdi_init</ref>(&amp;myMotor_cfg))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CY_ASSERT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>possible<sp/>error<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__mcdi__functions_1gacbee2416e6dfff366a74a3cea179c2cc" kindref="member">mtb_mcdi_enable</ref>(&amp;myMotor_cfg);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CY_RSLT_SUCCESS<sp/>!=<sp/><ref refid="group__group__mcdi__functions_1gace17318abfe875652b61ba0f43824339" kindref="member">mtb_mcdi_start</ref>(&amp;myMotor_cfg))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CY_ASSERT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>possible<sp/>error<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>after<sp/>some<sp/>time,<sp/>when<sp/>motor<sp/>control<sp/>HW<sp/>has<sp/>to<sp/>be<sp/>stopped<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__mcdi__functions_1gad3dd6a067f1d7921b2ff843cdb62111e" kindref="member">mtb_mcdi_disable</ref>(&amp;myMotor_cfg);</highlight></codeline>
</programlisting> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mcdi/mtb_mcdi.c" line="46" column="11" bodyfile="mcdi/mtb_mcdi.c" bodystart="46" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="group__group__mcdi__functions_1gacbee2416e6dfff366a74a3cea179c2cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cy_rslt_t</type>
        <definition>cy_rslt_t mtb_mcdi_enable</definition>
        <argsstring>(mtb_stc_mcdi_cfg_t const *cfg)</argsstring>
        <name>mtb_mcdi_enable</name>
        <param>
          <type><ref refid="structmtb__stc__mcdi__cfg__t" kindref="compound">mtb_stc_mcdi_cfg_t</ref> const *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
<para>Enables all MCDI Timers and PWMs. </para>
        </briefdescription>
        <detaileddescription>
<para>After this action, they are sensitive to input triggers.</para>
<para><simplesect kind="return"><para>The execution status.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the configuration structure <ref refid="structmtb__stc__mcdi__cfg__t" kindref="compound">mtb_stc_mcdi_cfg_t</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Function Usage</title><para><programlisting filename="fut_dat_snippet/main.c"><codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CY_RSLT_SUCCESS<sp/>!=<sp/><ref refid="group__group__mcdi__functions_1ga51a3bd9bed4fc1317476522d054fb583" kindref="member">mtb_mcdi_init</ref>(&amp;myMotor_cfg))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CY_ASSERT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>possible<sp/>error<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__mcdi__functions_1gacbee2416e6dfff366a74a3cea179c2cc" kindref="member">mtb_mcdi_enable</ref>(&amp;myMotor_cfg);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CY_RSLT_SUCCESS<sp/>!=<sp/><ref refid="group__group__mcdi__functions_1gace17318abfe875652b61ba0f43824339" kindref="member">mtb_mcdi_start</ref>(&amp;myMotor_cfg))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CY_ASSERT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>possible<sp/>error<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>after<sp/>some<sp/>time,<sp/>when<sp/>motor<sp/>control<sp/>HW<sp/>has<sp/>to<sp/>be<sp/>stopped<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__mcdi__functions_1gad3dd6a067f1d7921b2ff843cdb62111e" kindref="member">mtb_mcdi_disable</ref>(&amp;myMotor_cfg);</highlight></codeline>
</programlisting> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mcdi/mtb_mcdi.c" line="73" column="11" bodyfile="mcdi/mtb_mcdi.c" bodystart="73" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="group__group__mcdi__functions_1gad3dd6a067f1d7921b2ff843cdb62111e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cy_rslt_t</type>
        <definition>cy_rslt_t mtb_mcdi_disable</definition>
        <argsstring>(mtb_stc_mcdi_cfg_t const *cfg)</argsstring>
        <name>mtb_mcdi_disable</name>
        <param>
          <type><ref refid="structmtb__stc__mcdi__cfg__t" kindref="compound">mtb_stc_mcdi_cfg_t</ref> const *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
<para>Stops and Disables all MCDI Timers and PWMs. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The execution status.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the configuration structure <ref refid="structmtb__stc__mcdi__cfg__t" kindref="compound">mtb_stc_mcdi_cfg_t</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Function Usage</title><para><programlisting filename="fut_dat_snippet/main.c"><codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CY_RSLT_SUCCESS<sp/>!=<sp/><ref refid="group__group__mcdi__functions_1ga51a3bd9bed4fc1317476522d054fb583" kindref="member">mtb_mcdi_init</ref>(&amp;myMotor_cfg))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CY_ASSERT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>possible<sp/>error<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__mcdi__functions_1gacbee2416e6dfff366a74a3cea179c2cc" kindref="member">mtb_mcdi_enable</ref>(&amp;myMotor_cfg);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CY_RSLT_SUCCESS<sp/>!=<sp/><ref refid="group__group__mcdi__functions_1gace17318abfe875652b61ba0f43824339" kindref="member">mtb_mcdi_start</ref>(&amp;myMotor_cfg))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CY_ASSERT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>possible<sp/>error<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>after<sp/>some<sp/>time,<sp/>when<sp/>motor<sp/>control<sp/>HW<sp/>has<sp/>to<sp/>be<sp/>stopped<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__mcdi__functions_1gad3dd6a067f1d7921b2ff843cdb62111e" kindref="member">mtb_mcdi_disable</ref>(&amp;myMotor_cfg);</highlight></codeline>
</programlisting> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mcdi/mtb_mcdi.c" line="108" column="11" bodyfile="mcdi/mtb_mcdi.c" bodystart="108" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="group__group__mcdi__functions_1gace17318abfe875652b61ba0f43824339" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cy_rslt_t</type>
        <definition>cy_rslt_t mtb_mcdi_start</definition>
        <argsstring>(mtb_stc_mcdi_cfg_t const *cfg)</argsstring>
        <name>mtb_mcdi_start</name>
        <param>
          <type><ref refid="structmtb__stc__mcdi__cfg__t" kindref="compound">mtb_stc_mcdi_cfg_t</ref> const *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
<para>Starts all the PWMs and Sync and Fast Timers synchronously. </para>
        </briefdescription>
        <detaileddescription>
<para>Starts the Slow Timer asynchronously after that. The HPPASS is a common resource, it is configured and started before this function execution.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the configuration structure <ref refid="structmtb__stc__mcdi__cfg__t" kindref="compound">mtb_stc_mcdi_cfg_t</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The Cy_TrigMux_SwTrigger status.</para>
</simplesect>
<simplesect kind="par"><title>Function Usage</title><para><programlisting filename="fut_dat_snippet/main.c"><codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CY_RSLT_SUCCESS<sp/>!=<sp/><ref refid="group__group__mcdi__functions_1ga51a3bd9bed4fc1317476522d054fb583" kindref="member">mtb_mcdi_init</ref>(&amp;myMotor_cfg))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CY_ASSERT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>possible<sp/>error<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__mcdi__functions_1gacbee2416e6dfff366a74a3cea179c2cc" kindref="member">mtb_mcdi_enable</ref>(&amp;myMotor_cfg);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CY_RSLT_SUCCESS<sp/>!=<sp/><ref refid="group__group__mcdi__functions_1gace17318abfe875652b61ba0f43824339" kindref="member">mtb_mcdi_start</ref>(&amp;myMotor_cfg))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CY_ASSERT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>possible<sp/>error<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>after<sp/>some<sp/>time,<sp/>when<sp/>motor<sp/>control<sp/>HW<sp/>has<sp/>to<sp/>be<sp/>stopped<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__group__mcdi__functions_1gad3dd6a067f1d7921b2ff843cdb62111e" kindref="member">mtb_mcdi_disable</ref>(&amp;myMotor_cfg);</highlight></codeline>
</programlisting> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mcdi/mtb_mcdi.c" line="141" column="11" bodyfile="mcdi/mtb_mcdi.c" bodystart="141" bodyend="151"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>\file<sp/>mtb_mcdi.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>\version<sp/>1.0</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>\brief</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>Provides<sp/>API<sp/>implementation<sp/>for<sp/>the<sp/>MCDI<sp/>library.</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*</highlight></codeline>
<codeline lineno="8"><highlight class="comment">********************************************************************************</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/>\copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>(c)<sp/>(2024),<sp/>Cypress<sp/>Semiconductor<sp/>Corporation<sp/>(an<sp/>Infineon<sp/>company)<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/>an<sp/>affiliate<sp/>of<sp/>Cypress<sp/>Semiconductor<sp/>Corporation.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="12"><highlight class="comment">********************************************************************************</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/>This<sp/>software,<sp/>including<sp/>source<sp/>code,<sp/>documentation<sp/>and<sp/>related<sp/>materials</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/>(&quot;Software&quot;)<sp/>is<sp/>owned<sp/>by<sp/>Cypress<sp/>Semiconductor<sp/>Corporation<sp/>or<sp/>one<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/>affiliates<sp/>(&quot;Cypress&quot;)<sp/>and<sp/>is<sp/>protected<sp/>by<sp/>and<sp/>subject<sp/>to<sp/>worldwide<sp/>patent</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*<sp/>protection<sp/>(United<sp/>States<sp/>and<sp/>foreign),<sp/>United<sp/>States<sp/>copyright<sp/>laws<sp/>and</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*<sp/>international<sp/>treaty<sp/>provisions.<sp/>Therefore,<sp/>you<sp/>may<sp/>use<sp/>this<sp/>Software<sp/>only</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*<sp/>as<sp/>provided<sp/>in<sp/>the<sp/>license<sp/>agreement<sp/>accompanying<sp/>the<sp/>software<sp/>package<sp/>from</highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/>which<sp/>you<sp/>obtained<sp/>this<sp/>Software<sp/>(&quot;EULA&quot;).</highlight></codeline>
<codeline lineno="20"><highlight class="comment">*</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*<sp/>If<sp/>no<sp/>EULA<sp/>applies,<sp/>Cypress<sp/>hereby<sp/>grants<sp/>you<sp/>a<sp/>personal,<sp/>non-exclusive,</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*<sp/>non-transferable<sp/>license<sp/>to<sp/>copy,<sp/>modify,<sp/>and<sp/>compile<sp/>the<sp/>Software<sp/>source</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*<sp/>code<sp/>solely<sp/>for<sp/>use<sp/>in<sp/>connection<sp/>with<sp/>Cypress&apos;s<sp/>integrated<sp/>circuit<sp/>products.</highlight></codeline>
<codeline lineno="24"><highlight class="comment">*<sp/>Any<sp/>reproduction,<sp/>modification,<sp/>translation,<sp/>compilation,<sp/>or<sp/>representation</highlight></codeline>
<codeline lineno="25"><highlight class="comment">*<sp/>of<sp/>this<sp/>Software<sp/>except<sp/>as<sp/>specified<sp/>above<sp/>is<sp/>prohibited<sp/>without<sp/>the<sp/>express</highlight></codeline>
<codeline lineno="26"><highlight class="comment">*<sp/>written<sp/>permission<sp/>of<sp/>Cypress.</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*<sp/>Disclaimer:<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>AS-IS,<sp/>WITH<sp/>NO<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="29"><highlight class="comment">*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>NONINFRINGEMENT,<sp/>IMPLIED</highlight></codeline>
<codeline lineno="30"><highlight class="comment">*<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/>Cypress</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*<sp/>reserves<sp/>the<sp/>right<sp/>to<sp/>make<sp/>changes<sp/>to<sp/>the<sp/>Software<sp/>without<sp/>notice.<sp/>Cypress</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*<sp/>does<sp/>not<sp/>assume<sp/>any<sp/>liability<sp/>arising<sp/>out<sp/>of<sp/>the<sp/>application<sp/>or<sp/>use<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="33"><highlight class="comment">*<sp/>Software<sp/>or<sp/>any<sp/>product<sp/>or<sp/>circuit<sp/>described<sp/>in<sp/>the<sp/>Software.<sp/>Cypress<sp/>does</highlight></codeline>
<codeline lineno="34"><highlight class="comment">*<sp/>not<sp/>authorize<sp/>its<sp/>products<sp/>for<sp/>use<sp/>in<sp/>any<sp/>products<sp/>where<sp/>a<sp/>malfunction<sp/>or</highlight></codeline>
<codeline lineno="35"><highlight class="comment">*<sp/>failure<sp/>of<sp/>the<sp/>Cypress<sp/>product<sp/>may<sp/>reasonably<sp/>be<sp/>expected<sp/>to<sp/>result<sp/>in</highlight></codeline>
<codeline lineno="36"><highlight class="comment">*<sp/>significant<sp/>property<sp/>damage,<sp/>injury<sp/>or<sp/>death<sp/>(&quot;High<sp/>Risk<sp/>Product&quot;).<sp/>By</highlight></codeline>
<codeline lineno="37"><highlight class="comment">*<sp/>including<sp/>Cypress&apos;s<sp/>product<sp/>in<sp/>a<sp/>High<sp/>Risk<sp/>Product,<sp/>the<sp/>manufacturer<sp/>of<sp/>such</highlight></codeline>
<codeline lineno="38"><highlight class="comment">*<sp/>system<sp/>or<sp/>application<sp/>assumes<sp/>all<sp/>risk<sp/>of<sp/>such<sp/>use<sp/>and<sp/>in<sp/>doing<sp/>so<sp/>agrees<sp/>to</highlight></codeline>
<codeline lineno="39"><highlight class="comment">*<sp/>indemnify<sp/>Cypress<sp/>against<sp/>all<sp/>liability.</highlight></codeline>
<codeline lineno="40"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mtb_mcdi.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CY_IP_MXS40MCPASS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">cy_rslt_t<sp/><ref refid="group__group__mcdi__functions_1ga51a3bd9bed4fc1317476522d054fb583" kindref="member">mtb_mcdi_init</ref>(<ref refid="structmtb__stc__mcdi__cfg__t" kindref="compound">mtb_stc_mcdi_cfg_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>cfg)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>cy_rslt_t<sp/>status<sp/>=<sp/>(cy_rslt_t)(<ref refid="group__group__mcdi__status_1gaa124ac06d698702da0fbf6cb44be1dec" kindref="member">cy_en_mcdi_status_t</ref>)<ref refid="group__group__mcdi__status_1ggaa124ac06d698702da0fbf6cb44be1decabcfa07c2f7dd3231b671d732da06c222" kindref="member">CY_MCDI_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1a4b051ec3ba9486208de85dc014a0a12b" kindref="member">topo</ref><sp/>==<sp/><ref refid="group__group__mcdi__topologies_1gga63b341bbaebe7f4fede8361e0501911fa4b59a0c639ea147f2ac614a9506607fd" kindref="member">MTB_MCDI_3SHUNT</ref>)<sp/>||<sp/>(cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1a4b051ec3ba9486208de85dc014a0a12b" kindref="member">topo</ref><sp/>==<sp/><ref refid="group__group__mcdi__topologies_1gga63b341bbaebe7f4fede8361e0501911fa08d037d41b8b1b4e94fe75e23ea6c707" kindref="member">MTB_MCDI_1SHUNT</ref>))</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0UL;<sp/>i<sp/>&lt;<sp/>CY_MCDI_PWM_NUM;<sp/>i++)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>|=</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(cy_rslt_t)Cy_TCPWM_PWM_Init(cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1a16afdb3ec24b82500eed1d04367dc4a2" kindref="member">tcpwmBase</ref>,<sp/>cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1a7a78a6301fb0c01946fef6ef9ae6ec59" kindref="member">pwm</ref>[i].<ref refid="structmtb__stc__mcdi__pwm__t_1a7437a89dc1fcff47c6cdda36a7f4e247" kindref="member">idx</ref>,<sp/>cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1a7a78a6301fb0c01946fef6ef9ae6ec59" kindref="member">pwm</ref>[i].<ref refid="structmtb__stc__mcdi__pwm__t_1a691988bc33f0e8cb6a24755232a61704" kindref="member">cfg</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0UL;<sp/>i<sp/>&lt;<sp/>CY_MCDI_TMR_NUM;<sp/>i++)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>|=</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(cy_rslt_t)Cy_TCPWM_Counter_Init(cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1a16afdb3ec24b82500eed1d04367dc4a2" kindref="member">tcpwmBase</ref>,<sp/>cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1a880ef0e04e364c174577d4562b8ca690" kindref="member">tmr</ref>[i].<ref refid="structmtb__stc__mcdi__tmr__t_1a3a69fbba2642dd3eb85d2ed0ef2b002f" kindref="member">idx</ref>,<sp/>cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1a880ef0e04e364c174577d4562b8ca690" kindref="member">tmr</ref>[i].<ref refid="structmtb__stc__mcdi__tmr__t_1aa823225c1c46fe8f7dc795517dec24f1" kindref="member">cfg</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>(cy_rslt_t)(<ref refid="group__group__mcdi__status_1gaa124ac06d698702da0fbf6cb44be1dec" kindref="member">cy_en_mcdi_status_t</ref>)<ref refid="group__group__mcdi__status_1ggaa124ac06d698702da0fbf6cb44be1decadd0e8e2969e8210d64601cae9b7ddd22" kindref="member">CY_MCDI_BAD_PARAM</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">cy_rslt_t<sp/><ref refid="group__group__mcdi__functions_1gacbee2416e6dfff366a74a3cea179c2cc" kindref="member">mtb_mcdi_enable</ref>(<ref refid="structmtb__stc__mcdi__cfg__t" kindref="compound">mtb_stc_mcdi_cfg_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>cfg)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0UL;<sp/>i<sp/>&lt;<sp/>CY_MCDI_PWM_NUM;<sp/>i++)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cy_TCPWM_Enable_Single(cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1a16afdb3ec24b82500eed1d04367dc4a2" kindref="member">tcpwmBase</ref>,<sp/>cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1a7a78a6301fb0c01946fef6ef9ae6ec59" kindref="member">pwm</ref>[i].<ref refid="structmtb__stc__mcdi__pwm__t_1a7437a89dc1fcff47c6cdda36a7f4e247" kindref="member">idx</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0UL;<sp/>i<sp/>&lt;<sp/>CY_MCDI_TMR_NUM;<sp/>i++)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cy_TCPWM_Enable_Single(cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1a16afdb3ec24b82500eed1d04367dc4a2" kindref="member">tcpwmBase</ref>,<sp/>cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1a880ef0e04e364c174577d4562b8ca690" kindref="member">tmr</ref>[i].<ref refid="structmtb__stc__mcdi__tmr__t_1a3a69fbba2642dd3eb85d2ed0ef2b002f" kindref="member">idx</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>!=<sp/>cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1ac9fe41412514925df059696d11affada" kindref="member">fault</ref>)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cy_GPIO_SetInterruptMask(cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1ac9fe41412514925df059696d11affada" kindref="member">fault</ref>-&gt;<ref refid="structmtb__stc__mcdi__gpio__t_1ae44c0a7eace95762b73b8e9dd5568710" kindref="member">base</ref>,<sp/>cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1ac9fe41412514925df059696d11affada" kindref="member">fault</ref>-&gt;<ref refid="structmtb__stc__mcdi__gpio__t_1a27626771701aaec9a3c61e27e96795aa" kindref="member">pinNum</ref>,<sp/>1UL);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>Cy_TCPWM_SetInterruptMask(cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1a16afdb3ec24b82500eed1d04367dc4a2" kindref="member">tcpwmBase</ref>,<sp/>cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1a880ef0e04e364c174577d4562b8ca690" kindref="member">tmr</ref>[<ref refid="group__group__mcdi__macros_1gabf52c07aff1216be73dada15234a3810" kindref="member">MTB_MCDI_TMR_SLOW</ref>].<ref refid="structmtb__stc__mcdi__tmr__t_1a3a69fbba2642dd3eb85d2ed0ef2b002f" kindref="member">idx</ref>,<sp/>cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1a223c3b97ac01cf97c2d80853a816f3cd" kindref="member">slowIntrMsk</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__group__mcdi__topologies_1gga63b341bbaebe7f4fede8361e0501911fa4b59a0c639ea147f2ac614a9506607fd" kindref="member">MTB_MCDI_3SHUNT</ref><sp/>==<sp/>cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1a4b051ec3ba9486208de85dc014a0a12b" kindref="member">topo</ref>)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cy_HPPASS_SAR_Result_SetInterruptMask(</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1aa0eb66b98be48709d6ca8bcdb3043f19" kindref="member">fastIntrMsk</ref><sp/>|<sp/>Cy_HPPASS_SAR_Result_GetInterruptMask());</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>MTB_MCDI_1SHUNT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cy_TCPWM_SetInterruptMask(cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1a16afdb3ec24b82500eed1d04367dc4a2" kindref="member">tcpwmBase</ref>,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1a880ef0e04e364c174577d4562b8ca690" kindref="member">tmr</ref>[<ref refid="group__group__mcdi__macros_1gad236de1b26014108d39dc38824f395e9" kindref="member">MTB_MCDI_TMR_FAST</ref>].<ref refid="structmtb__stc__mcdi__tmr__t_1a3a69fbba2642dd3eb85d2ed0ef2b002f" kindref="member">idx</ref>,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1aa0eb66b98be48709d6ca8bcdb3043f19" kindref="member">fastIntrMsk</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CY_RSLT_SUCCESS;<sp/></highlight><highlight class="comment">/*<sp/>For<sp/>future<sp/>capability<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">cy_rslt_t<sp/><ref refid="group__group__mcdi__functions_1gad3dd6a067f1d7921b2ff843cdb62111e" kindref="member">mtb_mcdi_disable</ref>(<ref refid="structmtb__stc__mcdi__cfg__t" kindref="compound">mtb_stc_mcdi_cfg_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>cfg)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__group__mcdi__topologies_1gga63b341bbaebe7f4fede8361e0501911fa4b59a0c639ea147f2ac614a9506607fd" kindref="member">MTB_MCDI_3SHUNT</ref><sp/>==<sp/>cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1a4b051ec3ba9486208de85dc014a0a12b" kindref="member">topo</ref>)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cy_HPPASS_SAR_Result_SetInterruptMask(</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1aa0eb66b98be48709d6ca8bcdb3043f19" kindref="member">fastIntrMsk</ref><sp/>&amp;<sp/>Cy_HPPASS_SAR_Result_GetInterruptMask());</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cy_TCPWM_SetInterruptMask(cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1a16afdb3ec24b82500eed1d04367dc4a2" kindref="member">tcpwmBase</ref>,<sp/>cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1a880ef0e04e364c174577d4562b8ca690" kindref="member">tmr</ref>[<ref refid="group__group__mcdi__macros_1gad236de1b26014108d39dc38824f395e9" kindref="member">MTB_MCDI_TMR_FAST</ref>].<ref refid="structmtb__stc__mcdi__tmr__t_1a3a69fbba2642dd3eb85d2ed0ef2b002f" kindref="member">idx</ref>,<sp/>0UL);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>Cy_TCPWM_SetInterruptMask(cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1a16afdb3ec24b82500eed1d04367dc4a2" kindref="member">tcpwmBase</ref>,<sp/>cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1a880ef0e04e364c174577d4562b8ca690" kindref="member">tmr</ref>[<ref refid="group__group__mcdi__macros_1gabf52c07aff1216be73dada15234a3810" kindref="member">MTB_MCDI_TMR_SLOW</ref>].<ref refid="structmtb__stc__mcdi__tmr__t_1a3a69fbba2642dd3eb85d2ed0ef2b002f" kindref="member">idx</ref>,<sp/>0UL);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>!=<sp/>cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1ac9fe41412514925df059696d11affada" kindref="member">fault</ref>)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cy_GPIO_SetInterruptMask(cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1ac9fe41412514925df059696d11affada" kindref="member">fault</ref>-&gt;<ref refid="structmtb__stc__mcdi__gpio__t_1ae44c0a7eace95762b73b8e9dd5568710" kindref="member">base</ref>,<sp/>cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1ac9fe41412514925df059696d11affada" kindref="member">fault</ref>-&gt;<ref refid="structmtb__stc__mcdi__gpio__t_1a27626771701aaec9a3c61e27e96795aa" kindref="member">pinNum</ref>,<sp/>0UL);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0UL;<sp/>i<sp/>&lt;<sp/>CY_MCDI_PWM_NUM;<sp/>i++)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cy_TCPWM_Disable_Single(cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1a16afdb3ec24b82500eed1d04367dc4a2" kindref="member">tcpwmBase</ref>,<sp/>cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1a7a78a6301fb0c01946fef6ef9ae6ec59" kindref="member">pwm</ref>[i].<ref refid="structmtb__stc__mcdi__pwm__t_1a7437a89dc1fcff47c6cdda36a7f4e247" kindref="member">idx</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0UL;<sp/>i<sp/>&lt;<sp/>CY_MCDI_TMR_NUM;<sp/>i++)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cy_TCPWM_Disable_Single(cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1a16afdb3ec24b82500eed1d04367dc4a2" kindref="member">tcpwmBase</ref>,<sp/>cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1a880ef0e04e364c174577d4562b8ca690" kindref="member">tmr</ref>[i].<ref refid="structmtb__stc__mcdi__tmr__t_1a3a69fbba2642dd3eb85d2ed0ef2b002f" kindref="member">idx</ref>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CY_RSLT_SUCCESS;<sp/></highlight><highlight class="comment">/*<sp/>For<sp/>future<sp/>capability<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">cy_rslt_t<sp/><ref refid="group__group__mcdi__functions_1gace17318abfe875652b61ba0f43824339" kindref="member">mtb_mcdi_start</ref>(<ref refid="structmtb__stc__mcdi__cfg__t" kindref="compound">mtb_stc_mcdi_cfg_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>cfg)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>cy_rslt_t<sp/>status<sp/>=<sp/>(cy_rslt_t)Cy_TrigMux_SwTrigger(cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1a55c3a43534752f86cf20fce469fe5247" kindref="member">syncStartTrig</ref>,<sp/>CY_TRIGGER_TWO_CYCLES);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CY_RSLT_SUCCESS<sp/>==<sp/>status)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cy_TCPWM_TriggerStart_Single(cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1a16afdb3ec24b82500eed1d04367dc4a2" kindref="member">tcpwmBase</ref>,<sp/>cfg-&gt;<ref refid="structmtb__stc__mcdi__cfg__t_1a880ef0e04e364c174577d4562b8ca690" kindref="member">tmr</ref>[<ref refid="group__group__mcdi__macros_1gabf52c07aff1216be73dada15234a3810" kindref="member">MTB_MCDI_TMR_SLOW</ref>].<ref refid="structmtb__stc__mcdi__tmr__t_1a3a69fbba2642dd3eb85d2ed0ef2b002f" kindref="member">idx</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CY_IP_MXS40MCPASS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>[]<sp/>END<sp/>OF<sp/>FILE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="mcdi/mtb_mcdi.c"/>
  </compounddef>
</doxygen>
